{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-98a1510ce12f336c.js","src/index.js","node_modules/@100mslive/hms-video-store/dist/index.js","node_modules/@100mslive/hms-video-store/src/core/hmsSDKStore/HMSReactiveStore.ts","node_modules/@100mslive/hms-video-store/src/core/hmsSDKStore/HMSNotifications.ts","node_modules/@100mslive/hms-video-store/src/core/schema/room.ts","node_modules/@100mslive/hms-video-store/src/core/schema/schema.ts","node_modules/@100mslive/hms-video-store/src/core/schema/message.ts","node_modules/@100mslive/hms-video-store/src/core/schema/notification.ts","node_modules/@100mslive/hms-video-store/src/core/schema/playlist.ts","node_modules/@100mslive/hms-video-store/src/core/hmsSDKStore/sdkTypes.ts","node_modules/@100mslive/hms-video-store/src/core/hmsSDKStore/common/mapping.ts","node_modules/@100mslive/hms-video-store/src/core/selectors/selectors.ts","node_modules/@100mslive/hms-video-store/src/core/selectors/selectorUtils.ts","node_modules/@100mslive/hms-video-store/src/core/selectors/playlistselectors.ts","node_modules/@100mslive/hms-video-store/src/core/selectors/selectorsByID.ts","node_modules/@100mslive/hms-video-store/src/core/selectors/common.ts","node_modules/@100mslive/hms-video-store/src/common/ui-logger.ts","node_modules/@100mslive/hms-video-store/src/core/selectors/derivedSelectors.ts","node_modules/@100mslive/hms-video-store/src/core/selectors/selectorsByReference.ts","node_modules/@100mslive/hms-video-store/src/core/hmsSDKStore/HMSSDKActions.ts","node_modules/@100mslive/hms-video-store/src/core/hmsSDKStore/sdkUtils/sdkUtils.ts","node_modules/@100mslive/hms-video-store/src/core/hmsSDKStore/sdkUtils/storeMergeUtils.ts","node_modules/@100mslive/hms-video-store/src/core/hmsSDKStore/adapter.ts","node_modules/@100mslive/hms-video-store/src/core/hmsSDKStore/HMSPlaylist.ts","node_modules/@100mslive/hms-video-store/src/core/hmsSDKStore/HMSSessionStore.ts","node_modules/@100mslive/hms-video-store/src/controller/beam/BeamSpeakerLabelsLogger.ts","node_modules/@100mslive/hms-video-store/src/common/storeName.ts","node_modules/@100mslive/hms-video-store/src/controller/beam/BeamController.ts","node_modules/@100mslive/hms-video-store/src/core/webrtc-stats/webrtc-stats-store.ts","node_modules/@100mslive/hms-video-store/src/core/webrtc-stats/HMSStats.ts","node_modules/@100mslive/hms-video-store/src/core/webrtc-stats/selectors.ts","node_modules/immer/dist/immer.esm.js","node_modules/immer/src/utils/errors.ts","node_modules/immer/src/utils/common.ts","node_modules/immer/src/utils/plugins.ts","node_modules/immer/src/core/scope.ts","node_modules/immer/src/core/finalize.ts","node_modules/immer/src/core/proxy.ts","node_modules/immer/src/core/immerClass.ts","node_modules/immer/src/core/current.ts","node_modules/immer/src/plugins/es5.ts","node_modules/immer/src/plugins/patches.ts","node_modules/immer/src/plugins/mapset.ts","node_modules/immer/src/plugins/all.ts","node_modules/immer/src/immer.ts","node_modules/immer/src/utils/env.ts","node_modules/@parcel/transformer-js/src/esmodule-helpers.js","node_modules/zustand/shallow.js","node_modules/zustand/vanilla.js","node_modules/@100mslive/hms-video/dist/index.js","node_modules/@100mslive/hms-video/src/index.ts","node_modules/@100mslive/hms-video/src/utils/support.ts","node_modules/@100mslive/hms-video/src/utils/local-storage.ts","node_modules/@100mslive/hms-video/src/utils/local-storage-polyfill.ts","node_modules/@100mslive/hms-video/src/utils/logger.ts","node_modules/@100mslive/hms-video/src/sdk/models/HMSMessage.ts","node_modules/@100mslive/hms-video/src/sdk/models/HMSRoom.ts","node_modules/@100mslive/hms-video/src/sdk/models/peer/HMSPeer.ts","node_modules/@100mslive/hms-video/src/utils/id-factory.ts","node_modules/@100mslive/hms-video/src/sdk/models/peer/HMSLocalPeer.ts","node_modules/@100mslive/hms-video/src/sdk/models/peer/HMSRemotePeer.ts","node_modules/@100mslive/hms-video/src/sdk/LocalTrackManager.ts","node_modules/@100mslive/hms-video/src/analytics/AnalyticsEvent.ts","node_modules/@100mslive/hms-video/src/analytics/AnalyticsEventDomains.ts","node_modules/@100mslive/hms-video/src/analytics/domain-analytics.ts","node_modules/@100mslive/hms-video/src/utils/user-agent.ts","node_modules/@100mslive/hms-video/src/analytics/AnalyticsEventLevel.ts","node_modules/@100mslive/hms-video/src/error/HMSException.ts","node_modules/@100mslive/hms-video/src/analytics/AnalyticsEventFactory.ts","node_modules/@100mslive/hms-video/src/analytics/AnalyticsTimer.ts","node_modules/@100mslive/hms-video/src/error/ErrorCodes.ts","node_modules/@100mslive/hms-video/src/signal/jsonrpc/models.ts","node_modules/@100mslive/hms-video/src/error/ErrorFactory.ts","node_modules/@100mslive/hms-video/src/error/utils.ts","node_modules/@100mslive/hms-video/src/interfaces/update-listener.ts","node_modules/@100mslive/hms-video/src/interfaces/simulcast-layers.ts","node_modules/@100mslive/hms-video/src/interfaces/track-settings.ts","node_modules/@100mslive/hms-video/src/interfaces/devices.ts","node_modules/@100mslive/hms-video/src/interfaces/playlist.ts","node_modules/@100mslive/hms-video/src/media/settings/HMSAudioTrackSettings.ts","node_modules/@100mslive/hms-video/src/media/settings/HMSVideoTrackSettings.ts","node_modules/@100mslive/hms-video/src/media/settings/HMSTrackSettings.ts","node_modules/@100mslive/hms-video/src/media/streams/HMSMediaStream.ts","node_modules/@100mslive/hms-video/src/utils/json.ts","node_modules/@100mslive/hms-video/src/media/tracks/HMSTrack.ts","node_modules/@100mslive/hms-video/src/media/tracks/HMSTrackType.ts","node_modules/@100mslive/hms-video/src/media/streams/HMSRemoteStream.ts","node_modules/@100mslive/hms-video/src/media/tracks/HMSAudioTrack.ts","node_modules/@100mslive/hms-video/src/device-manager/DeviceStorage.ts","node_modules/@100mslive/hms-video/src/plugins/audio/HMSAudioPlugin.ts","node_modules/@100mslive/hms-video/src/analytics/MediaPluginsAnalyticsFactory.ts","node_modules/@100mslive/hms-video/src/plugins/audio/AudioPluginsAnalytics.ts","node_modules/@100mslive/hms-video/src/plugins/audio/HMSAudioPluginsManager.ts","node_modules/@100mslive/hms-video/src/utils/track.ts","node_modules/@100mslive/hms-video/src/utils/media.ts","node_modules/@100mslive/hms-video/src/utils/queue.ts","node_modules/@100mslive/hms-video/src/utils/timer-utils.ts","node_modules/@100mslive/hms-video/src/utils/track-audio-level-monitor.ts","node_modules/@100mslive/hms-video/src/media/tracks/HMSLocalAudioTrack.ts","node_modules/@100mslive/hms-video/src/media/tracks/HMSRemoteAudioTrack.ts","node_modules/@100mslive/hms-video/src/media/tracks/HMSVideoTrack.ts","node_modules/@100mslive/hms-video/src/media/tracks/VideoElementManager.ts","node_modules/@100mslive/hms-video/src/media/tracks/trackUtils.ts","node_modules/@100mslive/hms-video/src/utils/intersection-observer.ts","node_modules/@100mslive/hms-video/src/utils/resize-observer.ts","node_modules/@100mslive/hms-video/src/plugins/video/HMSVideoPlugin.ts","node_modules/@100mslive/hms-video/src/utils/math.ts","node_modules/@100mslive/hms-video/src/plugins/video/VideoPluginsAnalytics.ts","node_modules/@100mslive/hms-video/src/plugins/video/HMSVideoPluginsManager.ts","node_modules/@100mslive/hms-video/src/media/tracks/HMSLocalVideoTrack.ts","node_modules/@100mslive/hms-video/src/utils/constants.ts","node_modules/@100mslive/hms-video/src/media/tracks/HMSRemoteVideoTrack.ts","node_modules/@100mslive/hms-video/src/media/streams/HMSLocalStream.ts","node_modules/@100mslive/hms-video/src/sdk/NetworkTestManager.ts","node_modules/@100mslive/hms-video/src/sdk/RoleChangeManager.ts","node_modules/@100mslive/hms-video/src/analytics/HTTPAnalyticsTransport.ts","node_modules/@100mslive/hms-video/src/sdk/store/Store.ts","node_modules/@100mslive/hms-video/src/sdk/WakeLockManager.ts","node_modules/@100mslive/hms-video/src/analytics/AnalyticsEventsService.ts","node_modules/@100mslive/hms-video/src/audio-sink-manager/AudioSinkManager.ts","node_modules/@100mslive/hms-video/src/device-manager/DeviceManager.ts","node_modules/@100mslive/hms-video/src/device-manager/AudioOutputManager.ts","node_modules/@100mslive/hms-video/src/events/EventBus.ts","node_modules/@100mslive/hms-video/src/events/HMSInternalEvent.ts","node_modules/@100mslive/hms-video/src/notification-manager/managers/ActiveSpeakerManager.ts","node_modules/@100mslive/hms-video/src/notification-manager/HMSNotificationMethod.ts","node_modules/@100mslive/hms-video/src/notification-manager/managers/BroadcastManager.ts","node_modules/@100mslive/hms-video/src/notification-manager/managers/ConnectionQualityManager.ts","node_modules/@100mslive/hms-video/src/notification-manager/managers/PeerListManager.ts","node_modules/@100mslive/hms-video/src/utils/date.ts","node_modules/@100mslive/hms-video/src/notification-manager/managers/PeerManager.ts","node_modules/@100mslive/hms-video/src/notification-manager/managers/PolicyChangeManager.ts","node_modules/@100mslive/hms-video/src/notification-manager/managers/RequestManager.ts","node_modules/@100mslive/hms-video/src/notification-manager/managers/RoomUpdateManager.ts","node_modules/@100mslive/hms-video/src/notification-manager/managers/SessionMetadataManager.ts","node_modules/@100mslive/hms-video/src/notification-manager/managers/TrackManager.ts","node_modules/@100mslive/hms-video/src/notification-manager/NotificationManager.ts","node_modules/@100mslive/hms-video/src/notification-manager/HMSNotifications.ts","node_modules/@100mslive/hms-video/src/playlist-manager/AudioContextManager.ts","node_modules/@100mslive/hms-video/src/utils/typed-event-emitter.ts","node_modules/@100mslive/hms-video/src/playlist-manager/PlaylistAudioManager.ts","node_modules/@100mslive/hms-video/src/playlist-manager/PlaylistVideoManager.ts","node_modules/@100mslive/hms-video/src/playlist-manager/PlaylistManager.ts","node_modules/@100mslive/hms-video/src/session-store/index.ts","node_modules/@100mslive/hms-video/src/transport/models/JoinParameters.ts","node_modules/@100mslive/hms-video/src/transport/models/TransportFailureCategory.ts","node_modules/@100mslive/hms-video/src/transport/models/TransportState.ts","node_modules/@100mslive/hms-video/src/utils/promise.ts","node_modules/@100mslive/hms-video/src/transport/RetryScheduler.ts","node_modules/@100mslive/hms-video/src/analytics/signal-transport/LocalStoageEvents.ts","node_modules/@100mslive/hms-video/src/analytics/AnalyticsTransport.ts","node_modules/@100mslive/hms-video/src/analytics/signal-transport/SignalAnalyticsTransport.ts","node_modules/@100mslive/hms-video/src/connection/model.ts","node_modules/@100mslive/hms-video/src/utils/session-description.ts","node_modules/@100mslive/hms-video/src/utils/validations.ts","node_modules/@100mslive/hms-video/src/connection/HMSConnection.ts","node_modules/@100mslive/hms-video/src/connection/publish/publishConnection.ts","node_modules/@100mslive/hms-video/src/connection/subscribe/subscribeConnection.ts","node_modules/@100mslive/hms-video/src/connection/HMSDataChannel.ts","node_modules/@100mslive/hms-video/src/rtc-stats/utils.ts","node_modules/@100mslive/hms-video/src/rtc-stats/HMSWebrtcStats.ts","node_modules/@100mslive/hms-video/src/rtc-stats/HMSWebrtcInternals.ts","node_modules/@100mslive/hms-video/src/signal/init/index.ts","node_modules/@100mslive/hms-video/src/signal/init/models.ts","node_modules/@100mslive/hms-video/src/signal/jsonrpc/index.ts","node_modules/@100mslive/hms-video/src/utils/network-info.ts","node_modules/@100mslive/hms-video/src/transport/index.ts","node_modules/@100mslive/hms-video/src/utils/fetch.ts","node_modules/@100mslive/hms-video/src/utils/jwt.ts","node_modules/@100mslive/hms-video/src/sdk/index.ts","node_modules/@100mslive/hms-video/src/utils/device-error.ts","node_modules/process/browser.js","node_modules/webrtc-adapter/src/js/adapter_core.js","node_modules/webrtc-adapter/src/js/adapter_factory.js","node_modules/webrtc-adapter/src/js/utils.js","node_modules/webrtc-adapter/src/js/chrome/chrome_shim.js","node_modules/webrtc-adapter/src/js/chrome/getusermedia.js","node_modules/webrtc-adapter/src/js/chrome/getdisplaymedia.js","node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js","node_modules/webrtc-adapter/src/js/firefox/getusermedia.js","node_modules/webrtc-adapter/src/js/firefox/getdisplaymedia.js","node_modules/webrtc-adapter/src/js/safari/safari_shim.js","node_modules/webrtc-adapter/src/js/common_shim.js","node_modules/sdp/sdp.js","node_modules/ua-parser-js/src/ua-parser.js","node_modules/uuid/dist/esm-browser/index.js","node_modules/uuid/dist/esm-browser/v4.js","node_modules/uuid/dist/esm-browser/rng.js","node_modules/uuid/dist/esm-browser/stringify.js","node_modules/uuid/dist/esm-browser/validate.js","node_modules/uuid/dist/esm-browser/regex.js","node_modules/eventemitter2/lib/eventemitter2.js","node_modules/sdp-transform/lib/index.js","node_modules/sdp-transform/lib/parser.js","node_modules/sdp-transform/lib/grammar.js","node_modules/sdp-transform/lib/writer.js","node_modules/reselect/es/index.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"890e741a975ef6c8\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, globalThis, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\n\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets\n/*: {|[string]: boolean|} */\n, assetsToDispose\n/*: Array<[ParcelRequire, string]> */\n, assetsToAccept\n/*: Array<[ParcelRequire, string]> */\n;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\n\nfunction getPort() {\n  return HMR_PORT || location.port;\n} // eslint-disable-next-line no-redeclare\n\n\nvar parent = module.bundle.parent;\n\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/'); // Web extension context\n\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome; // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n\n  var supportsSourceURL = false;\n\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  } // $FlowFixMe\n\n\n  ws.onmessage = async function (event\n  /*: {data: string, ...} */\n  ) {\n    checkedAssets = {}\n    /*: {|[string]: boolean|} */\n    ;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data\n    /*: HMRMessage */\n    = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH); // Handle HMR Update\n\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n\n      if (handled) {\n        console.clear(); // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n\n        await hmrApplyUpdates(assets); // Dispose all old assets.\n\n        let processedAssets = {}\n        /*: {|[string]: boolean|} */\n        ;\n\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        } // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n\n\n        processedAssets = {};\n\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html); // $FlowFixMe\n\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\n\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\n\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\n\nfunction getParents(bundle, id)\n/*: Array<[ParcelRequire, string]> */\n{\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n\n  newLink.setAttribute('href', // $FlowFixMe\n  link.getAttribute('href').split('?')[0] + '?' + Date.now()); // $FlowFixMe\n\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\n\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href\n      /*: string */\n      = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n\n      return new Promise((resolve, reject) => {\n        var _document$head;\n\n        script.onload = () => resolve(script);\n\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\n\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\n\nfunction hmrApply(bundle\n/*: ParcelRequire */\n, asset\n/*:  HMRAsset */\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      } // $FlowFixMe\n\n\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\n\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    } // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n\n\n    delete modules[id];\n    delete bundle.cache[id]; // Now delete the orphans.\n\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\n\nfunction hmrAcceptCheck(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  } // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n\n\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n\n      parents.push(...p);\n    }\n  }\n\n  return accepted;\n}\n\nfunction hmrAcceptCheckOne(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n, depsByBundle\n/*: ?{ [string]: { [string]: string } }*/\n) {\n  var modules = bundle.modules;\n\n  if (!modules) {\n    return;\n  }\n\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n\n  if (checkedAssets[id]) {\n    return true;\n  }\n\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\n\nfunction hmrDispose(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n\n  delete bundle.cache[id];\n}\n\nfunction hmrAccept(bundle\n/*: ParcelRequire */\n, id\n/*: string */\n) {\n  // Execute the module.\n  bundle(id); // Run the accept callbacks in the new version of the module.\n\n  var cached = bundle.cache[id];\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        }); // $FlowFixMe[method-unbinding]\n\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","import {\n  HMSReactiveStore,\n  selectIsLocalAudioEnabled,\n  selectIsLocalVideoEnabled,\n  selectPeers,\n  selectIsConnectedToRoom,\n  selectVideoTrackByID,\n} from \"@100mslive/hms-video-store\";\n\n// Initialize HMS Store\nconst hmsManager = new HMSReactiveStore();\nhmsManager.triggerOnSubscribe();\nconst hmsStore = hmsManager.getStore();\nconst hmsActions = hmsManager.getActions();\n\n// HTML elements\nconst form = document.getElementById(\"join\");\nconst joinBtn = document.getElementById(\"join-btn\");\nconst conference = document.getElementById(\"conference\");\nconst peersContainer = document.getElementById(\"peers-container\");\nconst leaveBtn = document.getElementById(\"leave-btn\");\nconst muteAudio = document.getElementById(\"mute-aud\");\nconst muteVideo = document.getElementById(\"mute-vid\");\nconst controls = document.getElementById(\"controls\");\n\n// store peer IDs already rendered to avoid re-render on mute/unmute\nconst renderedPeerIDs = new Set();\n\n// Joining the room\njoinBtn.onclick = async () => {\n  const roomCode = document.getElementById(\"room-code\").value\n  const userName = document.getElementById(\"name\").value\n  const authToken = await hmsActions.getAuthTokenByRoomCode({ roomCode })\n\n  hmsActions.join({\n    userName,\n    authToken\n  });\n};\n\n// Leaving the room\nasync function leaveRoom() {\n  await hmsActions.leave();\n  peersContainer.innerHTML = \"\";\n}\n\n// Cleanup if user refreshes the tab or navigates away\nwindow.onunload = window.onbeforeunload = leaveRoom;\nleaveBtn.onclick = leaveRoom;\n\n// Helper function to create html elements\nfunction createElementWithClass(tag, className) {\n  const newElement = document.createElement(tag);\n  newElement.className = className;\n  return newElement;\n}\n\n// Render a single peer\nfunction renderPeer(peer) {\n  const peerTileDiv = createElementWithClass(\"div\", \"peer-tile\");\n  const videoElement = createElementWithClass(\"video\", \"peer-video\");\n  const peerTileName = createElementWithClass(\"div\", \"peer-name\");\n  videoElement.autoplay = true;\n  videoElement.muted = true;\n  videoElement.playsinline = true;\n  peerTileName.textContent = peer.name;\n\n  hmsStore.subscribe((track) => {\n    if (!track) {\n      return;\n    }\n    if (track.enabled) {\n      hmsActions.attachVideo(track.id, videoElement);\n    } else {\n      hmsActions.detachVideo(track.id, videoElement);\n    }\n  }, selectVideoTrackByID(peer.videoTrack));\n\n  peerTileDiv.append(videoElement);\n  peerTileDiv.append(peerTileName);\n\n  renderedPeerIDs.add(peer.id);\n  return peerTileDiv;\n}\n\n// display a tile for each peer in the peer list\nfunction renderPeers() {\n  const peers = hmsStore.getState(selectPeers);\n\n  peers.forEach((peer) => {\n    if (!renderedPeerIDs.has(peer.id) && peer.videoTrack) {\n      peersContainer.append(renderPeer(peer));\n    }\n  });\n}\n\n// Reactive state - renderPeers is called whenever there is a change in the peer-list\nhmsStore.subscribe(renderPeers, selectPeers);\n\n\n// Mute and unmute audio\nmuteAudio.onclick = async () => {\n  const audioEnabled = !hmsStore.getState(selectIsLocalAudioEnabled);\n  await hmsActions.setLocalAudioEnabled(audioEnabled);\n  muteAudio.textContent = audioEnabled ? \"Mute\" : \"Unmute\";\n};\n\n// Mute and unmute video\nmuteVideo.onclick = async () => {\n  const videoEnabled = !hmsStore.getState(selectIsLocalVideoEnabled);\n  await hmsActions.setLocalVideoEnabled(videoEnabled);\n  muteVideo.textContent = videoEnabled ? \"Hide\" : \"Unhide\";\n};\n\n// Showing the required elements on connection/disconnection\nfunction onConnection(isConnected) {\n  if (isConnected) {\n    form.classList.add(\"hide\");\n    conference.classList.remove(\"hide\");\n    leaveBtn.classList.remove(\"hide\");\n    controls.classList.remove(\"hide\");\n  } else {\n    form.classList.remove(\"hide\");\n    conference.classList.add(\"hide\");\n    leaveBtn.classList.add(\"hide\");\n    controls.classList.add(\"hide\");\n  }\n}\n\n// Listen to the connection state\nhmsStore.subscribe(onConnection, selectIsConnectedToRoom);\n",null,"import produce from 'immer';\nimport shallow from 'zustand/shallow';\nimport create, {\n  EqualityChecker,\n  PartialState,\n  SetState,\n  State,\n  StateSelector,\n  StateSliceListener,\n  StoreApi,\n} from 'zustand/vanilla';\nimport { HMSSdk, isBrowser } from '@100mslive/hms-video';\nimport { HMSNotifications } from './HMSNotifications';\nimport { HMSSDKActions } from './HMSSDKActions';\nimport { NamedSetState } from './internalTypes';\nimport { storeNameWithTabTitle } from '../../common/storeName';\nimport { BeamControllerStore } from '../../controller/beam/BeamController';\nimport { IHMSActions } from '../IHMSActions';\nimport { IHMSStatsStoreReadOnly, IHMSStore, IHMSStoreReadOnly, IStore } from '../IHMSStore';\nimport { createDefaultStoreState, HMSGenericTypes, HMSStore } from '../schema';\nimport { IHMSNotifications } from '../schema/notification';\nimport { HMSStats } from '../webrtc-stats';\n\ndeclare global {\n  interface Window {\n    __hms: HMSReactiveStore;\n    __beam: BeamControllerStore;\n    __triggerBeamEvent__: (args: any) => void;\n  }\n}\n\nexport class HMSReactiveStore<T extends HMSGenericTypes = { sessionStore: Record<string, any> }> {\n  private readonly sdk?: HMSSdk;\n  private readonly actions: IHMSActions<T>;\n  private readonly store: IHMSStore<T>;\n  private readonly notifications: HMSNotifications<T>;\n  private stats?: HMSStats;\n  /** @TODO store flag for both HMSStore and HMSInternalsStore */\n  private initialTriggerOnSubscribe: boolean;\n\n  constructor(hmsStore?: IHMSStore<T>, hmsActions?: IHMSActions<T>, hmsNotifications?: HMSNotifications<T>) {\n    if (hmsStore) {\n      this.store = hmsStore;\n    } else {\n      this.store = HMSReactiveStore.createNewHMSStore<HMSStore<T>>(\n        storeNameWithTabTitle('HMSStore'),\n        createDefaultStoreState,\n      );\n    }\n    if (hmsNotifications) {\n      this.notifications = hmsNotifications;\n    } else {\n      this.notifications = new HMSNotifications(this.store);\n    }\n    if (hmsActions) {\n      this.actions = hmsActions;\n    } else {\n      this.sdk = new HMSSdk();\n      this.actions = new HMSSDKActions(this.store, this.sdk, this.notifications);\n    }\n\n    // @ts-ignore\n    this.actions.setFrameworkInfo({ type: 'js', sdkVersion: require('../../../package.json').version });\n\n    this.initialTriggerOnSubscribe = false;\n\n    if (isBrowser) {\n      // @ts-ignore\n      window.__hms = this;\n      // @ts-ignore\n      window.__beam = new BeamControllerStore<T>(this.store, this.actions, this.notifications);\n    }\n  }\n\n  /**\n   * By default store.subscribe does not call the handler with the current state at time of subscription,\n   * this behaviour can be modified by calling this function. What it means is that instead of calling the\n   * handler only for changes which happen post subscription we'll also call it exactly once at the time\n   * of subscription with the current state. This behaviour is similar to that of BehaviourSubject in rxjs.\n   * This will be an irreversible change\n   *\n   * Note: you don't need this if you're using our react hooks, it takes care of this requirement.\n   */\n  triggerOnSubscribe(): void {\n    if (this.initialTriggerOnSubscribe) {\n      // already done\n      return;\n    }\n    HMSReactiveStore.makeStoreTriggerOnSubscribe(this.store);\n    this.initialTriggerOnSubscribe = true;\n  }\n\n  /**\n   * A reactive store which has a subscribe method you can use in combination with selectors\n   * to subscribe to a subset of the store. The store serves as a single source of truth for\n   * all data related to the corresponding HMS Room.\n   */\n  getStore(): IHMSStoreReadOnly {\n    return this.store;\n  }\n\n  /**\n   * Any action which may modify the store or may need to talk to the SDK will happen\n   * through the IHMSActions instance returned by this\n   *\n   * @deprecated use getActions\n   */\n  getHMSActions(): IHMSActions<T> {\n    return this.actions;\n  }\n\n  /**\n   * Any action which may modify the store or may need to talk to the SDK will happen\n   * through the IHMSActions instance returned by this\n   */\n  getActions(): IHMSActions<T> {\n    return this.actions;\n  }\n\n  /**\n   * This return notification handler function to which you can pass your callback to\n   * receive notifications like peer joined, peer left, etc. to show in your UI or use\n   * for analytics\n   */\n  getNotifications(): IHMSNotifications {\n    return { onNotification: this.notifications.onNotification };\n  }\n\n  /**\n   * @alpha\n   */\n  getStats = (): IHMSStatsStoreReadOnly => {\n    if (!this.stats) {\n      this.stats = new HMSStats(this.store as unknown as IHMSStore, this.sdk);\n    }\n    return this.stats;\n  };\n\n  /**\n   * @internal\n   */\n  static createNewHMSStore<T extends State>(storeName: string, defaultCreatorFn: () => T): IStore<T> {\n    const hmsStore = create<T>(() => defaultCreatorFn());\n    // make set state immutable, by passing functions through immer\n    const savedSetState = hmsStore.setState;\n    hmsStore.setState = (partial: any) => {\n      const nextState = typeof partial === 'function' ? produce(partial) : partial;\n      savedSetState(nextState);\n    };\n    // add option to pass selector to getState\n    const prevGetState = hmsStore.getState;\n    // eslint-disable-next-line complexity\n    hmsStore.getState = <StateSlice>(selector?: StateSelector<T, StateSlice>) => {\n      return selector ? selector(prevGetState()) : prevGetState();\n    };\n    HMSReactiveStore.compareWithShallowCheckInSubscribe(hmsStore);\n    const namedSetState = HMSReactiveStore.setUpDevtools(hmsStore, storeName);\n    return { ...hmsStore, namedSetState };\n  }\n\n  /**\n   * @internal\n   */\n  static makeStoreTriggerOnSubscribe<T extends State>(store: IStore<T>) {\n    const prevSubscribe = store.subscribe;\n    store.subscribe = <StateSlice>(\n      listener: StateSliceListener<StateSlice>,\n      selector?: StateSelector<T, StateSlice>,\n      equalityFn?: EqualityChecker<StateSlice>,\n    ): (() => void) => {\n      // initial call, the prev state will always be null for this\n      listener(store.getState(selector), undefined as unknown as StateSlice);\n      // then subscribe\n      return prevSubscribe(listener, selector!, equalityFn);\n    };\n  }\n\n  /**\n   * use shallow equality check by default for subscribe to optimize for array/object selectors.\n   * by default zustand does only reference matching so something like, getPeers for eg. would trigger\n   * the corresponding component even if peers didn't actually change, as selectPeers creates a new array every time.\n   * Although the array reference changes, the order of peers and peer objects don't themselves change in this case,\n   * and a shallow check avoids that triggering.\n   * @private\n   */\n  private static compareWithShallowCheckInSubscribe<T extends State>(hmsStore: StoreApi<T>) {\n    const prevSubscribe = hmsStore.subscribe;\n    hmsStore.subscribe = <StateSlice>(\n      listener: StateSliceListener<StateSlice>,\n      selector?: StateSelector<T, StateSlice>,\n      equalityFn?: EqualityChecker<StateSlice>,\n    ): (() => void) => {\n      if (!selector) {\n        selector = (store): StateSlice => store as unknown as StateSlice;\n      }\n      equalityFn = equalityFn || shallow;\n      return prevSubscribe(listener, selector, equalityFn);\n    };\n  }\n\n  /**\n   * @private\n   * @privateRemarks\n   * sets up redux devtools for the store, so redux extension can be used to visualize the store.\n   * zustand's default devtool middleware only enhances the set function, we're here creating another nameSetState in\n   * IHMStore which behaves like setState but takes an extra parameter for action name\n   * https://github.com/zalmoxisus/redux-devtools-extension/blob/master/docs/API/Methods.md\n   * modified version of zustand's devtools - https://github.com/pmndrs/zustand/blob/v3.5.7/src/middleware.ts#L46\n   */\n  private static setUpDevtools<T extends State>(api: StoreApi<T>, prefix: string): NamedSetState<T> {\n    let extension;\n    try {\n      extension = (window as any).__REDUX_DEVTOOLS_EXTENSION__ || (window as any).top.__REDUX_DEVTOOLS_EXTENSION__;\n    } catch {}\n    if (!extension) {\n      return (fn: any) => {\n        api.setState(fn);\n      };\n    }\n    const devtools = extension.connect(HMSReactiveStore.devtoolsOptions(prefix));\n    devtools.prefix = prefix ? `${prefix} > ` : '';\n    const savedSetState = api.setState;\n    api.setState = (fn: any) => {\n      savedSetState(fn);\n      devtools.send(`${devtools.prefix}setState`, api.getState());\n    };\n\n    devtools.subscribe(HMSReactiveStore.devtoolsSubscribe(devtools, api, savedSetState));\n\n    devtools.send('setUpStore', api.getState());\n\n    return (fn: any, action?: string) => {\n      savedSetState(fn);\n      const actionName = action ? action : `${devtools.prefix}action`;\n      devtools.send(actionName, api.getState());\n    };\n  }\n\n  /**\n   * https://github.com/zalmoxisus/redux-devtools-extension/blob/master/docs/API/Arguments.md\n   */\n  private static devtoolsOptions(prefix: string) {\n    return {\n      name: prefix,\n      actionsBlacklist: ['audioLevel', 'playlistProgress', 'connectionQuality'], // very high frequency update, pollutes the action history\n    };\n  }\n\n  /**\n   * redux devtools allows for time travel debugging where it sends an action to update the store, users can\n   * also export and import state in the devtools, listen to the corresponding functions from devtools and take\n   * required action.\n   * @param devtools - reference to devtools extension object\n   * @param api\n   * @param savedSetState - setState saved before its modified to update devtools\n   * @private\n   */\n  private static devtoolsSubscribe<T extends State>(devtools: any, api: StoreApi<T>, savedSetState: SetState<T>) {\n    // disabling complexity check instead of refactoring so as to keep the code close to zustand's and make\n    // any future update based on upstream changes easier.\n    // eslint-disable-next-line complexity\n    return (message: any) => {\n      if (message.type === 'DISPATCH' && message.state) {\n        const ignoreState = ['JUMP_TO_ACTION', 'JUMP_TO_STATE'].includes(message.payload.type);\n        if (!ignoreState) {\n          // manual dispatch from the extension\n          api.setState(JSON.parse(message.state));\n        } else {\n          // for time travel, no need to add new state changes in devtools\n          savedSetState(JSON.parse(message.state));\n        }\n      } else if (message.type === 'DISPATCH' && message.payload?.type === 'COMMIT') {\n        devtools.init(api.getState());\n      } else if (message.type === 'DISPATCH' && message.payload?.type === 'IMPORT_STATE') {\n        const actions = message.payload.nextLiftedState?.actionsById;\n        const computedStates = message.payload.nextLiftedState?.computedStates || [];\n\n        computedStates.forEach(({ state }: { state: PartialState<T> }, index: number) => {\n          const action = actions[index] || `${devtools.prefix}setState`;\n          if (index === 0) {\n            devtools.init(state);\n          } else {\n            savedSetState(state);\n            devtools.send(action, api.getState());\n          }\n        });\n      }\n    };\n  }\n}\n","import { EventEmitter2 as EventEmitter } from 'eventemitter2';\nimport { PEER_NOTIFICATION_TYPES, TRACK_NOTIFICATION_TYPES } from './common/mapping';\nimport * as sdkTypes from './sdkTypes';\nimport { IHMSStore } from '../IHMSStore';\nimport {\n  HMSChangeMultiTrackStateRequest,\n  HMSChangeTrackStateRequest,\n  HMSDeviceChangeEvent,\n  HMSException,\n  HMSGenericTypes,\n  HMSLeaveRoomRequest,\n  HMSMessage,\n  HMSNotification,\n  HMSNotificationSeverity,\n  HMSNotificationTypes,\n  HMSPeer,\n  HMSPlaylistItem,\n  HMSTrack,\n  HMSTrackID,\n} from '../schema';\nimport {\n  HMSNotificationCallback,\n  HMSNotificationInCallback,\n  HMSNotificationTypeParam,\n  IHMSNotifications,\n} from '../schema/notification';\nimport { selectPeerByID, selectTrackByID } from '../selectors';\n\nconst HMS_NOTIFICATION_EVENT = 'hmsNotification';\n\nexport class HMSNotifications<T extends HMSGenericTypes = { sessionStore: Record<string, any> }>\n  implements IHMSNotifications\n{\n  private id = 0;\n  private eventEmitter: EventEmitter;\n  private store: IHMSStore<T>;\n\n  constructor(store: IHMSStore<T>) {\n    this.store = store;\n    this.eventEmitter = new EventEmitter({ maxListeners: Object.keys(HMSNotificationTypes).length });\n  }\n  onNotification = <T extends HMSNotificationTypeParam>(cb: HMSNotificationCallback<T>, type?: T) => {\n    const eventCallback = (notification: HMSNotificationInCallback<T>) => {\n      if (type) {\n        let matchesType: boolean;\n        if (Array.isArray(type)) {\n          matchesType = type.includes(notification.type as HMSNotificationTypes);\n        } else {\n          matchesType = type === notification.type;\n        }\n        if (!matchesType) {\n          return;\n        }\n      }\n      cb(notification);\n    };\n    this.eventEmitter.addListener(HMS_NOTIFICATION_EVENT, eventCallback);\n    return () => {\n      this.eventEmitter.removeListener(HMS_NOTIFICATION_EVENT, eventCallback);\n    };\n  };\n\n  sendPlaylistTrackEnded<T>(item: HMSPlaylistItem<T>): void {\n    const notification = this.createNotification(\n      HMSNotificationTypes.PLAYLIST_TRACK_ENDED,\n      item,\n      HMSNotificationSeverity.INFO,\n    );\n    this.emitEvent(notification);\n  }\n\n  sendDeviceChange(request: HMSDeviceChangeEvent) {\n    const notification = this.createNotification(\n      HMSNotificationTypes.DEVICE_CHANGE_UPDATE,\n      request,\n      request.error ? HMSNotificationSeverity.ERROR : HMSNotificationSeverity.INFO,\n      `Selected ${request.type} device - ${request.selection?.label}`,\n    );\n    this.emitEvent(notification);\n  }\n\n  sendLeaveRoom(request: HMSLeaveRoomRequest) {\n    const peerName = request.requestedBy?.name;\n    const notification = this.createNotification(\n      request.roomEnded || !peerName ? HMSNotificationTypes.ROOM_ENDED : HMSNotificationTypes.REMOVED_FROM_ROOM,\n      request,\n      HMSNotificationSeverity.INFO,\n      `${request.roomEnded ? `Room ended` : 'Removed from room'} ${peerName ? `by ${peerName}` : ''}`,\n    );\n    this.emitEvent(notification);\n  }\n\n  sendPeerList(peers: HMSPeer[]) {\n    const notification = this.createNotification(HMSNotificationTypes.PEER_LIST, peers, HMSNotificationSeverity.INFO);\n    this.emitEvent(notification);\n  }\n\n  sendPeerUpdate(type: sdkTypes.HMSPeerUpdate, peer: HMSPeer | null) {\n    const hmsPeer = this.store.getState(selectPeerByID(peer?.id)) || peer;\n    const notificationType = PEER_NOTIFICATION_TYPES[type];\n    if (notificationType) {\n      const notification = this.createNotification(notificationType, hmsPeer, HMSNotificationSeverity.INFO);\n      this.emitEvent(notification);\n    }\n  }\n\n  sendTrackUpdate(type: sdkTypes.HMSTrackUpdate, trackID: HMSTrackID) {\n    const hmsTrack = this.store.getState(selectTrackByID(trackID));\n    const notificationType = TRACK_NOTIFICATION_TYPES[type];\n    if (notificationType) {\n      const notification = this.createNotification(notificationType, hmsTrack, HMSNotificationSeverity.INFO);\n      this.emitEvent(notification);\n    }\n  }\n\n  sendMessageReceived(message: HMSMessage) {\n    const notification = this.createNotification(\n      HMSNotificationTypes.NEW_MESSAGE,\n      message,\n      HMSNotificationSeverity.INFO,\n    );\n    this.emitEvent(notification);\n  }\n\n  sendError(error: HMSException) {\n    const notification = this.createNotification(HMSNotificationTypes.ERROR, error, HMSNotificationSeverity.ERROR);\n    this.emitEvent(notification);\n  }\n\n  sendReconnecting(error: HMSException) {\n    const notification = this.createNotification(\n      HMSNotificationTypes.RECONNECTING,\n      error,\n      HMSNotificationSeverity.ERROR,\n    );\n    this.emitEvent(notification);\n  }\n\n  sendReconnected() {\n    const notification = this.createNotification(HMSNotificationTypes.RECONNECTED, null, HMSNotificationSeverity.INFO);\n    this.emitEvent(notification);\n  }\n\n  sendChangeTrackStateRequest(request: HMSChangeTrackStateRequest) {\n    const notification = this.createNotification(\n      HMSNotificationTypes.CHANGE_TRACK_STATE_REQUEST,\n      request,\n      HMSNotificationSeverity.INFO,\n    );\n    this.emitEvent(notification);\n  }\n\n  sendChangeMultiTrackStateRequest(request: HMSChangeMultiTrackStateRequest) {\n    const notification = this.createNotification(\n      HMSNotificationTypes.CHANGE_MULTI_TRACK_STATE_REQUEST,\n      request,\n      HMSNotificationSeverity.INFO,\n    );\n    this.emitEvent(notification);\n  }\n\n  private emitEvent(notification: HMSNotification) {\n    this.eventEmitter.emit(HMS_NOTIFICATION_EVENT, notification);\n  }\n\n  private createNotification<T>(\n    type: HMSNotificationTypes,\n    data?:\n      | HMSPeer\n      | HMSPeer[]\n      | HMSTrack\n      | HMSMessage\n      | HMSException\n      | HMSChangeTrackStateRequest\n      | HMSChangeMultiTrackStateRequest\n      | HMSLeaveRoomRequest\n      | HMSDeviceChangeEvent\n      | HMSPlaylistItem<T>\n      | null,\n    severity?: HMSNotificationSeverity,\n    message = '',\n  ): HMSNotification {\n    this.id++;\n    return {\n      id: this.id,\n      type,\n      message,\n      data,\n      severity,\n    } as HMSNotification;\n  }\n}\n","import { HLSVariant, HMSHLS, HMSRecording, HMSRTMP } from '@100mslive/hms-video';\nimport { HMSPeerID } from './peer';\n\nexport type { HMSRecording, HMSRTMP, HMSHLS, HLSVariant };\nexport type HMSRoomID = string;\n\n/**\n * Check out internal-docs/RoomStateFlow.tldr for flow of room state\n * View it by\n * - Installing tldraw for VSCode(https://marketplace.visualstudio.com/items?itemName=tldraw-org.tldraw-vscode), or\n * - Open the file in https://www.tldraw.com/\n */\nexport enum HMSRoomState {\n  Disconnected = 'Disconnected',\n  Preview = 'Preview',\n  Connecting = 'Connecting',\n  Connected = 'Connected',\n  Reconnecting = 'Reconnecting',\n  Disconnecting = 'Disconnecting',\n  Failed = 'Failed',\n}\n\nexport interface HMSRoom {\n  id: HMSRoomID;\n  name: string;\n  isConnected?: boolean;\n  peers: HMSPeerID[];\n  localPeer: HMSPeerID;\n  roomState: HMSRoomState;\n  recording: HMSRecording;\n  rtmp: HMSRTMP;\n  hls: HMSHLS;\n  sessionId: string;\n  startedAt?: Date;\n  joinedAt?: Date;\n  /**\n   * if this number is available room.peers is not guaranteed to have all the peers.\n   */\n  peerCount?: number;\n}\n","import { HMSException } from './error';\nimport { HMSMessage, HMSMessageID } from './message';\nimport { HMSPeer, HMSPeerID, HMSSpeaker, HMSTrack, HMSTrackID } from './peer';\nimport { HMSPlaylist } from './playlist';\nimport { HMSRoleChangeStoreRequest } from './requests';\nimport { HMSRole } from './role';\nimport { HMSRoom, HMSRoomState } from './room';\nimport { HMSMediaSettings } from './settings';\nimport { DeviceMap, HMSConnectionQuality, HMSPeerStats, HMSTrackStats } from '../hmsSDKStore/sdkTypes';\n\nexport interface HMSGenericTypes {\n  sessionStore: Record<string, any>;\n}\n\n/*\n * Defines the schema of the central store. UI Components are aware of the presence\n * of this central store. This is the global state - the single source of immutable truth.\n */\nexport interface HMSStore<T extends HMSGenericTypes = { sessionStore: Record<string, any> }> {\n  room: HMSRoom;\n  peers: Record<HMSPeerID, HMSPeer>;\n  speakers: Record<HMSTrackID, HMSSpeaker>;\n  connectionQualities: Record<HMSPeerID, HMSConnectionQuality>;\n  tracks: Record<HMSTrackID, HMSTrack>;\n  playlist: HMSPlaylist<any>;\n  messages: {\n    byID: Record<HMSMessageID, HMSMessage>;\n    allIDs: HMSMessageID[];\n  };\n  settings: HMSMediaSettings;\n  devices: DeviceMap;\n  roles: Record<string, HMSRole>;\n  templateAppData: Record<string, string>;\n  appData?: Record<string, any>;\n  roleChangeRequests: HMSRoleChangeStoreRequest[];\n  /** @deprecated use `sessionStore` instead */\n  sessionMetadata?: any;\n  preview?: {\n    localPeer?: HMSPeerID;\n    asRole?: string;\n    videoTrack?: HMSTrackID;\n    audioTrack?: HMSTrackID;\n  };\n  errors: HMSException[]; // for the convenience of debugging and seeing any error in devtools\n  sessionStore: T['sessionStore'];\n}\n\nexport interface HMSStatsStore {\n  remoteTrackStats: Record<HMSTrackID, HMSTrackStats | undefined>;\n  localTrackStats: Record<HMSTrackID, HMSTrackStats[] | undefined>;\n  peerStats: Record<HMSPeerID, HMSPeerStats | undefined>;\n  localPeer: {\n    id: HMSPeerID;\n    videoTrack?: HMSTrackID;\n    audioTrack?: HMSTrackID;\n  };\n}\n\n/**\n * @internal\n */\nexport const createDefaultStoreState = <T extends HMSGenericTypes>(): HMSStore<T> => {\n  return {\n    room: {\n      id: '',\n      isConnected: false,\n      name: '',\n      peers: [],\n      localPeer: '',\n      roomState: HMSRoomState.Disconnected,\n      recording: {\n        browser: {\n          running: false,\n        },\n        server: {\n          running: false,\n        },\n        hls: { running: false },\n      },\n      rtmp: {\n        running: false,\n      },\n      hls: {\n        running: false,\n        variants: [],\n      },\n      sessionId: '',\n    },\n    peers: {},\n    tracks: {},\n    playlist: {\n      audio: {\n        list: {},\n        selection: { id: '', hasPrevious: false, hasNext: false },\n        progress: 0,\n        volume: 0,\n        currentTime: 0,\n        playbackRate: 1.0,\n      },\n      video: {\n        list: {},\n        selection: { id: '', hasPrevious: false, hasNext: false },\n        progress: 0,\n        volume: 0,\n        currentTime: 0,\n        playbackRate: 1.0,\n      },\n    },\n    messages: { byID: {}, allIDs: [] },\n    speakers: {},\n    connectionQualities: {},\n    settings: {\n      audioInputDeviceId: '',\n      audioOutputDeviceId: '',\n      videoInputDeviceId: '',\n    },\n    devices: {\n      audioInput: [],\n      audioOutput: [],\n      videoInput: [],\n    },\n    roles: {},\n    roleChangeRequests: [],\n    errors: [],\n    sessionStore: {},\n    templateAppData: {},\n  };\n};\n\nexport const createDefaultStatsStore = (): HMSStatsStore => {\n  return {\n    peerStats: {},\n    remoteTrackStats: {},\n    localTrackStats: {},\n    localPeer: { id: '' },\n  };\n};\n","import { HMSPeerID } from './peer';\nimport { HMSRoleName } from './role';\n\nexport type HMSMessageID = string;\n\n/**\n * @internal\n */\nexport enum HMSMessageType {\n  CHAT = 'chat',\n}\n\nexport interface HMSMessage {\n  id: HMSMessageID;\n  sender?: HMSPeerID;\n  senderName?: string;\n  senderUserId?: string;\n  senderRole?: string;\n  recipientPeer?: HMSPeerID;\n  recipientRoles?: HMSRoleName[];\n  time: Date;\n  read: boolean;\n  type: string;\n  message: any;\n  /**\n   * true if message will not be put it in store because it has been ignored\n   */\n  ignored: boolean;\n}\n\n/**\n * @internal\n */\nexport interface HMSMessageInput {\n  recipientPeer?: HMSPeerID;\n  recipientRoles?: HMSRoleName[];\n  type?: string;\n  message: any;\n}\n","import { HMSDeviceChangeEvent } from './device-change';\nimport { HMSException } from './error';\nimport { HMSMessage } from './message';\nimport { HMSPeer, HMSTrack } from './peer';\nimport { HMSPlaylistItem } from './playlist';\nimport { HMSChangeMultiTrackStateRequest, HMSChangeTrackStateRequest, HMSLeaveRoomRequest } from './requests';\n\ninterface BaseNotification {\n  id: number;\n  type: string;\n  message: string;\n  severity?: HMSNotificationSeverity;\n}\nexport interface HMSPeerNotification extends BaseNotification {\n  type:\n    | HMSNotificationTypes.PEER_JOINED\n    | HMSNotificationTypes.PEER_LEFT\n    | HMSNotificationTypes.NAME_UPDATED\n    | HMSNotificationTypes.METADATA_UPDATED\n    | HMSNotificationTypes.ROLE_UPDATED;\n  data: HMSPeer;\n}\n\nexport interface HMSPeerListNotification extends BaseNotification {\n  type: HMSNotificationTypes.PEER_LIST;\n  data: HMSPeer[];\n}\nexport interface HMSTrackNotification extends BaseNotification {\n  type:\n    | HMSNotificationTypes.TRACK_ADDED\n    | HMSNotificationTypes.TRACK_DEGRADED\n    | HMSNotificationTypes.TRACK_UNMUTED\n    | HMSNotificationTypes.TRACK_DESCRIPTION_CHANGED\n    | HMSNotificationTypes.TRACK_MUTED\n    | HMSNotificationTypes.TRACK_REMOVED\n    | HMSNotificationTypes.TRACK_RESTORED;\n  data: HMSTrack;\n}\nexport interface HMSMessageNotification extends BaseNotification {\n  type: HMSNotificationTypes.NEW_MESSAGE;\n  data: HMSMessage;\n}\nexport interface HMSExceptionNotification extends BaseNotification {\n  type: HMSNotificationTypes.ERROR;\n  data: HMSException;\n}\nexport interface HMSChangeTrackStateRequestNotification extends BaseNotification {\n  type: HMSNotificationTypes.CHANGE_TRACK_STATE_REQUEST;\n  data: HMSChangeTrackStateRequest;\n}\nexport interface HMSChangeMultiTrackStateRequestNotification extends BaseNotification {\n  type: HMSNotificationTypes.CHANGE_MULTI_TRACK_STATE_REQUEST;\n  data: HMSChangeMultiTrackStateRequest;\n}\n\nexport interface HMSLeaveRoomRequestNotification extends BaseNotification {\n  type: HMSNotificationTypes.ROOM_ENDED | HMSNotificationTypes.REMOVED_FROM_ROOM;\n  data: HMSLeaveRoomRequest;\n}\nexport interface HMSDeviceChangeEventNotification extends BaseNotification {\n  type: HMSNotificationTypes.DEVICE_CHANGE_UPDATE;\n  data?: HMSDeviceChangeEvent;\n}\nexport interface HMSPlaylistItemNotification<T> extends BaseNotification {\n  type: HMSNotificationTypes.PLAYLIST_TRACK_ENDED;\n  data: HMSPlaylistItem<T>;\n}\n\nexport interface HMSReconnectionNotification extends BaseNotification {\n  type: HMSNotificationTypes.RECONNECTED | HMSNotificationTypes.RECONNECTING;\n  data: null;\n}\n\nexport type HMSNotification =\n  | HMSPeerNotification\n  | HMSPeerListNotification\n  | HMSTrackNotification\n  | HMSMessageNotification\n  | HMSExceptionNotification\n  | HMSChangeTrackStateRequestNotification\n  | HMSChangeMultiTrackStateRequestNotification\n  | HMSLeaveRoomRequestNotification\n  | HMSDeviceChangeEventNotification\n  | HMSReconnectionNotification\n  | HMSPlaylistItemNotification<any>;\n\nexport enum HMSNotificationSeverity {\n  INFO = 'info',\n  ERROR = 'error',\n}\n\nexport enum HMSNotificationTypes {\n  PEER_JOINED = 'PEER_JOINED',\n  PEER_LEFT = 'PEER_LEFT',\n  PEER_LIST = 'PEER_LIST',\n  NEW_MESSAGE = 'NEW_MESSAGE',\n  ERROR = 'ERROR',\n  RECONNECTING = 'RECONNECTING',\n  RECONNECTED = 'RECONNECTED',\n  TRACK_ADDED = 'TRACK_ADDED',\n  TRACK_REMOVED = 'TRACK_REMOVED',\n  TRACK_MUTED = 'TRACK_MUTED',\n  TRACK_UNMUTED = 'TRACK_UNMUTED',\n  TRACK_DEGRADED = 'TRACK_DEGRADED',\n  TRACK_RESTORED = 'TRACK_RESTORED',\n  TRACK_DESCRIPTION_CHANGED = 'TRACK_DESCRIPTION_CHANGED',\n  ROLE_UPDATED = 'ROLE_UPDATED',\n  CHANGE_TRACK_STATE_REQUEST = 'CHANGE_TRACK_STATE_REQUEST',\n  CHANGE_MULTI_TRACK_STATE_REQUEST = 'CHANGE_MULTI_TRACK_STATE_REQUEST',\n  ROOM_ENDED = 'ROOM_ENDED',\n  REMOVED_FROM_ROOM = 'REMOVED_FROM_ROOM',\n  DEVICE_CHANGE_UPDATE = 'DEVICE_CHANGE_UPDATE',\n  PLAYLIST_TRACK_ENDED = 'PLAYLIST_TRACK_ENDED',\n  NAME_UPDATED = 'NAME_UPDATED',\n  METADATA_UPDATED = 'METADATA_UPDATED',\n}\n\nexport type HMSNotificationMapping<T extends HMSNotificationTypes, C = any> = {\n  [HMSNotificationTypes.PEER_JOINED]: HMSPeerNotification;\n  [HMSNotificationTypes.PEER_LEFT]: HMSPeerNotification;\n  [HMSNotificationTypes.PEER_LIST]: HMSPeerListNotification;\n  [HMSNotificationTypes.NAME_UPDATED]: HMSPeerNotification;\n  [HMSNotificationTypes.METADATA_UPDATED]: HMSPeerNotification;\n  [HMSNotificationTypes.ROLE_UPDATED]: HMSPeerNotification;\n  [HMSNotificationTypes.TRACK_ADDED]: HMSTrackNotification;\n  [HMSNotificationTypes.TRACK_REMOVED]: HMSTrackNotification;\n  [HMSNotificationTypes.TRACK_MUTED]: HMSTrackNotification;\n  [HMSNotificationTypes.TRACK_UNMUTED]: HMSTrackNotification;\n  [HMSNotificationTypes.TRACK_DEGRADED]: HMSTrackNotification;\n  [HMSNotificationTypes.TRACK_RESTORED]: HMSTrackNotification;\n  [HMSNotificationTypes.TRACK_DESCRIPTION_CHANGED]: HMSTrackNotification;\n  [HMSNotificationTypes.TRACK_UNMUTED]: HMSTrackNotification;\n  [HMSNotificationTypes.NEW_MESSAGE]: HMSMessageNotification;\n  [HMSNotificationTypes.ROOM_ENDED]: HMSLeaveRoomRequestNotification;\n  [HMSNotificationTypes.REMOVED_FROM_ROOM]: HMSLeaveRoomRequestNotification;\n  [HMSNotificationTypes.DEVICE_CHANGE_UPDATE]: HMSDeviceChangeEventNotification;\n  [HMSNotificationTypes.PLAYLIST_TRACK_ENDED]: HMSPlaylistItemNotification<C>;\n  [HMSNotificationTypes.ERROR]: HMSExceptionNotification;\n  [HMSNotificationTypes.CHANGE_TRACK_STATE_REQUEST]: HMSChangeTrackStateRequestNotification;\n  [HMSNotificationTypes.CHANGE_MULTI_TRACK_STATE_REQUEST]: HMSChangeMultiTrackStateRequestNotification;\n  [HMSNotificationTypes.RECONNECTED]: HMSReconnectionNotification;\n  [HMSNotificationTypes.RECONNECTING]: HMSReconnectionNotification;\n}[T];\n\ntype MappedNotifications<Type extends HMSNotificationTypes[]> = {\n  [index in keyof Type]: HMSNotificationMapping<Type[index]>;\n};\n\nexport type HMSNotificationTypeParam = HMSNotificationTypes | HMSNotificationTypes[] | undefined;\n\nexport type HMSNotificationInCallback<T extends HMSNotificationTypeParam> = T extends HMSNotificationTypes[]\n  ? MappedNotifications<T>[number]\n  : T extends HMSNotificationTypes\n  ? HMSNotificationMapping<T>\n  : HMSNotification;\n\nexport type HMSNotificationCallback<T extends HMSNotificationTypeParam> = (\n  notification: HMSNotificationInCallback<T>,\n) => void;\n\n/**\n * @category Core\n */\nexport interface IHMSNotifications {\n  /**\n   * you can subscribe to notifications for new message, peer add etc. using this function.\n   * note that this is not meant to maintain any state on your side, as the reactive store already\n   * does that. The intent of this function is mainly to display toast notifications or send analytics.\n   * We'll provide a display message which can be displayed as it is for common cases.\n   */\n  onNotification<T extends HMSNotificationTypeParam>(cb: HMSNotificationCallback<T>, types?: T): () => void;\n}\n","import { HMSStore } from '../schema';\n\nexport enum HMSPlaylistType {\n  audio = 'audio',\n  video = 'video',\n}\nexport interface HMSPlaylistItem<T> {\n  name: string;\n  id: string;\n  metadata?: T;\n  url: string;\n  type: HMSPlaylistType;\n  duration?: number;\n  playing: boolean;\n  selected: boolean;\n}\n\nexport interface HMSPlaylistSelection {\n  id: string;\n  hasPrevious: boolean;\n  hasNext: boolean;\n}\n\nexport interface HMSPlaylist<T> {\n  audio: {\n    list: Record<string, HMSPlaylistItem<T>>;\n    selection: HMSPlaylistSelection;\n    progress: number;\n    volume: number;\n    currentTime: number;\n    playbackRate: number;\n  };\n  video: {\n    list: Record<string, HMSPlaylistItem<T>>;\n    selection: HMSPlaylistSelection;\n    progress: number;\n    volume: number;\n    currentTime: number;\n    playbackRate: number;\n  };\n}\n\nexport interface IHMSPlaylistActions {\n  /**\n   * Pass the id of the item to be played\n   * @param {string} id - id of playlist item\n   */\n  play(id: string): Promise<void>;\n  /**\n   * Pauses current playing item\n   */\n  pause(): Promise<void>;\n  /**\n   * PlayNext\n   */\n  playNext(): Promise<void>;\n  /**\n   * PlayPrevious\n   */\n  playPrevious(): Promise<void>;\n  /**\n   * seek passing seekValue - this is relative to current position\n   * @param {number} seekValue - number in seconds to move forwards(pass negative values to move backwards)\n   */\n  seek(seekValue: number): void;\n  /**\n   * seek passing seekValue  - seekValue will be absolute\n   * @param {number} seekValue - value in seconds of absolute position in the playlist item duration\n   */\n  seekTo(seekValue: number): void;\n  /**\n   * set volume passing volume\n   * @param {number} volume - number between 0-100\n   */\n  setVolume(volume: number): void;\n  /**\n   * pass list to set playlist\n   * @param {HMSPlaylistItem[]} list of playlist items\n   */\n  setList<T>(list: HMSPlaylistItem<T>[]): void;\n  /**\n   * Stop the current playback and remove the tracks\n   */\n  stop(): Promise<void>;\n  /**\n   * set whether to autoplay next item in playlist after the current one ends\n   * @param {boolean} autoplay\n   */\n  setIsAutoplayOn(autoplay: boolean): void;\n  /**\n   * Control the playback speed - 1.0 being normal, less than 1.0 will play it slowly\n   * and more than 1.0 will play it faster.\n   * @param playbackRate - value from 0.25 and 2.0\n   */\n  setPlaybackRate(playbackRate: number): void;\n  removeItem(id: string): Promise<boolean>;\n  clearList(): Promise<void>;\n}\n\n/**\n * Helpful selectors for audio and video playlist\n */\nexport interface HMSPlaylistSelector {\n  /**\n   * returns the playlist items list as set initially\n   */\n  list: <T>(store: HMSStore) => HMSPlaylistItem<T>[];\n  /**\n   * This returns playlist selection with `{ id, hasNext, hasPrev }`\n   * @returns {HMSPlaylistSelection}\n   */\n  selection: (store: HMSStore) => HMSPlaylistSelection;\n  /**\n   * This returns playlist item for corresponding Id in selection\n   * @returns {HMSPlaylistItem}\n   */\n  selectedItem: <T>(store: HMSStore) => HMSPlaylistItem<T>;\n  /**\n   * returns the current progress percentage, a number between 0-100\n   */\n  progress: (store: HMSStore) => number;\n  /**\n   * returns the current volume the playlist is playing at, a number between 0-100\n   */\n  volume: (store: HMSStore) => number;\n  /**\n   * returns the current time of the playlist in seconds\n   */\n  currentTime: (store: HMSStore) => number;\n  /**\n   * returns the playback rate, a number between 0.25-2.0.\n   */\n  playbackRate: (store: HMSStore) => number;\n}\n","import {\n  DeviceMap,\n  DeviceType,\n  HLSConfig,\n  HLSMeetingURLVariant,\n  HLSTimedMetadata,\n  HMSAudioPlugin,\n  HMSAudioPluginType,\n  HMSAudioTrackSettings,\n  HMSConfig,\n  HMSConfigInitialSettings,\n  HMSConnectionQuality,\n  HMSDeviceChangeEvent,\n  HMSException,\n  HMSFrameworkInfo,\n  HMSHLS,\n  HMSLocalPeer,\n  HMSLocalTrackStats,\n  HMSLogLevel,\n  HMSMessage,\n  HMSPeer,\n  HMSPeerStats,\n  HMSPeerUpdate,\n  HMSPlaylistItem,\n  HMSPlaylistManager,\n  HMSPlaylistProgressEvent,\n  HMSPreferredSimulcastLayer,\n  HMSPreviewConfig,\n  HMSRecording,\n  HMSRemotePeer,\n  HMSRemoteTrackStats,\n  HMSRole,\n  HMSRoom,\n  HMSRoomUpdate,\n  HMSRTMP,\n  HMSScreenShareConfig,\n  HMSSimulcastLayer,\n  HMSSimulcastLayerDefinition,\n  HMSSpeaker,\n  HMSTrackStats,\n  HMSTrackUpdate,\n  HMSVideoPlugin,\n  HMSVideoPluginCanvasContextType,\n  HMSVideoPluginType,\n  HMSVideoTrackSettings,\n  HMSWebrtcInternals,\n  HMSWebrtcStats,\n  parsedUserAgent,\n  RID,\n  RTMPRecordingConfig,\n  ScreenCaptureHandle,\n  simulcastMapping,\n  TokenRequest,\n  TokenRequestOptions,\n} from '@100mslive/hms-video';\n\nexport {\n  HMSException,\n  HMSSimulcastLayer,\n  HMSRoomUpdate,\n  HMSPeerUpdate,\n  HMSTrackUpdate,\n  HMSLogLevel,\n  HMSAudioPluginType,\n  HMSVideoPluginType,\n  HMSVideoPluginCanvasContextType,\n  parsedUserAgent,\n  simulcastMapping,\n  DeviceType,\n};\n\nexport type {\n  DeviceMap,\n  HMSPeer,\n  HMSRoom,\n  HMSMessage,\n  HMSSpeaker,\n  HMSConfig,\n  HMSConfigInitialSettings,\n  HMSPreviewConfig,\n  HMSAudioTrackSettings,\n  HMSVideoTrackSettings,\n  HMSRole,\n  HMSLocalPeer,\n  HMSRemotePeer,\n  HMSSimulcastLayerDefinition,\n  HMSDeviceChangeEvent,\n  HMSPlaylistItem,\n  HMSPlaylistManager,\n  HMSPlaylistProgressEvent,\n  RTMPRecordingConfig,\n  HMSRecording,\n  HMSRTMP,\n  HMSWebrtcInternals,\n  HMSWebrtcStats,\n  HMSVideoPlugin,\n  HMSAudioPlugin,\n  HLSConfig,\n  HLSTimedMetadata,\n  HLSMeetingURLVariant,\n  HMSHLS,\n  HMSPeerStats,\n  HMSTrackStats,\n  HMSLocalTrackStats,\n  HMSRemoteTrackStats,\n  HMSConnectionQuality,\n  HMSScreenShareConfig,\n  HMSFrameworkInfo,\n  RID,\n  ScreenCaptureHandle,\n  HMSPreferredSimulcastLayer,\n  TokenRequest,\n  TokenRequestOptions,\n};\n","import { HMSNotificationTypes } from '../../schema';\nimport * as sdkTypes from '../sdkTypes';\n\ntype PeerNotificationMap = { [key in sdkTypes.HMSPeerUpdate]?: HMSNotificationTypes };\n\nexport const PEER_NOTIFICATION_TYPES: PeerNotificationMap = {\n  [sdkTypes.HMSPeerUpdate.PEER_JOINED]: HMSNotificationTypes.PEER_JOINED,\n  [sdkTypes.HMSPeerUpdate.PEER_LEFT]: HMSNotificationTypes.PEER_LEFT,\n  [sdkTypes.HMSPeerUpdate.ROLE_UPDATED]: HMSNotificationTypes.ROLE_UPDATED,\n  [sdkTypes.HMSPeerUpdate.NAME_UPDATED]: HMSNotificationTypes.NAME_UPDATED,\n  [sdkTypes.HMSPeerUpdate.METADATA_UPDATED]: HMSNotificationTypes.METADATA_UPDATED,\n};\n\ntype TrackNotificationMap = { [key in sdkTypes.HMSTrackUpdate]: HMSNotificationTypes };\nexport const TRACK_NOTIFICATION_TYPES: TrackNotificationMap = {\n  [sdkTypes.HMSTrackUpdate.TRACK_ADDED]: HMSNotificationTypes.TRACK_ADDED,\n  [sdkTypes.HMSTrackUpdate.TRACK_REMOVED]: HMSNotificationTypes.TRACK_REMOVED,\n  [sdkTypes.HMSTrackUpdate.TRACK_MUTED]: HMSNotificationTypes.TRACK_MUTED,\n  [sdkTypes.HMSTrackUpdate.TRACK_UNMUTED]: HMSNotificationTypes.TRACK_UNMUTED,\n  [sdkTypes.HMSTrackUpdate.TRACK_DEGRADED]: HMSNotificationTypes.TRACK_DEGRADED,\n  [sdkTypes.HMSTrackUpdate.TRACK_RESTORED]: HMSNotificationTypes.TRACK_RESTORED,\n  [sdkTypes.HMSTrackUpdate.TRACK_DESCRIPTION_CHANGED]: HMSNotificationTypes.TRACK_DESCRIPTION_CHANGED,\n};\n","import { createSelector } from 'reselect';\nimport {\n  getScreenSharesByPeer,\n  isAudioPlaylist,\n  isDegraded,\n  isTrackDisplayEnabled,\n  isTrackEnabled,\n  isVideo,\n  isVideoPlaylist,\n} from './selectorUtils';\n// noinspection ES6PreferShortImport\nimport { HMSRole } from '../hmsSDKStore/sdkTypes';\nimport {\n  HMSException,\n  HMSMessage,\n  HMSPeer,\n  HMSPeerID,\n  HMSRoom,\n  HMSRoomState,\n  HMSStore,\n  HMSVideoTrack,\n} from '../schema';\n\n/**\n * Select the current {@link HMSRoom} object to which you are connected.\n * @param store\n */\nexport const selectRoom = (store: HMSStore): HMSRoom => store.room;\n/**\n * Select the current {@link HMSException[]} object to monitor the error logs\n * @param store\n */\nexport const selectErrors = (store: HMSStore): HMSException[] => store.errors;\n\n/**\n * It will help to get the all the error\n */\nexport const selectRecentError = createSelector(selectErrors, errors => (errors.length === 0 ? null : errors.at(-1)));\n/**\n * Select the ID of the current room to which you are connected.\n */\nexport const selectRoomID = createSelector(selectRoom, room => room.id);\n\n/**\n * @internal\n */\nexport const selectPeersMap = (store: HMSStore): Record<HMSPeerID, HMSPeer> => store.peers;\n\n/**\n * @internal\n */\nexport const selectMessagesMap = (store: HMSStore) => store.messages.byID;\n\n/**\n * Select IDs of messages you've sent or received sorted chronologically.\n */\nexport const selectMessageIDsInOrder = (store: HMSStore) => store.messages.allIDs;\n\n/**\n * @internal\n */\nexport const selectTracksMap = (store: HMSStore) => store.tracks;\n\n/**\n * Select your media settings\n * i.e., choosen audio input device, audio output device and video input device.\n * @param store\n */\nexport const selectLocalMediaSettings = (store: HMSStore) => store.settings;\n\n/**\n * select appData.\n * @internal\n */\nexport const selectFullAppData = (store: HMSStore) => store.appData;\n\n/**\n * Select the available audio input, audio output and video input devices on your machine.\n * @param store\n * @returns An object of array of available audio input, audio output and video input devices.\n * ```\n * type DeviceMap = {\n *   audioInput: InputDeviceInfo[];\n *   audioOutput: MediaDeviceInfo[];\n *   videoInput: InputDeviceInfo[];\n * }\n * ```\n */\nexport const selectDevices = (store: HMSStore) => {\n  return store.devices;\n};\n\nexport const selectSpeakers = (store: HMSStore) => {\n  return store.speakers;\n};\n\nexport const selectConnectionQualities = (store: HMSStore) => {\n  return store.connectionQualities;\n};\n\n/**\n * Select a boolean flag denoting whether you've joined a room.\n * NOTE: Returns true only after join, returns false during preview.\n */\nexport const selectIsConnectedToRoom = createSelector([selectRoom], room => room && room.isConnected);\n\n/**\n * selectPeerCount gives the number of peers Inside the room. This doesn't count the local peer if\n * they're still in preview and haven't yet joined the room. Note that this will not necessarily equal the\n * number of peers received through selectPeers, it's possible to know total number of people in the room\n * without having details of everyone depending on dashboard settings.\n */\nexport const selectPeerCount = createSelector([selectIsConnectedToRoom, selectRoom], (isConnected, room) => {\n  if (isConnected) {\n    // if we have peer count from server return that else return number of peers in the store.\n    // In case the strongly consistent peer list is disabled and only eventual consistent count and peer\n    // details is sent, room.peerCount may be 0 for a few second even though local peer is connected, send 1 in that case.\n    // TODO: Fix this at populating room.peerCount level than in selector.\n    return room.peerCount !== undefined ? room.peerCount || 1 : room.peers.length;\n  } else {\n    // if we have peer count from server return that, else return number of peers except the local one because local is\n    // not joined yet.\n    // Math.max to ensure we're not returning -1, if the selector is called before local peer is put in the store\n    return Math.max(room.peerCount !== undefined ? room.peerCount : room.peers.length - 1, 0);\n  }\n});\n\n/**\n * Select an array of peers(remote peers and your local peer) present in the room.\n */\nexport const selectPeers = createSelector([selectRoom, selectPeersMap], (room, storePeers) => {\n  return room.peers.map(peerID => storePeers[peerID]);\n});\n\n/**\n * Select an array of tracks(remote peer tracks and your local tracks) present in the room.\n */\nconst selectTracks = createSelector(selectTracksMap, storeTracks => {\n  return Object.values(storeTracks);\n});\n\n/**\n * Select the local peer object object assigned to you.\n */\nexport const selectLocalPeer = createSelector(selectRoom, selectPeersMap, (room, peers): HMSPeer | undefined => {\n  return peers[room.localPeer];\n});\n\n/**\n * Select the peer ID of your local peer.\n */\nexport const selectLocalPeerID = createSelector(selectRoom, room => {\n  return room.localPeer;\n});\n\n/**\n * Select the peer name of your local peer.\n */\nexport const selectLocalPeerName = createSelector(selectLocalPeer, peer => peer?.name);\n\n/**\n * Select the role name of your local peer.\n */\nexport const selectLocalPeerRoleName = createSelector(selectLocalPeer, peer => peer?.roleName);\n\n/**\n * Select the track ID of your local peer's primary audio track\n */\nexport const selectLocalAudioTrackID = createSelector(selectLocalPeer, peer => peer?.audioTrack);\n\n/**\n * Select the track ID of your local peer's primary video track\n */\nexport const selectLocalVideoTrackID = createSelector(selectLocalPeer, peer => peer?.videoTrack);\n\n/**\n * Select an array of track IDs of your local peer's auxiliary tracks\n */\nconst selectLocalAuxiliaryTrackIDs = createSelector(selectLocalPeer, peer => peer?.auxiliaryTracks);\n\n/**\n * Select an array of track IDs of all your local peer's tracks\n */\nexport const selectLocalTrackIDs = createSelector(\n  [selectLocalAudioTrackID, selectLocalVideoTrackID, selectLocalAuxiliaryTrackIDs],\n  (audioTrackID, videoTrackID, auxiliaryTrackIDs) => {\n    const trackIDs: string[] = auxiliaryTrackIDs ? [...auxiliaryTrackIDs] : [];\n    audioTrackID && trackIDs.unshift(audioTrackID);\n    videoTrackID && trackIDs.unshift(videoTrackID);\n    return trackIDs;\n  },\n);\n\n/**\n * Select remote peers(other users you're connected with via the internet) present in the room.\n */\nexport const selectRemotePeers = createSelector(selectPeers, peers => {\n  return peers.filter(p => !p.isLocal);\n});\n\n/**\n * Select the peer who's speaking the loudest at the moment\n */\nexport const selectDominantSpeaker = createSelector(selectPeersMap, selectSpeakers, (peersMap, speakers) => {\n  // sort in descending order by audio level\n  const speakersInOrder = Object.entries(speakers).sort((s1, s2) => {\n    const s1Level = s1[1]?.audioLevel || 0;\n    const s2Level = s2[1]?.audioLevel || 0;\n    return s2Level > s1Level ? 1 : -1;\n  });\n  if (speakersInOrder.length > 0 && speakersInOrder[0][1].audioLevel && speakersInOrder[0][1].audioLevel > 0) {\n    const peerID = speakersInOrder[0][1].peerID;\n    if (peerID in peersMap) {\n      return peersMap[peerID];\n    }\n  }\n  return null;\n});\n\n/**\n * Select a boolean denoting whether your local audio is unmuted\n * and the audio from your microphone is shared to remote peers\n */\nexport const selectIsLocalAudioEnabled = (store: HMSStore) => {\n  const localPeer = selectLocalPeer(store);\n  return isTrackEnabled(store, localPeer?.audioTrack);\n};\n\n/**\n * Select a boolean denoting whether your local video is unmuted\n * and the video from your camera is shared to remote peers\n */\nexport const selectIsLocalVideoEnabled = (store: HMSStore) => {\n  const localPeer = selectLocalPeer(store);\n  return isTrackEnabled(store, localPeer?.videoTrack);\n};\n\n/**\n * Select a boolean denoting whether you've chosen to unmute and share your local video.\n *\n * NOTE: Once you call `hmsActions.setLocalVideoEnabled(true)`to unmute your local video,\n * it takes some time to fetch your video from your video source.\n * This displayEnabled property gives immediate feedback for a more interactive UI,\n * without waiting for the video source\n */\nexport const selectIsLocalVideoDisplayEnabled = (store: HMSStore) => {\n  const localPeer = selectLocalPeer(store);\n  return isTrackDisplayEnabled(store, localPeer?.videoTrack);\n};\n\n/**\n * Select a boolean denoting whether your screen is shared to remote peers in the room.\n */\nexport const selectIsLocalScreenShared = createSelector(selectLocalPeer, selectTracksMap, (localPeer, tracksMap) => {\n  const { video, audio } = getScreenSharesByPeer(tracksMap, localPeer);\n  return !!(video || audio);\n});\n\n/**\n * Select the first peer who is currently sharing their screen.\n */\nexport const selectPeerScreenSharing = createSelector(selectPeersMap, selectTracksMap, (peersMap, tracksMap) => {\n  let screensharePeer = undefined;\n  for (const peerID in peersMap) {\n    const peer = peersMap[peerID];\n    const { video, audio } = getScreenSharesByPeer(tracksMap, peer);\n    if (video) {\n      return peer;\n    } else if (audio && !screensharePeer) {\n      screensharePeer = peer;\n    }\n  }\n  return screensharePeer;\n});\n\n/**\n * Select a boolean denoting whether someone is sharing screen in the room.\n */\nexport const selectIsSomeoneScreenSharing = createSelector(selectPeerScreenSharing, peer => {\n  return !!peer;\n});\n\n/**\n * Select the first peer who is currently sharing their audio only screen\n */\nexport const selectPeerSharingAudio = createSelector(selectPeersMap, selectTracksMap, (peersMap, tracksMap) => {\n  for (const peerID in peersMap) {\n    const peer = peersMap[peerID];\n    const { audio, video } = getScreenSharesByPeer(tracksMap, peer);\n    if (!video && !!audio) {\n      return peer;\n    }\n  }\n  return undefined;\n});\n\n/**\n * Select an array of peers who are currently sharing their screen.\n */\nexport const selectPeersScreenSharing = createSelector(selectPeersMap, selectTracksMap, (peersMap, tracksMap) => {\n  const videoPeers = [];\n  const audioPeers = [];\n  for (const peerID in peersMap) {\n    const peer = peersMap[peerID];\n    const { video, audio } = getScreenSharesByPeer(tracksMap, peer);\n    if (video) {\n      videoPeers.push(peer);\n    } else if (audio) {\n      audioPeers.push(peer);\n    }\n  }\n  return videoPeers.concat(audioPeers);\n});\n\nexport const selectPeerSharingVideoPlaylist = createSelector(selectPeersMap, selectTracksMap, (peersMap, tracksMap) => {\n  for (const trackId in tracksMap) {\n    const track = tracksMap[trackId];\n    if (isVideoPlaylist(track) && isVideo(track) && track.peerId) {\n      return peersMap[track.peerId];\n    }\n  }\n  return undefined;\n});\n\nexport const selectPeerSharingAudioPlaylist = createSelector(selectPeersMap, selectTracksMap, (peersMap, tracksMap) => {\n  for (const trackId in tracksMap) {\n    const track = tracksMap[trackId];\n    if (isAudioPlaylist(track) && track.peerId) {\n      return peersMap[track.peerId];\n    }\n  }\n  return undefined;\n});\n\n/**\n * Select an array of tracks that have been degraded(receiving lower video quality/no video) due to bad network locally.\n */\nexport const selectDegradedTracks = createSelector(selectTracks, tracks =>\n  (tracks as HMSVideoTrack[]).filter(isDegraded),\n);\n\n/**\n * Select the number of messages(sent and received).\n */\nexport const selectHMSMessagesCount = createSelector(selectMessageIDsInOrder, messageIDs => messageIDs.length);\n\n/**\n * Select the number of unread messages.\n */\nexport const selectUnreadHMSMessagesCount = createSelector(selectMessagesMap, messages => {\n  return Object.values(messages).filter(m => !m.read).length;\n});\n\n/**\n * Select an array of messages in the room(sent and received).\n */\nexport const selectHMSMessages = createSelector(selectMessageIDsInOrder, selectMessagesMap, (msgIDs, msgMap) => {\n  const messages: HMSMessage[] = [];\n  msgIDs.forEach(msgId => {\n    messages.push(msgMap[msgId]);\n  });\n  return messages;\n});\n\n/**\n * Select the current state of the room.\n */\nexport const selectRoomState = createSelector([selectRoom], room => room && room.roomState);\n\n/**\n * Select a boolean denoting whether the room is in Preview state.\n */\nexport const selectIsInPreview = createSelector(selectRoomState, roomState => roomState === HMSRoomState.Preview);\n\nexport const selectRoomStarted = createSelector(selectRoom, room => room.roomState !== HMSRoomState.Disconnected);\n\n/**\n * Select available roles in the room as a map between the role name and {@link HMSRole} object.\n */\nexport const selectRolesMap = (store: HMSStore): Record<string, HMSRole> => {\n  return store.roles;\n};\n\n/**\n * Select an array of names of available roles in the room.\n */\nexport const selectAvailableRoleNames = createSelector([selectRolesMap], rolesMap => Object.keys(rolesMap));\n\n/**\n * Select the {@link HMSRole} object of your local peer.\n */\nexport const selectLocalPeerRole = createSelector([selectLocalPeer, selectRolesMap], (localPeer, rolesMap) =>\n  localPeer?.roleName ? rolesMap[localPeer.roleName] : null,\n);\n\nexport const selectPreviewRoleName = (store: HMSStore) => store.preview?.asRole;\n\n/**\n * Select the {@link HMSRole} used for preview.\n *\n */\nexport const selectPreviewRole = createSelector([selectPreviewRoleName, selectRolesMap], (roleName, rolesMap) =>\n  roleName ? rolesMap[roleName] : null,\n);\n\n/**\n * Select a boolean denoting whether if your local peer is allowed to subscribe to any other role.\n */\nexport const selectIsAllowedToSubscribe = createSelector([selectLocalPeerRole], (role): boolean => {\n  if (!role?.subscribeParams?.subscribeToRoles) {\n    return false;\n  }\n  return role.subscribeParams.subscribeToRoles.length > 0;\n});\n\n/**\n * Select the permissions which determine what actions the local peer can do.\n */\nexport const selectPermissions = createSelector(selectLocalPeerRole, role => role?.permissions);\nexport const selectRecordingState = createSelector(selectRoom, room => room.recording);\nexport const selectRTMPState = createSelector(selectRoom, room => room.rtmp);\nexport const selectHLSState = createSelector(selectRoom, room => room.hls);\nexport const selectSessionId = createSelector(selectRoom, room => room.sessionId);\nexport const selectRoomStartTime = createSelector(selectRoom, room => room.startedAt);\nexport const selectTemplateAppData = (store: HMSStore) => store.templateAppData;\n/** @deprecated - use `selectSessionStore` instead */\nexport const selectSessionMetadata = (store: HMSStore) => store.sessionMetadata;\n","import {\n  HMSPeer,\n  HMSPublishAllowed,\n  HMSRole,\n  HMSScreenAudioTrack,\n  HMSScreenVideoTrack,\n  HMSStore,\n  HMSTrack,\n  HMSTrackID,\n  HMSVideoTrack,\n} from '../schema';\n\nexport function getScreenSharesByPeer(tracks: Record<HMSTrackID, HMSTrack>, peer?: HMSPeer | null) {\n  let videoTrack = undefined;\n  let audioTrack = undefined;\n  if (peer) {\n    for (const trackID of peer.auxiliaryTracks) {\n      const track = tracks[trackID];\n      if (isScreenShare(track)) {\n        audioTrack = isAudio(track) ? track : audioTrack;\n        videoTrack = isVideo(track) ? track : videoTrack;\n      }\n    }\n  }\n  // to use the proper type, right now it is only used for screenshare.\n  return { video: videoTrack as HMSScreenVideoTrack, audio: audioTrack as HMSScreenAudioTrack };\n}\n\nexport function isAudio(track: HMSTrack | undefined) {\n  return track && track.type === 'audio';\n}\n\nexport function isVideo(track: HMSTrack | undefined) {\n  return track && track.type === 'video';\n}\n\nexport function isScreenShare(track: HMSTrack | undefined) {\n  return track && track.source === 'screen';\n}\n\nexport function isAudioPlaylist(track: HMSTrack | undefined) {\n  return track && track.source === 'audioplaylist';\n}\n\nexport function isVideoPlaylist(track: HMSTrack | undefined) {\n  return track && track.source === 'videoplaylist';\n}\n\nexport function isDegraded(track: HMSVideoTrack) {\n  if (track) {\n    return Boolean(track?.degraded);\n  }\n  return false;\n}\n\nexport function isTrackEnabled(store: HMSStore, trackID?: string) {\n  if (trackID && store.tracks[trackID]) {\n    return store.tracks[trackID].enabled;\n  }\n  return false;\n}\n\n/**\n * Should UI show the video track as enabled\n */\nexport function isTrackDisplayEnabled(store: HMSStore, trackID?: string) {\n  if (trackID && store.tracks[trackID]) {\n    return store.tracks[trackID].displayEnabled;\n  }\n  return false;\n}\n\nexport function isRoleAllowedToPublish(role?: HMSRole | null): HMSPublishAllowed {\n  let video = false,\n    audio = false,\n    screen = false;\n  if (role?.publishParams?.allowed) {\n    video = role.publishParams.allowed.includes('video');\n    audio = role.publishParams.allowed.includes('audio');\n    screen = role.publishParams.allowed.includes('screen');\n  }\n  return {\n    video,\n    audio,\n    screen,\n  };\n}\n","import { createSelector } from 'reselect';\nimport { HMSPlaylistSelector, HMSPlaylistType, HMSStore } from '../schema';\n\n/**\n * @internal\n */\nconst selectPlaylistMap =\n  (type: HMSPlaylistType = HMSPlaylistType.audio) =>\n  (store: HMSStore) =>\n    store.playlist[type].list;\n\nconst selectPlaylistSelection =\n  (type: HMSPlaylistType = HMSPlaylistType.audio) =>\n  (store: HMSStore) =>\n    store.playlist[type].selection;\n\nconst selectPlaylistProgress =\n  (type: HMSPlaylistType = HMSPlaylistType.audio) =>\n  (store: HMSStore) =>\n    store.playlist[type].progress;\n\nconst selectPlaylistCurrentTime =\n  (type: HMSPlaylistType = HMSPlaylistType.audio) =>\n  (store: HMSStore) =>\n    store.playlist[type].currentTime;\n\nconst selectPlaylistPlaybackRate =\n  (type: HMSPlaylistType = HMSPlaylistType.audio) =>\n  (store: HMSStore) =>\n    store.playlist[type].playbackRate;\n\nconst selectPlaylistVolume =\n  (type: HMSPlaylistType = HMSPlaylistType.audio) =>\n  (store: HMSStore) =>\n    store.playlist[type].volume;\n\n/**\n * Select an array of playlist items.\n */\nconst selectPlaylist = (type: HMSPlaylistType = HMSPlaylistType.audio) =>\n  createSelector(selectPlaylistMap(type), storePlaylist => {\n    return Object.values(storePlaylist);\n  });\n\nconst selectPlaylistSelectedItem = (type: HMSPlaylistType = HMSPlaylistType.audio) =>\n  createSelector(selectPlaylistMap(type), selectPlaylistSelection(type), (storePlaylist, currentSelection) => {\n    if (!currentSelection.id) {\n      return;\n    }\n    return storePlaylist[currentSelection.id];\n  });\n\nexport const selectAudioPlaylist: HMSPlaylistSelector = {\n  selection: selectPlaylistSelection(HMSPlaylistType.audio),\n  progress: selectPlaylistProgress(HMSPlaylistType.audio),\n  currentTime: selectPlaylistCurrentTime(HMSPlaylistType.audio),\n  playbackRate: selectPlaylistPlaybackRate(HMSPlaylistType.audio),\n  volume: selectPlaylistVolume(HMSPlaylistType.audio),\n  list: selectPlaylist(HMSPlaylistType.audio),\n  selectedItem: <any>selectPlaylistSelectedItem(HMSPlaylistType.audio),\n};\n\nexport const selectVideoPlaylist: HMSPlaylistSelector = {\n  selection: selectPlaylistSelection(HMSPlaylistType.video),\n  progress: selectPlaylistProgress(HMSPlaylistType.video),\n  currentTime: selectPlaylistCurrentTime(HMSPlaylistType.video),\n  playbackRate: selectPlaylistPlaybackRate(HMSPlaylistType.video),\n  volume: selectPlaylistVolume(HMSPlaylistType.video),\n  list: selectPlaylist(HMSPlaylistType.video),\n  selectedItem: <any>selectPlaylistSelectedItem(HMSPlaylistType.video),\n};\n","import { createSelector } from 'reselect';\nimport { byIDCurry } from './common';\nimport {\n  selectFullAppData,\n  selectHMSMessages,\n  selectLocalPeerID,\n  selectPeers,\n  selectPeersMap,\n  selectTracksMap,\n} from './selectors';\nimport {\n  getScreenSharesByPeer,\n  isAudio,\n  isAudioPlaylist,\n  isTrackEnabled,\n  isVideo,\n  isVideoPlaylist,\n} from './selectorUtils';\nimport { HMSLogger } from '../../common/ui-logger';\nimport {\n  HMSAudioTrack,\n  HMSGenericTypes,\n  HMSPeer,\n  HMSPeerID,\n  HMSRoleName,\n  HMSScreenVideoTrack,\n  HMSStore,\n  HMSTrack,\n  HMSTrackID,\n  HMSVideoTrack,\n} from '../schema';\n\nconst selectPeerID = (_store: HMSStore, peerID: HMSPeerID | undefined) => peerID;\nconst selectTrackID = (_store: HMSStore, trackID: HMSTrackID | undefined) => trackID;\nconst selectRoleName = (_store: HMSStore, roleName: HMSRoleName | undefined) => roleName;\nconst selectAppDataKey = (_store: HMSStore, key: string | undefined) => key;\n\nconst selectPeerByIDBare = createSelector([selectPeersMap, selectPeerID], (storePeers, peerID) =>\n  peerID ? storePeers[peerID] : null,\n);\n\nconst selectTrackByIDBare = createSelector([selectTracksMap, selectTrackID], (storeTracks, trackID) =>\n  trackID ? storeTracks[trackID] : null,\n);\n\nconst selectVideoTrackByIDBare = createSelector([selectTracksMap, selectTrackID], (storeTracks, trackID) => {\n  if (!trackID) {\n    return null;\n  }\n  const track = storeTracks[trackID] as HMSVideoTrack | undefined;\n  if (track?.type === 'video') {\n    return track;\n  }\n  return null;\n});\n\nconst selectAudioTrackByIDBare = createSelector([selectTracksMap, selectTrackID], (storeTracks, trackID) => {\n  if (!trackID) {\n    return null;\n  }\n  const track = storeTracks[trackID] as HMSAudioTrack | undefined;\n  if (track?.type === 'audio') {\n    return track;\n  }\n  return null;\n});\n\nconst selectScreenAudioTrackByIDBare = createSelector([selectTracksMap, selectTrackID], (storeTracks, trackID) => {\n  if (!trackID) {\n    return null;\n  }\n  const track = storeTracks[trackID] as HMSAudioTrack | undefined;\n  if (track?.type === 'audio' && track?.source === 'screen') {\n    return track;\n  }\n  return null;\n});\nconst selectScreenVideoTrackByIDBare = createSelector([selectTracksMap, selectTrackID], (storeTracks, trackID) => {\n  if (!trackID) {\n    return null;\n  }\n  const track = storeTracks[trackID] as HMSScreenVideoTrack | undefined;\n  if (track?.type === 'video' && track?.source === 'screen') {\n    return track;\n  }\n  return null;\n});\n\n/**\n * Select the {@link HMSPeer} object given a peer ID.\n */\nexport const selectPeerByID = byIDCurry(selectPeerByIDBare);\n\n/**\n * Select a particular key from ui app data by passed in key.\n * if key is not passed, full data is returned.\n */\nexport const selectAppData = byIDCurry(\n  createSelector([selectFullAppData, selectAppDataKey], (appData, key) => {\n    if (!appData) {\n      return undefined;\n    }\n    if (key) {\n      return appData[key];\n    }\n    return appData;\n  }),\n);\n\n/**\n * Select a particular key from session store by passed in key.\n * if key is not passed, full data is returned.\n */\nexport function selectSessionStore<T extends HMSGenericTypes = { sessionStore: Record<string, any> }>(): (\n  store: HMSStore<T>,\n) => T['sessionStore'] | undefined;\nexport function selectSessionStore<\n  T extends HMSGenericTypes = { sessionStore: Record<string, any> },\n  K extends keyof T['sessionStore'] = keyof T['sessionStore'],\n>(key: K): (store: HMSStore<T>) => T['sessionStore'][K] | undefined;\nexport function selectSessionStore<\n  T extends HMSGenericTypes = { sessionStore: Record<string, any> },\n  K extends keyof T['sessionStore'] = keyof T['sessionStore'],\n>(key?: K) {\n  return (store: HMSStore<T>) => {\n    if (!store.sessionStore) {\n      return undefined;\n    }\n    if (key) {\n      return store.sessionStore[key];\n    }\n    return store.sessionStore;\n  };\n}\n\nexport const selectAppDataByPath = (...keys: string[]) =>\n  createSelector([selectFullAppData], appData => {\n    if (!appData) {\n      return undefined;\n    }\n    if (keys && keys.length > 0) {\n      let value = appData;\n      for (const key of keys) {\n        if (!key) {\n          return value;\n        }\n        value = value?.[key];\n      }\n      return value;\n    }\n    return appData;\n  });\n\n/**\n * Select the name of a {@link HMSPeer} given a peer ID.\n */\nexport const selectPeerNameByID = byIDCurry(createSelector(selectPeerByIDBare, peer => peer?.name));\n\n/**\n * Select the {@link HMSTrack} object given a track ID.\n */\nexport const selectTrackByID = byIDCurry(selectTrackByIDBare);\n\n/**\n * Select the {@link HMSVideoTrack} object given a track ID.\n */\nexport const selectVideoTrackByID = byIDCurry(selectVideoTrackByIDBare);\n\n/**\n * Select the {@link HMSAudioTrack} object given a track ID.\n */\nexport const selectAudioTrackByID = byIDCurry(selectAudioTrackByIDBare);\n\n/**\n * Select the {@link HMSScreenAudioTrack} object given a track ID.\n */\nexport const selectScreenAudioTrackByID = byIDCurry(selectScreenAudioTrackByIDBare);\n\n/**\n * Select the {@link HMSScreenVideoTrack} object given a track ID.\n */\nexport const selectScreenVideoTrackByID = byIDCurry(selectScreenVideoTrackByIDBare);\n\n/**\n * Select the primary video track of a peer given a peer ID.\n */\nexport const selectVideoTrackByPeerID = byIDCurry((store: HMSStore, peerID?: HMSPeerID): HMSVideoTrack | undefined => {\n  const peer = selectPeerByIDBare(store, peerID);\n  if (peer && peer.videoTrack && peer.videoTrack !== '') {\n    return store.tracks[peer.videoTrack] as HMSVideoTrack;\n  }\n  return undefined;\n});\n\n/**\n * Select the primary audio track of a peer given a peer ID.\n */\nexport const selectAudioTrackByPeerID = byIDCurry((store: HMSStore, peerID?: HMSPeerID): HMSAudioTrack | undefined => {\n  const peer = selectPeerByIDBare(store, peerID);\n  if (peer && peer.audioTrack && peer.audioTrack !== '') {\n    return store.tracks[peer.audioTrack] as HMSAudioTrack;\n  }\n  return undefined;\n});\n\n/**\n * Select the camera stream of a peer given a peer ID.\n * This is the primary video track of a peer.\n */\nexport const selectCameraStreamByPeerID = selectVideoTrackByPeerID;\n\n/**\n * Select an array of auxiliary tracks of a peer given a peer ID.\n */\nexport const selectAuxiliaryTracksByPeerID = byIDCurry((store: HMSStore, peerID?: HMSPeerID): HMSTrack[] => {\n  const peer = selectPeerByIDBare(store, peerID);\n  return peer?.auxiliaryTracks.map(trackID => store.tracks[trackID]) || [];\n});\n\nconst selectSpeakerByTrackID = (store: HMSStore, trackID: HMSTrackID | undefined) => {\n  return trackID ? store.speakers[trackID] : null;\n};\n\n/**\n * Select the audio level of a track given a track ID.\n */\nexport const selectTrackAudioByID = byIDCurry(\n  createSelector(selectSpeakerByTrackID, speaker => speaker?.audioLevel || 0),\n);\n\n/**\n * Select speaker object of audioTrack of a peer given a peer ID.\n */\nconst selectSpeakerByPeerID = (store: HMSStore, peerID: HMSPeerID | undefined) => {\n  const peerAudioTrack = selectAudioTrackByPeerID(peerID)(store);\n  return selectSpeakerByTrackID(store, peerAudioTrack?.id);\n};\n\n/**\n * Select audio level of audioTrack of a peer given a peer IDß.\n */\nexport const selectPeerAudioByID = byIDCurry(\n  createSelector(selectSpeakerByPeerID, speaker => speaker?.audioLevel || 0),\n);\n\nexport const selectConnectionQualityByPeerID = byIDCurry((store: HMSStore, peerID: HMSPeerID | undefined) => {\n  if (peerID) {\n    return store.connectionQualities[peerID];\n  }\n  return undefined;\n});\n\n/**\n * Select the first auxiliary audio track of a peer given a peer ID.\n */\nexport const selectAuxiliaryAudioByPeerID = byIDCurry((store: HMSStore, peerID?: HMSPeerID) => {\n  const peer = selectPeerByIDBare(store, peerID);\n  if (peer) {\n    const trackID = peer?.auxiliaryTracks.find(trackID => isAudio(store.tracks[trackID]));\n    return trackID ? (store.tracks[trackID] as HMSAudioTrack) : undefined;\n  }\n  return undefined;\n});\n\nexport const selectVideoPlaylistVideoTrackByPeerID = byIDCurry(\n  createSelector(selectTracksMap, selectPeerByIDBare, (tracks, peer) => {\n    const trackID = peer?.auxiliaryTracks.find(trackID => {\n      const track = tracks[trackID];\n      return isVideoPlaylist(track) && isVideo(track);\n    });\n    return trackID ? (tracks[trackID] as HMSVideoTrack) : undefined;\n  }),\n);\n\nexport const selectVideoPlaylistAudioTrackByPeerID = byIDCurry(\n  createSelector(selectTracksMap, selectPeerByIDBare, (tracks, peer) => {\n    const trackID = peer?.auxiliaryTracks.find(trackID => {\n      const track = tracks[trackID];\n      return isVideoPlaylist(track) && isAudio(track);\n    });\n    return trackID ? (tracks[trackID] as HMSAudioTrack) : undefined;\n  }),\n);\n\nexport const selectAudioPlaylistTrackByPeerID = byIDCurry(\n  createSelector(selectTracksMap, selectPeerByIDBare, (tracks, peer) => {\n    const trackID = peer?.auxiliaryTracks.find(trackID => {\n      const track = tracks[trackID];\n      return isAudioPlaylist(track) && isAudio(track);\n    });\n    return trackID ? (tracks[trackID] as HMSAudioTrack) : undefined;\n  }),\n);\n\nexport const selectScreenSharesByPeerId = byIDCurry(\n  createSelector(selectTracksMap, selectPeerByIDBare, (tracks, peer) => {\n    return getScreenSharesByPeer(tracks, peer);\n  }),\n);\n\n/**\n * Select the screen share video track of a peer given a peer ID.\n */\nexport const selectScreenShareByPeerID = (id?: string) =>\n  createSelector(selectScreenSharesByPeerId(id), screenshare => {\n    return screenshare.video;\n  });\n\n/**\n * Select the screen share audio track of a peer given a peer ID.\n */\nexport const selectScreenShareAudioByPeerID = (id?: string) =>\n  createSelector(selectScreenSharesByPeerId(id), screenshare => {\n    return screenshare.audio;\n  });\n\n/**\n * Select a boolean denoting whether a peer has unmuted audio and sharing it to other peers.\n */\nexport const selectIsPeerAudioEnabled = byIDCurry((store: HMSStore, peerID?: string) => {\n  const peer = selectPeerByIDBare(store, peerID);\n  return isTrackEnabled(store, peer?.audioTrack);\n});\n\n/**\n * Select a boolean denoting whether a peer has unmuted video and sharing it to other peers.\n */\nexport const selectIsPeerVideoEnabled = byIDCurry((store: HMSStore, peerID?: string) => {\n  const peer = selectPeerByIDBare(store, peerID);\n  return isTrackEnabled(store, peer?.videoTrack);\n});\n\n/**\n * Select a boolean denoting whether you've muted an audio track locally(only for you) given a track ID.\n */\nexport const selectIsAudioLocallyMuted = byIDCurry((store: HMSStore, trackID?: string) => {\n  if (trackID && store.tracks[trackID]) {\n    return (store.tracks[trackID] as HMSAudioTrack).volume === 0;\n  }\n  return undefined;\n});\n\n/**\n * Select a boolean denoting whether you've muted the primary audio track of a peer locally(only for you) given a peer ID.\n */\nexport const selectIsLocallyMutedByPeerID = byIDCurry((store: HMSStore, peerID?: string) => {\n  const peer = selectPeerByIDBare(store, peerID);\n  return selectIsAudioLocallyMuted(peer?.audioTrack)(store);\n});\n\n/**\n * Select a boolean denoting whether you've muted the screen share audio track of a peer locally(only for you) given a peer ID.\n */\nexport const selectIsScreenShareLocallyMutedByPeerID = byIDCurry((store: HMSStore, peerID?: string) => {\n  const track = selectScreenShareAudioByPeerID(peerID)(store);\n  return selectIsAudioLocallyMuted(track?.id)(store);\n});\n\n/**\n * Select the local audio volume of an audio track given a track ID.\n *\n * NOTE: **Volume** of a track is different from **Audio Level** of a track,\n * - Audio Level measures the audio of a track and it comes from 100ms's servers.\n * - Volume is how loud you hear the audio of a track, this is controlled by you at the client side.\n */\nexport const selectAudioTrackVolume = byIDCurry((store: HMSStore, trackID?: string) => {\n  const track = selectTrackByIDBare(store, trackID);\n  if (track) {\n    if (track.type !== 'audio') {\n      HMSLogger.w('Please pass audio track here');\n      return undefined;\n    }\n    return track.volume;\n  }\n  return undefined;\n});\n\n/**\n * Select the local audio volume of the primary audio track of a peer given a peer ID.\n */\nexport const selectAudioVolumeByPeerID = byIDCurry((store: HMSStore, peerID?: string) => {\n  const peer = selectPeerByIDBare(store, peerID);\n  return selectAudioTrackVolume(peer?.audioTrack)(store);\n});\n\n/**\n * Select the local audio volume of the screen share of a peer given a peer ID.\n */\nexport const selectScreenshareAudioVolumeByPeerID = byIDCurry((store: HMSStore, peerID?: string) => {\n  const track = selectScreenShareAudioByPeerID(peerID)(store);\n  return selectAudioTrackVolume(track?.id)(store);\n});\n\n/**\n * Select the current simulcast layer of a track given a track ID.\n */\nexport const selectSimulcastLayerByTrack = byIDCurry((store: HMSStore, trackID?: string) => {\n  const track = selectTrackByIDBare(store, trackID);\n  if (track) {\n    if (track.type !== 'video') {\n      HMSLogger.w('Please pass video track here');\n      return undefined;\n    }\n    return track.layer;\n  }\n  return undefined;\n});\n\nconst selectMessagesByPeerIDInternal = createSelector(\n  [selectHMSMessages, selectLocalPeerID, selectPeerID],\n  (messages, localPeerID, peerID) => {\n    if (!peerID) {\n      return undefined;\n    }\n    return messages.filter(message => {\n      // Broadcast message\n      if (!message.recipientPeer && !message.recipientRoles?.length) {\n        return false;\n      }\n      // if localPeer or peerID is not a sender remove this\n      if (message.sender && ![localPeerID, peerID].includes(message.sender)) {\n        return false;\n      }\n      // at this point we know the sender is one of local or passed in peer, check the recipient side\n      return [localPeerID, peerID].includes(message.recipientPeer!);\n    });\n  },\n);\n\nconst selectMessagesByRoleInternal = createSelector([selectHMSMessages, selectRoleName], (messages, roleName) => {\n  if (!roleName) {\n    return undefined;\n  }\n  return messages.filter(message => {\n    // Not Role message - Broadcast message or Private Peer message\n    if (!message.recipientRoles?.length) {\n      return false;\n    }\n    return message.recipientRoles?.includes(roleName);\n  });\n});\n\nexport const selectBroadcastMessages = createSelector(selectHMSMessages, messages => {\n  return messages.filter(message => {\n    return !message.recipientPeer && !message.recipientRoles?.length;\n  });\n});\n\nconst selectUnreadMessageCountByRole = createSelector([selectMessagesByRoleInternal, selectRoleName], messages => {\n  if (!messages) {\n    return 0;\n  }\n  return messages.filter(m => !m.read).length;\n});\n\nconst selectUnreadMessageCountByPeerID = createSelector([selectMessagesByPeerIDInternal, selectPeerID], messages => {\n  if (!messages) {\n    return 0;\n  }\n  return messages.filter(m => !m.read).length;\n});\n\nexport const selectBroadcastMessagesUnreadCount = createSelector(selectBroadcastMessages, messages => {\n  return messages.filter(m => !m.read).length;\n});\n\nexport const selectMessagesByPeerID = byIDCurry(selectMessagesByPeerIDInternal);\n\nexport const selectMessagesByRole = byIDCurry(selectMessagesByRoleInternal);\n\nexport const selectMessagesUnreadCountByRole = byIDCurry(selectUnreadMessageCountByRole);\nexport const selectMessagesUnreadCountByPeerID = byIDCurry(selectUnreadMessageCountByPeerID);\n\n/**\n * Select an array of peers of a particular role\n * @param role HMSRoleName\n * @returns HMSPeer[]\n */\nexport const selectPeersByRole = (role: HMSRoleName) =>\n  createSelector([selectPeers], peers => {\n    return peers.filter(p => p.roleName === role);\n  });\n\n/**\n * Select an array of peers of a particular role\n * @param roles HMSRoleName[]\n * @returns HMSPeer[]\n */\nexport const selectPeersByRoles = (roles: HMSRoleName[]) =>\n  createSelector([selectPeers], (peers: HMSPeer[]) => {\n    return peers.filter((peer: HMSPeer) => {\n      return peer.roleName ? roles.includes(peer.roleName) : false;\n    });\n  });\n/**\n * Selects the peer metadata for the passed in peer and returns it as JSON. If metadata is not present\n * or conversion to JSON gives an error, an empty object is returned.\n * Please directly use peer.metadata in case the metadata is not JSON by design.\n */\nexport const selectPeerMetadata = (peerId: HMSPeerID) =>\n  createSelector(selectPeerByID(peerId), peer => {\n    try {\n      return peer?.metadata && peer.metadata !== '' ? JSON.parse(peer.metadata) : {};\n    } catch (error) {\n      console.error('cannot parse peer metadata', error);\n      return {};\n    }\n  });\n\nexport const selectPeerName = (peerId: HMSPeerID) => createSelector(selectPeerByID(peerId), peer => peer?.name);\n","import { HMSStatsStore, HMSStore } from '../schema';\n\nexport type StoreTypes = HMSStore | HMSStatsStore;\n\ntype byIDSelector<S extends StoreTypes, T> = (store: S, id?: string) => T;\n\n/**\n * StoreSelector is a function that takes in {@link HMSStore} as argument\n * and returns a part of the store that is queried using the selector.\n * @typeParam T Part of the store that you wish to query.\n */\nexport type StoreSelector<S extends StoreTypes, T> = (store: S) => T;\n\n/**\n * takes in a normal selector which has store and id as input and curries it to make it easier to use.\n * Before: store.getState((store) => normalSelector(store, peerID))\n * After: store.getState(curriedSelector(peerID))\n */\nexport function byIDCurry<S extends StoreTypes, T>(selector: byIDSelector<S, T>): (id?: string) => StoreSelector<S, T> {\n  return (id?: string) => {\n    return (store: S) => selector(store, id);\n  };\n}\n","import { HMSLogLevel } from '../core/hmsSDKStore/sdkTypes';\n\nconst HMS_STORE_TAG = 'HMS-Store:';\n\nexport class HMSLogger {\n  static level: HMSLogLevel = HMSLogLevel.VERBOSE;\n\n  static v(tag: string, ...data: any[]) {\n    this.log(HMSLogLevel.VERBOSE, tag, ...data);\n  }\n\n  static d(...data: any[]) {\n    this.log(HMSLogLevel.DEBUG, ...data);\n  }\n\n  static i(...data: any[]) {\n    this.log(HMSLogLevel.INFO, ...data);\n  }\n\n  static w(...data: any[]) {\n    this.log(HMSLogLevel.WARN, ...data);\n  }\n\n  static e(...data: any[]) {\n    this.log(HMSLogLevel.ERROR, ...data);\n  }\n\n  static time(mark: string) {\n    this.log(HMSLogLevel.TIME, '[HMSPerformanceTiming]', mark);\n  }\n\n  static timeEnd(mark: string) {\n    this.log(HMSLogLevel.TIMEEND, '[HMSPerformanceTiming]', mark, mark);\n  }\n\n  static cleanUp() {\n    performance.clearMarks();\n    performance.clearMeasures();\n  }\n\n  /* eslint-disable */\n  private static log(level: HMSLogLevel, ...data: any[]) {\n    if (this.level.valueOf() > level.valueOf()) {\n      return;\n    }\n\n    switch (level) {\n      case HMSLogLevel.VERBOSE: {\n        console.log(HMS_STORE_TAG, ...data);\n        break;\n      }\n      case HMSLogLevel.DEBUG: {\n        console.debug(HMS_STORE_TAG, ...data);\n        break;\n      }\n      case HMSLogLevel.INFO: {\n        console.info(HMS_STORE_TAG, ...data);\n        break;\n      }\n      case HMSLogLevel.WARN: {\n        console.warn(HMS_STORE_TAG, ...data);\n        break;\n      }\n      case HMSLogLevel.ERROR: {\n        console.error(HMS_STORE_TAG, ...data);\n        break;\n      }\n      case HMSLogLevel.TIME: {\n        performance.mark(data[1]);\n        break;\n      }\n      case HMSLogLevel.TIMEEND: {\n        const tag = data[0];\n        const mark = data[1];\n        try {\n          const entry = performance.measure(mark, mark);\n          //@ts-ignore\n          this.log(HMSLogLevel.DEBUG, tag, mark, entry?.duration);\n          performance.clearMarks(mark);\n          performance.clearMeasures(mark);\n        } catch (error) {\n          this.log(HMSLogLevel.DEBUG, tag, mark, error);\n        }\n        break;\n      }\n    }\n  }\n}\n","import { createSelector } from 'reselect';\nimport { HMSRole } from '@100mslive/hms-video';\nimport { selectLocalPeerRole, selectPeersMap, selectPreviewRole, selectRolesMap, selectTracksMap } from './selectors';\nimport { isRoleAllowedToPublish } from './selectorUtils';\nimport { HMSPeer, HMSStore } from '../schema';\n\nexport interface HMSPeerWithMuteStatus {\n  peer: HMSPeer;\n  isAudioEnabled?: boolean;\n}\n\n/**\n * @privateRemarks\n * this is more friendly to UI format, the object in store has only peer id and role name instead of the full objects\n */\nexport interface HMSRoleChangeRequest {\n  requestedBy?: HMSPeer;\n  role: HMSRole;\n  token: string;\n}\n\nexport const selectPeersWithAudioStatus = createSelector([selectPeersMap, selectTracksMap], (peersMap, tracksMap) => {\n  const participants: HMSPeerWithMuteStatus[] = Object.values(peersMap).map(peer => {\n    return {\n      peer: peer,\n      isAudioEnabled: peer.audioTrack ? tracksMap[peer.audioTrack]?.enabled : false,\n    };\n  });\n  return participants;\n});\n\nconst selectRoleChangeStoreRequest = (store: HMSStore) => {\n  return store.roleChangeRequests[0] || null;\n};\n\n/**\n * Select the role change request received for your local peer.\n */\nexport const selectRoleChangeRequest = createSelector(\n  [selectRoleChangeStoreRequest, selectPeersMap, selectRolesMap],\n  (request, peersMap, rolesMap): HMSRoleChangeRequest | null => {\n    if (!request) {\n      return null;\n    }\n    return {\n      requestedBy: request.requestedBy ? peersMap[request.requestedBy] : undefined,\n      role: rolesMap[request.roleName],\n      token: request.token,\n    };\n  },\n);\n\n/**\n * Select what streams is the local peer allowed to publish from video, audio and screenshare.\n */\nexport const selectIsAllowedToPublish = createSelector([selectLocalPeerRole], role => isRoleAllowedToPublish(role));\n\n/**\n * Select what streams is the local peer allowed to preview from video, audio\n */\nexport const selectIsAllowedToPreviewMedia = createSelector([selectPreviewRole], role => isRoleAllowedToPublish(role));\n","import { createSelector } from 'reselect';\nimport {\n  selectLocalAudioTrackID,\n  selectLocalVideoTrackID,\n  selectPeers,\n  selectRolesMap,\n  selectRoom,\n  selectTracksMap,\n} from './selectors';\nimport { isRoleAllowedToPublish } from './selectorUtils';\nimport { HMSPeer, HMSTrack } from '../schema';\n\nexport const selectRoleByRoleName = (roleName: string) =>\n  createSelector([selectRolesMap], rolesMap => rolesMap[roleName]);\n\nexport const selectIsRoleAllowedToPublish = (roleName: string) => {\n  return createSelector(selectRoleByRoleName(roleName), role => isRoleAllowedToPublish(role));\n};\n\nconst selectLocalVideoPlugins = createSelector([selectLocalVideoTrackID, selectTracksMap], (trackID, tracksMap) => {\n  let track: HMSTrack | null = null;\n  if (trackID) {\n    track = tracksMap[trackID];\n  }\n  return track?.plugins || [];\n});\n\nconst selectLocalAudioPlugins = createSelector([selectLocalAudioTrackID, selectTracksMap], (trackID, tracksMap) => {\n  let track: HMSTrack | null = null;\n  if (trackID) {\n    track = tracksMap[trackID];\n  }\n  return track?.plugins || [];\n});\n\nexport const selectIsLocalVideoPluginPresent = (pluginName: string) => {\n  return createSelector([selectLocalVideoPlugins], plugins => {\n    return plugins.includes(pluginName);\n  });\n};\n\nexport const selectIsLocalAudioPluginPresent = (pluginName: string) => {\n  return createSelector([selectLocalAudioPlugins], plugins => {\n    return plugins.includes(pluginName);\n  });\n};\n\n/**\n * Selects the first peer passing the condition given by the argument predicate function\n *\n * Ex: to select a peer whose metadata has spotlight set to true(assuming peer.metadata is a valid json string), use\n * ```js\n * const spotlightPeer = useHMSStore(selectPeerByCondition(peer => JSON.parse(peer.metadata).spotlight))\n * ```\n */\nexport const selectPeerByCondition = (predicate: (peer: HMSPeer) => boolean) =>\n  createSelector(selectPeers, peers => {\n    return peers.find(predicate);\n  });\n\n/**\n * Selects all peers passing the condition given by the argument predicate function\n *\n * Ex: to select peers with isHandRaised set to true in their metadata(assuming peer.metadata is a valid json string), use\n * ```js\n * const handRaisedPeers = useHMSStore(selectPeersByCondition(peer => JSON.parse(peer.metadata).isHandRaised))\n * ```\n */\nexport const selectPeersByCondition = (predicate: (peer: HMSPeer) => boolean) =>\n  createSelector(selectPeers, peers => {\n    return peers.filter(predicate);\n  });\n\n/**\n * Returns a boolean to indicate if the local peer joined within the past `timeMs` milliseconds.\n *\n * Ex: to know if the local peer joined within the last one second\n * ```js\n * const joinedWithinASecond = useHMSStore(selectDidIJoinWithin(1000));\n * ```\n */\nexport const selectDidIJoinWithin = (timeMs: number) =>\n  createSelector(selectRoom, room => room.joinedAt && Date.now() - room.joinedAt.getTime() <= timeMs);\n","import {\n  HMSAudioPlugin,\n  HMSAudioTrack as SDKHMSAudioTrack,\n  HMSChangeMultiTrackStateParams as SDKHMSChangeMultiTrackStateParams,\n  HMSChangeMultiTrackStateRequest as SDKHMSChangeMultiTrackStateRequest,\n  HMSChangeTrackStateRequest as SDKHMSChangeTrackStateRequest,\n  HMSException as SDKHMSException,\n  HMSLeaveRoomRequest as SDKHMSLeaveRoomRequest,\n  HMSLocalAudioTrack as SDKHMSLocalAudioTrack,\n  HMSLocalTrack as SDKHMSLocalTrack,\n  HMSLocalVideoTrack as SDKHMSLocalVideoTrack,\n  HMSLogLevel,\n  HMSPluginSupportResult,\n  HMSRemoteTrack as SDKHMSRemoteTrack,\n  HMSRemoteVideoTrack as SDKHMSRemoteVideoTrack,\n  HMSRoleChangeRequest as SDKHMSRoleChangeRequest,\n  HMSScreenShareConfig,\n  HMSSdk,\n  HMSSimulcastLayer,\n  HMSTrack as SDKHMSTrack,\n  HMSVideoPlugin,\n  HMSVideoTrack as SDKHMSVideoTrack,\n  SessionStoreUpdate,\n} from '@100mslive/hms-video';\nimport { PEER_NOTIFICATION_TYPES, TRACK_NOTIFICATION_TYPES } from './common/mapping';\nimport { isRemoteTrack } from './sdkUtils/sdkUtils';\nimport { areArraysEqual, mergeNewPeersInDraft, mergeNewTracksInDraft } from './sdkUtils/storeMergeUtils';\nimport { SDKToHMS } from './adapter';\nimport { HMSNotifications } from './HMSNotifications';\nimport { HMSPlaylist } from './HMSPlaylist';\nimport { HMSSessionStore } from './HMSSessionStore';\nimport { NamedSetState } from './internalTypes';\nimport * as sdkTypes from './sdkTypes';\nimport { HMSLogger } from '../../common/ui-logger';\nimport { BeamSpeakerLabelsLogger } from '../../controller/beam/BeamSpeakerLabelsLogger';\nimport { IHMSActions } from '../IHMSActions';\nimport { IHMSStore } from '../IHMSStore';\nimport {\n  createDefaultStoreState,\n  HMSChangeMultiTrackStateParams,\n  HMSGenericTypes,\n  HMSMediaSettings,\n  HMSMessage,\n  HMSMessageInput,\n  HMSPeer,\n  HMSPeerID,\n  HMSPlaylistType,\n  HMSRoleName,\n  HMSRoomState,\n  HMSStore,\n  HMSTrack,\n  HMSTrackID,\n  HMSTrackSource,\n  HMSVideoTrack,\n  IHMSPlaylistActions,\n  IHMSSessionStoreActions,\n} from '../schema';\nimport {\n  HMSRoleChangeRequest,\n  selectHMSMessagesCount,\n  selectIsConnectedToRoom,\n  selectIsLocalScreenShared,\n  selectIsLocalVideoDisplayEnabled,\n  selectIsLocalVideoEnabled,\n  selectLocalAudioTrackID,\n  selectLocalMediaSettings,\n  selectLocalPeer,\n  selectLocalTrackIDs,\n  selectLocalVideoTrackID,\n  selectPeerByID,\n  selectPeersMap,\n  selectPermissions,\n  selectRolesMap,\n  selectRoomState,\n  selectTrackByID,\n  selectTracksMap,\n  selectVideoTrackByID,\n} from '../selectors';\n\n// import { ActionBatcher } from './sdkUtils/ActionBatcher';\n\n/**\n * This class implements the IHMSActions interface for 100ms SDK. It connects with SDK\n * and takes control of data management by letting every action pass through it. The\n * passed in store is ensured to be the single source of truth reflecting current\n * room related data at any point in time.\n *\n * @privateRemarks\n * Things to keep in mind while updating store -\n * 1. Treat setState as an atomic operation, if an action results in multiple changes,\n *    the changes should all happen within single setState function.\n * 2. While updating the state it's very important to not update the reference if\n *    something is unchanged. Copy data in same reference object don't assign new\n *    object.\n * 3. Mental Model(1) - Actions from backend -> Listeners of this class -> update store -> views update themselves\n *    eg. for this - peer added, remote muted etc.\n * 4. Mental Model(2) - Actions from local -> View calls actions -> update store -> views update themselves\n *    eg. local track enabled, join, leave etc.\n * 5. State is immutable, a new copy with new references is created when there is a change,\n *    if you try to modify state outside of setState, there'll be an error.\n */\nexport class HMSSDKActions<T extends HMSGenericTypes = { sessionStore: Record<string, any> }>\n  implements IHMSActions<T>\n{\n  private hmsSDKTracks: Record<string, SDKHMSTrack> = {};\n  private hmsSDKPeers: Record<string, sdkTypes.HMSPeer> = {};\n  private readonly sdk: HMSSdk;\n  private readonly store: IHMSStore<T>;\n  private isRoomJoinCalled = false;\n  private hmsNotifications: HMSNotifications<T>;\n  private ignoredMessageTypes: string[] = [];\n  // private actionBatcher: ActionBatcher;\n  audioPlaylist!: IHMSPlaylistActions;\n  videoPlaylist!: IHMSPlaylistActions;\n  sessionStore: IHMSSessionStoreActions<T['sessionStore']>;\n  private beamSpeakerLabelsLogger?: BeamSpeakerLabelsLogger<T>;\n\n  constructor(store: IHMSStore<T>, sdk: HMSSdk, notificationManager: HMSNotifications<T>) {\n    this.store = store;\n    this.sdk = sdk;\n    this.hmsNotifications = notificationManager;\n\n    this.sessionStore = new HMSSessionStore<T['sessionStore']>(this.sdk, this.setSessionStoreValueLocally.bind(this));\n\n    // this.actionBatcher = new ActionBatcher(store);\n  }\n\n  async refreshDevices() {\n    await this.sdk.refreshDevices();\n  }\n\n  async unblockAudio() {\n    await this.sdk.getAudioOutput().unblockAutoplay();\n  }\n\n  async setVolume(value: number, trackId?: HMSTrackID) {\n    if (trackId) {\n      await this.setTrackVolume(value, trackId);\n    } else {\n      await this.sdk.getAudioOutput().setVolume(value);\n      this.syncRoomState('setOutputVolume');\n    }\n  }\n\n  async setAudioOutputDevice(deviceId: string): Promise<void> {\n    const deviceInfo = await this.sdk.getAudioOutput().setDevice(deviceId);\n    if (deviceInfo) {\n      this.setState(draftStore => {\n        draftStore.settings.audioOutputDeviceId = deviceId;\n      }, 'setAudioOutputDevice');\n    }\n  }\n\n  async setPreferredLayer(trackId: string, layer: sdkTypes.HMSPreferredSimulcastLayer) {\n    const track = this.hmsSDKTracks[trackId];\n    if (track) {\n      if (track instanceof SDKHMSRemoteVideoTrack) {\n        //@ts-ignore\n        if (layer === HMSSimulcastLayer.NONE) {\n          HMSLogger.d(`layer ${HMSSimulcastLayer.NONE} will be ignored`);\n          return;\n        }\n        const alreadyInSameState = this.store.getState(selectVideoTrackByID(trackId))?.preferredLayer === layer;\n        if (alreadyInSameState) {\n          HMSLogger.d(`preferred layer is already ${layer}`);\n          return;\n        }\n        this.setState(draftStore => {\n          const track = draftStore.tracks[trackId] as HMSVideoTrack;\n          if (track) {\n            track.preferredLayer = layer;\n          }\n        }, 'setPreferredLayer');\n        await track.setPreferredLayer(layer);\n      } else {\n        HMSLogger.d(`track ${trackId} is not a remote video track`);\n      }\n    } else {\n      this.logPossibleInconsistency(`track ${trackId} not present, unable to set preffer layer`);\n    }\n  }\n\n  getAuthTokenByRoomCode(\n    tokenRequest: sdkTypes.TokenRequest,\n    tokenRequestOptions?: sdkTypes.TokenRequestOptions,\n  ): Promise<string> {\n    return this.sdk.getAuthTokenByRoomCode(tokenRequest, tokenRequestOptions);\n  }\n\n  async preview(config: sdkTypes.HMSPreviewConfig) {\n    if (this.isRoomJoinCalled) {\n      this.logPossibleInconsistency('attempting to call preview after join was called');\n      return; // ignore\n    }\n    const roomState = this.store.getState(selectRoomState);\n    if (roomState === HMSRoomState.Preview || roomState === HMSRoomState.Connecting) {\n      this.logPossibleInconsistency('attempting to call preview while room is in preview/connecting');\n      return;\n    }\n\n    try {\n      this.setState(store => {\n        store.room.roomState = HMSRoomState.Connecting;\n      }, 'connecting');\n      await this.sdkPreviewWithListeners(config);\n    } catch (err) {\n      HMSLogger.e('Cannot show preview. Failed to connect to room - ', err);\n      throw err;\n    }\n  }\n\n  async join(config: sdkTypes.HMSConfig) {\n    if (this.isRoomJoinCalled) {\n      this.logPossibleInconsistency('room join is called again');\n      return; // ignore\n    }\n    try {\n      this.isRoomJoinCalled = true;\n      this.setState(store => {\n        store.room.roomState = HMSRoomState.Connecting;\n      }, 'join');\n      await this.sdkJoinWithListeners(config);\n    } catch (err) {\n      this.isRoomJoinCalled = false; // so it can be called again if needed\n      HMSLogger.e('Failed to connect to room - ', err);\n      throw err;\n    }\n  }\n\n  async leave() {\n    const isConnectedToRoom = this.store.getState(selectIsConnectedToRoom);\n    let notifyServer = true;\n    if (!isConnectedToRoom) {\n      notifyServer = false;\n      this.logPossibleInconsistency('room leave is called when no room is connected');\n    }\n    const currentRoomState = this.store.getState(selectRoomState);\n    this.setState(store => {\n      store.room.roomState = HMSRoomState.Disconnecting;\n    }, 'leaving');\n    return this.sdk\n      .leave(notifyServer)\n      .then(() => {\n        this.resetState('leave');\n        if (this.beamSpeakerLabelsLogger) {\n          this.beamSpeakerLabelsLogger.stop().catch(HMSLogger.e);\n        }\n        HMSLogger.i('left room');\n      })\n      .catch(err => {\n        HMSLogger.e('error in leaving room - ', err);\n        this.setState(store => {\n          store.room.roomState = currentRoomState;\n        }, 'revertLeave');\n      });\n  }\n\n  async setScreenShareEnabled(enabled: boolean, config?: HMSScreenShareConfig) {\n    // TODO: remove this, purely for backward compatibility\n    if (typeof config === 'boolean') {\n      config = { audioOnly: config };\n    }\n    try {\n      if (enabled) {\n        await this.startScreenShare(config);\n      } else {\n        await this.stopScreenShare();\n      }\n    } catch (error) {\n      this.hmsNotifications.sendError(SDKToHMS.convertException(error as SDKHMSException));\n      throw error;\n    }\n  }\n\n  async addTrack(track: MediaStreamTrack, type: HMSTrackSource = 'regular') {\n    await this.sdk.addTrack(track, type);\n    this.syncRoomState('addTrack');\n  }\n\n  async removeTrack(trackId: string) {\n    await this.sdk.removeTrack(trackId);\n    this.syncRoomState('removeTrack');\n  }\n\n  async setLocalAudioEnabled(enabled: boolean) {\n    const trackID = this.store.getState(selectLocalAudioTrackID);\n    if (trackID) {\n      await this.setEnabledTrack(trackID, enabled);\n    }\n  }\n\n  async setLocalVideoEnabled(enabled: boolean) {\n    const trackID = this.store.getState(selectLocalVideoTrackID);\n    if (trackID) {\n      await this.setEnabledTrack(trackID, enabled);\n    }\n  }\n\n  async setEnabledTrack(trackID: string, enabled: boolean) {\n    // if mute/unmute is clicked multiple times for same operation, ignore repeated ones\n    const alreadyInSameState = this.store.getState().tracks[trackID]?.enabled === enabled;\n    if (alreadyInSameState) {\n      // it could also be a case of possible inconsistency where UI state is out of sync with truth\n      this.logPossibleInconsistency(`local track[${trackID}] enabled state - ${enabled}`);\n      return;\n    }\n    this.setState(store => {\n      // show on UI immediately\n      if (!store.tracks[trackID]) {\n        this.logPossibleInconsistency('track id not found for setEnabled');\n      } else {\n        store.tracks[trackID].displayEnabled = enabled;\n      }\n    }, 'displayEnabled');\n    try {\n      await this.setEnabledSDKTrack(trackID, enabled); // do the operation\n      this.syncRoomState('setEnabled');\n    } catch (err) {\n      // rollback on failure\n      this.setState(store => {\n        store.tracks[trackID].displayEnabled = !enabled;\n      }, 'rollbackDisplayEnabled');\n      this.hmsNotifications.sendError(SDKToHMS.convertException(err as SDKHMSException));\n      throw err;\n    }\n    const type = enabled ? sdkTypes.HMSTrackUpdate.TRACK_UNMUTED : sdkTypes.HMSTrackUpdate.TRACK_MUTED;\n    this.hmsNotifications.sendTrackUpdate(type, trackID);\n  }\n\n  async setAudioSettings(settings: Partial<sdkTypes.HMSAudioTrackSettings>) {\n    const trackID = this.store.getState(selectLocalAudioTrackID);\n    if (trackID) {\n      await this.setSDKLocalAudioTrackSettings(trackID, settings);\n      this.syncRoomState('setAudioSettings');\n    }\n  }\n\n  async setVideoSettings(settings: Partial<sdkTypes.HMSVideoTrackSettings>) {\n    const trackID = this.store.getState(selectLocalVideoTrackID);\n    if (trackID) {\n      await this.setSDKLocalVideoTrackSettings(trackID, settings);\n      this.syncRoomState('setVideoSettings');\n    }\n  }\n\n  async switchCamera(): Promise<void> {\n    const trackID = this.store.getState(selectLocalVideoTrackID);\n    if (trackID) {\n      const sdkTrack = this.hmsSDKTracks[trackID] as SDKHMSLocalVideoTrack;\n      if (sdkTrack) {\n        await sdkTrack.switchCamera();\n        this.syncRoomState('switchCamera');\n      }\n    }\n  }\n\n  sendMessage(message: string) {\n    this.sendBroadcastMessage(message);\n  }\n\n  async sendBroadcastMessage(message: string, type?: string) {\n    const sdkMessage = await this.sdk.sendBroadcastMessage(message, type);\n    this.updateMessageInStore(sdkMessage, { message, type });\n  }\n\n  async sendGroupMessage(message: string, roles: string[], type?: string) {\n    const storeRoles = this.store.getState(selectRolesMap);\n    const hmsRoles = roles.map(roleName => {\n      return storeRoles[roleName];\n    });\n    const sdkMessage = await this.sdk.sendGroupMessage(message, hmsRoles, type);\n    this.updateMessageInStore(sdkMessage, { message, recipientRoles: roles, type });\n  }\n\n  async sendDirectMessage(message: string, peerID: string, type?: string) {\n    const hmsPeer = this.hmsSDKPeers[peerID];\n    const sdkMessage = await this.sdk.sendDirectMessage(message, hmsPeer, type);\n    this.updateMessageInStore(sdkMessage, { message, recipientPeer: hmsPeer.peerId, type });\n  }\n\n  private updateMessageInStore(sdkMessage: sdkTypes.HMSMessage | void, messageInput: string | HMSMessageInput) {\n    if (!sdkMessage) {\n      HMSLogger.w('sendMessage', 'Failed to send message', messageInput);\n      throw Error(`sendMessage Failed - ${JSON.stringify(messageInput)}`);\n    }\n    const hmsMessage = SDKToHMS.convertMessage(sdkMessage) as HMSMessage;\n    hmsMessage.read = true;\n    hmsMessage.senderName = 'You';\n    hmsMessage.ignored = this.ignoredMessageTypes.includes(hmsMessage.type);\n    this.putMessageInStore(hmsMessage);\n    return hmsMessage;\n  }\n\n  setMessageRead(readStatus: boolean, messageId?: string) {\n    this.setState(store => {\n      if (messageId) {\n        if (!store.messages.byID[messageId]) {\n          this.logPossibleInconsistency('no message with id is found');\n        } else {\n          store.messages.byID[messageId].read = readStatus;\n        }\n      } else {\n        store.messages.allIDs.forEach((id: string) => {\n          store.messages.byID[id].read = readStatus;\n        });\n      }\n    }, 'setMessageRead');\n  }\n\n  async attachVideo(trackID: string, videoElement: HTMLVideoElement) {\n    if (this.localAndVideoUnmuting(trackID)) {\n      // wait till video unmute has finished\n      return new Promise<void>(resolve => {\n        const unsub = this.store.subscribe(async enabled => {\n          if (enabled) {\n            await this.attachVideoInternal(trackID, videoElement);\n            unsub();\n            resolve();\n          }\n        }, selectIsLocalVideoEnabled);\n      });\n    } else {\n      await this.attachVideoInternal(trackID, videoElement);\n    }\n  }\n\n  async detachVideo(trackID: string, videoElement: HTMLVideoElement) {\n    const sdkTrack = this.hmsSDKTracks[trackID];\n    if (sdkTrack?.type === 'video') {\n      await this.sdk.detachVideo(sdkTrack as SDKHMSVideoTrack, videoElement);\n    } else {\n      if (videoElement) {\n        videoElement.srcObject = null; // so chrome can clean up\n      }\n      HMSLogger.d('possible inconsistency detected - no video track found to remove sink');\n    }\n  }\n\n  async addPluginToVideoTrack(plugin: HMSVideoPlugin, pluginFrameRate?: number): Promise<void> {\n    return this.addRemoveVideoPlugin(plugin, 'add', pluginFrameRate);\n  }\n  async addPluginToAudioTrack(plugin: HMSAudioPlugin): Promise<void> {\n    return this.addRemoveAudioPlugin(plugin, 'add');\n  }\n\n  validateVideoPluginSupport(plugin: HMSVideoPlugin): HMSPluginSupportResult {\n    let result = {} as HMSPluginSupportResult;\n    result.isSupported = false; //Setting default to false\n    if (!plugin) {\n      HMSLogger.w('no plugin passed in for checking support');\n      result.errMsg = 'no plugin passed in for checking support';\n      return result;\n    }\n    const trackID = this.store.getState(selectLocalVideoTrackID);\n    if (!trackID) {\n      HMSLogger.w('video Track not added to local peer yet');\n      result.errMsg = 'call this function only after local peer has video track';\n      return result;\n    }\n    const sdkTrack = this.hmsSDKTracks[trackID];\n    if (sdkTrack) {\n      result = (sdkTrack as SDKHMSLocalVideoTrack).validatePlugin(plugin);\n    } else {\n      HMSLogger.w(`track ${trackID} not present, unable to validate plugin`);\n      result.errMsg = `track ${trackID} not present, unable to validate plugin`;\n    }\n\n    return result;\n  }\n\n  validateAudioPluginSupport(plugin: HMSAudioPlugin): HMSPluginSupportResult {\n    let result = {} as HMSPluginSupportResult;\n    result.isSupported = false; //Setting default to false\n    if (!plugin) {\n      HMSLogger.w('no plugin passed in for checking support\"');\n      result.errMsg = 'no plugin passed in for checking support\"';\n      return result;\n    }\n    const trackID = this.store.getState(selectLocalAudioTrackID);\n    if (!trackID) {\n      HMSLogger.w('audio track not added to local peer yet');\n      result.errMsg = 'call this function only after local peer has audio track';\n      return result;\n    }\n    const sdkTrack = this.hmsSDKTracks[trackID];\n    if (sdkTrack) {\n      result = (sdkTrack as SDKHMSLocalAudioTrack).validatePlugin(plugin);\n    } else {\n      HMSLogger.w(`track ${trackID} not present, unable to validate plugin`);\n      result.errMsg = `track ${trackID} not present, unable to validate plugin`;\n    }\n\n    return result;\n  }\n\n  async removePluginFromVideoTrack(plugin: HMSVideoPlugin): Promise<void> {\n    return this.addRemoveVideoPlugin(plugin, 'remove');\n  }\n  async removePluginFromAudioTrack(plugin: HMSAudioPlugin): Promise<void> {\n    return this.addRemoveAudioPlugin(plugin, 'remove');\n  }\n\n  async changeRole(forPeerId: string, toRole: string, force = false) {\n    const peer = this.hmsSDKPeers[forPeerId];\n    if (!peer) {\n      this.logPossibleInconsistency(`Unknown peer ID given ${forPeerId} for changerole`);\n      return;\n    }\n\n    await this.sdk.changeRoleOfPeer(peer, toRole, force);\n  }\n\n  async changeRoleOfPeer(forPeerId: string, toRole: string, force = false) {\n    const peer = this.hmsSDKPeers[forPeerId];\n    if (!peer) {\n      this.logPossibleInconsistency(`Unknown peer ID given ${forPeerId} for changerole`);\n      return;\n    }\n\n    await this.sdk.changeRoleOfPeer(peer, toRole, force);\n  }\n\n  async changeRoleOfPeersWithRoles(roles: HMSRoleName[], toRole: HMSRoleName) {\n    const rolesToBeChanged = this.sdk.getRoles().filter(role => roles.includes(role.name));\n    await this.sdk.changeRoleOfPeersWithRoles(rolesToBeChanged, toRole);\n  }\n\n  // TODO: separate out role related things in another file\n  async acceptChangeRole(request: HMSRoleChangeRequest) {\n    const sdkPeer: sdkTypes.HMSPeer | undefined = request.requestedBy\n      ? this.hmsSDKPeers[request.requestedBy.id]\n      : undefined;\n    if (!sdkPeer) {\n      HMSLogger.w(`peer for which role change is requested no longer available - ${request.requestedBy}`);\n    }\n    const sdkRequest = {\n      requestedBy: sdkPeer,\n      role: request.role,\n      token: request.token,\n    };\n    // TODO: hotfix for HMS-3639. Needs a better solution\n    await this.sdk.acceptChangeRole(sdkRequest);\n    this.removeRoleChangeRequest(request);\n  }\n\n  initAppData(appData: Record<string, any>) {\n    this.setState(store => {\n      store.appData = appData;\n    }, 'initAppData');\n  }\n\n  setAppData(key: string, value: any, merge?: boolean) {\n    const isValueObject = value?.constructor.name === 'Object';\n    this.setState(store => {\n      if (store.appData) {\n        if (merge && isValueObject) {\n          Object.assign(store.appData[key], value);\n        } else {\n          store.appData[key] = value;\n        }\n      } else {\n        const newAppData = {\n          [key]: value,\n        };\n        store.appData = newAppData;\n      }\n    }, `setAppData-${key}`);\n  }\n\n  /**\n   * @privateRemarks\n   * there is no corresponding sdk method for rejecting change role but as the store also maintains the full\n   * state of current pending requests, this method allows it to clean up when the request is rejected\n   */\n  rejectChangeRole(request: HMSRoleChangeRequest) {\n    this.removeRoleChangeRequest(request);\n  }\n\n  async endRoom(lock: boolean, reason: string) {\n    const permissions = this.store.getState(selectPermissions);\n    if (!permissions?.endRoom) {\n      HMSLogger.w('You are not allowed to perform this action - endRoom');\n      return;\n    }\n    const currentRoomState = this.store.getState(selectRoomState);\n    this.setState(store => {\n      store.room.roomState = HMSRoomState.Disconnecting;\n    }, 'endingRoom');\n    try {\n      await this.sdk.endRoom(lock, reason);\n      this.resetState('endRoom');\n    } catch (err) {\n      HMSLogger.e('error in ending room - ', err);\n      this.setState(store => {\n        store.room.roomState = currentRoomState;\n      }, 'revertEndRoom');\n    }\n  }\n\n  async removePeer(peerID: string, reason: string) {\n    const peer = this.hmsSDKPeers[peerID];\n    if (peer && !peer.isLocal) {\n      await this.sdk.removePeer(peer as sdkTypes.HMSRemotePeer, reason);\n    } else {\n      this.logPossibleInconsistency(`No remote peer found for peerID - ${peerID}`);\n      return;\n    }\n  }\n\n  async startRTMPOrRecording(params: sdkTypes.RTMPRecordingConfig) {\n    await this.sdk.startRTMPOrRecording(params);\n  }\n\n  async stopRTMPAndRecording() {\n    await this.sdk.stopRTMPAndRecording();\n  }\n\n  async startHLSStreaming(params?: sdkTypes.HLSConfig) {\n    await this.sdk.startHLSStreaming(params);\n  }\n\n  async stopHLSStreaming(params?: sdkTypes.HLSConfig): Promise<void> {\n    await this.sdk.stopHLSStreaming(params);\n  }\n\n  async sendHLSTimedMetadata(metadataList: sdkTypes.HLSTimedMetadata[]): Promise<void> {\n    await this.sdk.sendHLSTimedMetadata(metadataList);\n  }\n  async changeName(name: string) {\n    await this.sdk.changeName(name);\n  }\n\n  async changeMetadata(metadata: string | any) {\n    if (typeof metadata !== 'string') {\n      metadata = JSON.stringify(metadata);\n    }\n    await this.sdk.changeMetadata(metadata);\n  }\n\n  async setSessionMetadata(metadata: any) {\n    await this.sdk.setSessionMetadata(metadata);\n    this.setState(draftStore => {\n      draftStore.sessionMetadata = metadata;\n    }, 'setSessionMetadata');\n    this.setSessionStoreValueLocally({ key: 'default', value: metadata }, 'setSessionMetadata');\n  }\n\n  async populateSessionMetadata(): Promise<void> {\n    const metadata = await this.sdk.getSessionMetadata();\n    this.setState(draftStore => {\n      draftStore.sessionMetadata = metadata;\n    }, 'populateSessionMetadata');\n    this.setSessionStoreValueLocally({ key: 'default', value: metadata }, 'populateSessionmetadata');\n  }\n\n  async setRemoteTrackEnabled(trackID: HMSTrackID | HMSTrackID[], enabled: boolean) {\n    if (typeof trackID === 'string') {\n      const track = this.hmsSDKTracks[trackID];\n      if (track && isRemoteTrack(track)) {\n        await this.sdk.changeTrackState(track as SDKHMSRemoteTrack, enabled);\n      } else {\n        this.logPossibleInconsistency(`No remote track with ID ${trackID} found for change track state`);\n      }\n    } else if (Array.isArray(trackID)) {\n      trackID.forEach(id => this.setRemoteTrackEnabled(id, enabled));\n    }\n  }\n\n  async setRemoteTracksEnabled(params: HMSChangeMultiTrackStateParams) {\n    const sdkRequest: SDKHMSChangeMultiTrackStateParams = {\n      enabled: params.enabled,\n      type: params.type,\n      source: params.source,\n    };\n    if (params.roles) {\n      const rolesMap = this.store.getState(selectRolesMap);\n      sdkRequest.roles = params.roles.map(role => rolesMap[role]);\n    }\n    await this.sdk.changeMultiTrackState(sdkRequest);\n  }\n\n  setLogLevel(level: HMSLogLevel) {\n    HMSLogger.level = level;\n    this.sdk.setLogLevel(level);\n  }\n\n  setFrameworkInfo(frameworkInfo: sdkTypes.HMSFrameworkInfo) {\n    this.sdk.setFrameworkInfo(frameworkInfo);\n  }\n\n  ignoreMessageTypes(msgTypes: string[], replace = false) {\n    if (replace) {\n      this.ignoredMessageTypes = msgTypes;\n    } else {\n      for (const msgType of msgTypes) {\n        if (!this.ignoredMessageTypes.includes(msgType)) {\n          this.ignoredMessageTypes.push(msgType);\n        }\n      }\n    }\n  }\n\n  async enableBeamSpeakerLabelsLogging() {\n    if (!this.beamSpeakerLabelsLogger) {\n      HMSLogger.i('enabling beam speaker labels logging');\n      this.beamSpeakerLabelsLogger = new BeamSpeakerLabelsLogger(this.store, this);\n      await this.beamSpeakerLabelsLogger.start();\n    }\n  }\n\n  private resetState(reason = 'resetState') {\n    this.isRoomJoinCalled = false;\n    this.hmsSDKTracks = {};\n    HMSLogger.cleanUp();\n    this.setState(store => {\n      Object.assign(store, createDefaultStoreState());\n    }, reason);\n  }\n\n  private async sdkJoinWithListeners(config: sdkTypes.HMSConfig) {\n    await this.sdk.join(config, {\n      onJoin: this.onJoin.bind(this),\n      onRoomUpdate: this.onRoomUpdate.bind(this),\n      onPeerUpdate: this.onPeerUpdate.bind(this),\n      onTrackUpdate: this.onTrackUpdate.bind(this),\n      onMessageReceived: this.onMessageReceived.bind(this),\n      onError: this.onError.bind(this),\n      onReconnected: this.onReconnected.bind(this),\n      onReconnecting: this.onReconnecting.bind(this),\n      onRoleChangeRequest: this.onRoleChangeRequest.bind(this),\n      onRoleUpdate: this.onRoleUpdate.bind(this),\n      onDeviceChange: this.onDeviceChange.bind(this),\n      onChangeTrackStateRequest: this.onChangeTrackStateRequest.bind(this),\n      onChangeMultiTrackStateRequest: this.onChangeMultiTrackStateRequest.bind(this),\n      onRemovedFromRoom: this.onRemovedFromRoom.bind(this),\n      onNetworkQuality: this.onNetworkQuality.bind(this),\n      onSessionStoreUpdate: this.onSessionStoreUpdate.bind(this),\n    });\n    this.sdk.addAudioListener({\n      onAudioLevelUpdate: this.onAudioLevelUpdate.bind(this),\n    });\n    this.sdk.addConnectionQualityListener({\n      onConnectionQualityUpdate: this.onConnectionQualityUpdate.bind(this),\n    });\n  }\n\n  private onRemovedFromRoom(request: SDKHMSLeaveRoomRequest) {\n    const requestedBy = this.store.getState(selectPeerByID(request.requestedBy?.peerId));\n    this.hmsNotifications.sendLeaveRoom({\n      ...request,\n      requestedBy: requestedBy || undefined,\n    });\n    const action = request.roomEnded || !requestedBy ? 'roomEnded' : 'removedFromRoom';\n    HMSLogger.i(`resetting state after peer removed ${action}`, request);\n    this.resetState(action);\n  }\n\n  private onDeviceChange(event: sdkTypes.HMSDeviceChangeEvent) {\n    const devices = event.devices;\n    if (!devices) {\n      return;\n    }\n    const localPeer = this.store.getState(selectLocalPeer);\n    this.setState(store => {\n      if (!areArraysEqual(store.devices.audioInput, devices.audioInput)) {\n        store.devices.audioInput = devices.audioInput;\n      }\n      if (!areArraysEqual(store.devices.videoInput, devices.videoInput)) {\n        store.devices.videoInput = devices.videoInput;\n      }\n      if (!areArraysEqual(store.devices.audioOutput, devices.audioOutput)) {\n        store.devices.audioOutput = devices.audioOutput;\n      }\n      if (localPeer?.id && this.hmsSDKPeers[localPeer.id]) {\n        Object.assign(store.settings, this.getMediaSettings(this.hmsSDKPeers[localPeer.id]));\n      }\n    }, 'deviceChange');\n    // send notification only on device change - selection is present\n    if (event.selection) {\n      const notification = SDKToHMS.convertDeviceChangeUpdate(event);\n      this.hmsNotifications.sendDeviceChange(notification);\n    }\n  }\n\n  private async sdkPreviewWithListeners(config: sdkTypes.HMSPreviewConfig) {\n    await this.sdk.preview(config, {\n      onPreview: this.onPreview.bind(this),\n      onError: this.onError.bind(this),\n      onReconnected: this.onReconnected.bind(this),\n      onReconnecting: this.onReconnecting.bind(this),\n      onDeviceChange: this.onDeviceChange.bind(this),\n      onRoomUpdate: this.onRoomUpdate.bind(this),\n      onPeerUpdate: this.onPeerUpdate.bind(this),\n      onNetworkQuality: this.onNetworkQuality.bind(this),\n    });\n    this.sdk.addAudioListener({\n      onAudioLevelUpdate: this.onAudioLevelUpdate.bind(this),\n    });\n  }\n\n  private onNetworkQuality(quality: number) {\n    this.setState(store => {\n      /*\n       * if store does not have peerId yet, fetch from sdk directly.\n       * sdk will have the localpeer already set.\n       */\n      const peerId = store.room.localPeer || this.sdk.getLocalPeer()?.peerId;\n      if (peerId) {\n        store.connectionQualities[peerId] = { peerID: peerId, downlinkQuality: quality };\n      }\n    }, 'ConnectionQuality');\n  }\n\n  private onSessionStoreUpdate(updates: SessionStoreUpdate[]) {\n    this.setSessionStoreValueLocally(updates, 'sessionStoreUpdate');\n  }\n\n  private async startScreenShare(config?: HMSScreenShareConfig) {\n    const isScreenShared = this.store.getState(selectIsLocalScreenShared);\n    if (!isScreenShared) {\n      await this.sdk.startScreenShare(() => this.syncRoomState('screenshareStopped'), config);\n      this.syncRoomState('startScreenShare');\n    } else {\n      this.logPossibleInconsistency(\"start screenshare is called while it's on\");\n    }\n  }\n\n  private async stopScreenShare() {\n    const isScreenShared = this.store.getState(selectIsLocalScreenShared);\n    if (isScreenShared) {\n      await this.sdk.stopScreenShare();\n      this.syncRoomState('stopScreenShare');\n    } else {\n      this.logPossibleInconsistency(\"stop screenshare is called while it's not on\");\n    }\n  }\n\n  private async attachVideoInternal(trackID: string, videoElement: HTMLVideoElement) {\n    const sdkTrack = this.hmsSDKTracks[trackID];\n    if (sdkTrack && sdkTrack.type === 'video') {\n      await this.sdk.attachVideo(sdkTrack as SDKHMSVideoTrack, videoElement);\n    } else {\n      this.logPossibleInconsistency('no video track found to add sink');\n    }\n  }\n\n  /**\n   * This is a very important function as it's responsible for maintaining the source of\n   * truth with maximum efficiency. The efficiency comes from the fact that the only\n   * those portions of the store are updated which have actually changed.\n   * While making a change in this function don't use functions like map, reduce etc.\n   * which return a new copy of the data. Use Object.assign etc. to ensure that if the data\n   * doesn't change reference is also not changed.\n   * The UI and selectors rely on the fact that the store is immutable that is if there is\n   * any change and only if there is a change, they'll get a new copy of the data they're\n   * interested in with a new reference.\n   * @protected\n   */\n  protected syncRoomState(action: string) {\n    action = `${action}_fullSync`;\n    HMSLogger.time(`store-sync-${action}`);\n    const newHmsPeers: Record<HMSPeerID, Partial<HMSPeer>> = {};\n    const newHmsPeerIDs: HMSPeerID[] = []; // to add in room.peers\n    const newHmsTracks: Record<HMSTrackID, Partial<HMSTrack>> = {};\n    const newHmsSDkTracks: Record<HMSTrackID, SDKHMSTrack> = {};\n    const newMediaSettings: Partial<HMSMediaSettings> = {};\n    let newPreview: HMSStore['preview'];\n\n    const sdkPeers: sdkTypes.HMSPeer[] = this.sdk.getPeers();\n\n    // first convert everything in the new format\n    for (const sdkPeer of sdkPeers) {\n      const hmsPeer = SDKToHMS.convertPeer(sdkPeer);\n      newHmsPeers[hmsPeer.id] = hmsPeer;\n      newHmsPeerIDs.push(hmsPeer.id);\n      this.hmsSDKPeers[hmsPeer.id] = sdkPeer;\n\n      const sdkTracks = [sdkPeer.audioTrack, sdkPeer.videoTrack, ...sdkPeer.auxiliaryTracks];\n      for (const sdkTrack of sdkTracks) {\n        if (!sdkTrack) {\n          continue;\n        }\n        const hmsTrack = SDKToHMS.convertTrack(sdkTrack);\n        newHmsTracks[hmsTrack.id] = hmsTrack;\n        newHmsSDkTracks[sdkTrack.trackId] = sdkTrack;\n      }\n\n      if (sdkPeer.isLocal) {\n        const localPeer = sdkPeer as sdkTypes.HMSLocalPeer;\n        newPreview = this.getPreviewFields(localPeer);\n        Object.assign(newMediaSettings, this.getMediaSettings(localPeer));\n      }\n    }\n\n    const recording = this.sdk.getRecordingState();\n    const rtmp = this.sdk.getRTMPState();\n    const hls = this.sdk.getHLSState();\n\n    // then merge them carefully with our store so if something hasn't changed\n    // the reference shouldn't change. Note that the draftStore is an immer draft\n    // object.\n    this.setState(draftStore => {\n      draftStore.room.peers = newHmsPeerIDs;\n      const draftPeers = draftStore.peers;\n      const draftTracks = draftStore.tracks;\n      // the order of below statements are important as merge functions are mutating\n      mergeNewPeersInDraft(draftPeers, newHmsPeers);\n      mergeNewTracksInDraft(draftTracks, newHmsTracks);\n      Object.assign(draftStore.settings, newMediaSettings);\n      this.hmsSDKTracks = newHmsSDkTracks;\n\n      /**\n       * if preview is already present merge,\n       * else set as is(which will create/delete)\n       */\n      if (draftStore.preview?.localPeer && newPreview?.localPeer) {\n        Object.assign(draftStore.preview, newPreview);\n      } else {\n        draftStore.preview = newPreview;\n      }\n      Object.assign(draftStore.roles, SDKToHMS.convertRoles(this.sdk.getRoles()));\n      Object.assign(draftStore.playlist, SDKToHMS.convertPlaylist(this.sdk.getPlaylistManager()));\n      Object.assign(draftStore.room, SDKToHMS.convertRecordingStreamingState(recording, rtmp, hls));\n      Object.assign(draftStore.templateAppData, this.sdk.getTemplateAppData());\n    }, action);\n    HMSLogger.timeEnd(`store-sync-${action}`);\n  }\n\n  protected onPreview(sdkRoom: sdkTypes.HMSRoom) {\n    this.setState(store => {\n      Object.assign(store.room, SDKToHMS.convertRoom(sdkRoom));\n      store.room.roomState = HMSRoomState.Preview;\n    }, 'previewStart');\n    this.syncRoomState('previewSync');\n  }\n\n  protected onJoin(sdkRoom: sdkTypes.HMSRoom) {\n    const playlistManager = this.sdk.getPlaylistManager();\n    this.audioPlaylist = new HMSPlaylist(\n      playlistManager,\n      HMSPlaylistType.audio,\n      this.syncPlaylistState.bind(this),\n      this.store,\n    );\n    this.videoPlaylist = new HMSPlaylist(\n      playlistManager,\n      HMSPlaylistType.video,\n      this.syncRoomState.bind(this),\n      this.store,\n    );\n    this.syncRoomState('joinSync');\n    this.setState(store => {\n      Object.assign(store.room, SDKToHMS.convertRoom(sdkRoom));\n      store.room.isConnected = true;\n      store.room.roomState = HMSRoomState.Connected;\n    }, 'joined');\n    playlistManager.onProgress(this.setProgress);\n    playlistManager.onNewTrackStart((item: sdkTypes.HMSPlaylistItem<any>) => {\n      this.syncPlaylistState(`${item.type}PlaylistUpdate`);\n    });\n    playlistManager.onPlaylistEnded((type: HMSPlaylistType) => {\n      this.syncPlaylistState(`${type}PlaylistEnded`);\n    });\n    playlistManager.onCurrentTrackEnded((item: sdkTypes.HMSPlaylistItem<any>) => {\n      this.hmsNotifications.sendPlaylistTrackEnded(SDKToHMS.convertPlaylistItem(playlistManager, item));\n      this.syncPlaylistState(`${item.type}PlaylistItemEnded`);\n    });\n  }\n\n  protected onRoomUpdate(type: sdkTypes.HMSRoomUpdate, room: sdkTypes.HMSRoom) {\n    this.setState(store => {\n      Object.assign(store.room, SDKToHMS.convertRoom(room));\n    }, type);\n  }\n\n  protected onPeerUpdate(type: sdkTypes.HMSPeerUpdate, sdkPeer: sdkTypes.HMSPeer | sdkTypes.HMSPeer[]) {\n    if (\n      [sdkTypes.HMSPeerUpdate.BECAME_DOMINANT_SPEAKER, sdkTypes.HMSPeerUpdate.RESIGNED_DOMINANT_SPEAKER].includes(type)\n    ) {\n      return; // ignore, high frequency update so no point of syncing peers\n    }\n    if (Array.isArray(sdkPeer)) {\n      const storePeers = this.store.getState(selectPeersMap);\n      const newPeerIds = sdkPeer.filter(peer => !storePeers[peer.peerId]);\n      this.syncRoomState('peersJoined');\n      const connected = this.store.getState(selectIsConnectedToRoom);\n      // This is not send unnecessary notifications while in preview\n      // now room state also call peer list to handle large peers\n      if (connected) {\n        const hmsPeers = [];\n        for (const peer of sdkPeer) {\n          const hmsPeer = this.store.getState(selectPeerByID(peer.peerId));\n          if (hmsPeer) {\n            hmsPeers.push(hmsPeer);\n          }\n        }\n        this.hmsNotifications.sendPeerList(hmsPeers);\n      } else {\n        newPeerIds.forEach(peer => {\n          const hmsPeer = this.store.getState(selectPeerByID(peer.peerId));\n          if (hmsPeer) {\n            this.hmsNotifications.sendPeerUpdate(sdkTypes.HMSPeerUpdate.PEER_JOINED, hmsPeer);\n          }\n        });\n      }\n      return;\n    }\n    this.sendPeerUpdateNotification(type, sdkPeer);\n  }\n\n  protected onTrackUpdate(type: sdkTypes.HMSTrackUpdate, track: SDKHMSTrack, peer: sdkTypes.HMSPeer) {\n    // this check is needed because for track removed case, the notification needs to\n    // be send before the track is removed from store\n    if (type === sdkTypes.HMSTrackUpdate.TRACK_REMOVED) {\n      this.hmsNotifications.sendTrackUpdate(type, track.trackId);\n      this.handleTrackRemove(track, peer);\n    } else {\n      const actionName = TRACK_NOTIFICATION_TYPES[type] || 'trackUpdate';\n      this.syncRoomState(actionName);\n      this.hmsNotifications.sendTrackUpdate(type, track.trackId);\n    }\n  }\n\n  protected onMessageReceived(sdkMessage: sdkTypes.HMSMessage) {\n    const hmsMessage = SDKToHMS.convertMessage(sdkMessage) as HMSMessage;\n    hmsMessage.read = false;\n    hmsMessage.ignored = this.ignoredMessageTypes.includes(hmsMessage.type);\n    this.putMessageInStore(hmsMessage);\n    this.hmsNotifications.sendMessageReceived(hmsMessage);\n  }\n\n  protected putMessageInStore(hmsMessage: HMSMessage) {\n    if (hmsMessage.ignored) {\n      return;\n    }\n    this.setState(store => {\n      hmsMessage.id = String(this.store.getState(selectHMSMessagesCount) + 1);\n      store.messages.byID[hmsMessage.id] = hmsMessage;\n      store.messages.allIDs.push(hmsMessage.id);\n    }, 'newMessage');\n  }\n\n  /*\n   * Note: speakers array contain the value only for peers who have audioLevel != 0\n   */\n  protected onAudioLevelUpdate(sdkSpeakers: sdkTypes.HMSSpeaker[]) {\n    this.setState(store => {\n      const trackIDAudioLevelMap: Record<HMSPeerID, number> = {};\n      sdkSpeakers.forEach(sdkSpeaker => {\n        if (!sdkSpeaker.track || !sdkSpeaker.peer) {\n          return;\n        }\n        const trackID = sdkSpeaker.track.trackId;\n        trackIDAudioLevelMap[trackID] = sdkSpeaker.audioLevel;\n        if (!store.speakers[trackID]) {\n          // Set store instances(peers, tracks) references in speaker, not the new ones received.\n          store.speakers[trackID] = {\n            audioLevel: sdkSpeaker.audioLevel,\n            peerID: sdkSpeaker.peer.peerId,\n            trackID: trackID,\n          };\n        }\n      });\n      const speakerEntries = Object.entries(store.speakers);\n      for (const [trackID, speaker] of speakerEntries) {\n        speaker.audioLevel = trackIDAudioLevelMap[trackID] || 0;\n        if (speaker.audioLevel === 0) {\n          delete store.speakers[trackID];\n        }\n      }\n    }, 'audioLevel');\n  }\n\n  /**\n   * The connection quality update is sent for all peers(one needs to know of) every time.\n   */\n  protected onConnectionQualityUpdate(newQualities: sdkTypes.HMSConnectionQuality[]) {\n    this.setState(store => {\n      const currentPeerIDs = new Set();\n      newQualities.forEach(sdkUpdate => {\n        const peerID = sdkUpdate.peerID;\n        if (!peerID) {\n          return;\n        }\n        currentPeerIDs.add(peerID);\n        if (!store.connectionQualities[peerID]) {\n          store.connectionQualities[peerID] = sdkUpdate;\n        } else {\n          Object.assign(store.connectionQualities[peerID], sdkUpdate);\n        }\n      });\n      const peerIDsStored = Object.keys(store.connectionQualities);\n      for (const storedPeerID of peerIDsStored) {\n        if (!currentPeerIDs.has(storedPeerID)) {\n          // peer is likely no longer there, it wasn't in the update sent by the server\n          delete store.connectionQualities[storedPeerID];\n        }\n      }\n    }, 'connectionQuality');\n  }\n\n  protected onChangeTrackStateRequest(request: SDKHMSChangeTrackStateRequest) {\n    const requestedBy = this.store.getState(selectPeerByID(request.requestedBy?.peerId));\n    const storeTrackID = this.getStoreLocalTrackIDfromSDKTrack(request.track);\n    const track = this.store.getState(selectTrackByID(storeTrackID));\n\n    if (!track) {\n      return this.logPossibleInconsistency(\n        `Not found track for which track state change was requested, ${request.track}`,\n      );\n    }\n\n    if (!request.enabled) {\n      this.syncRoomState('changeTrackStateRequest');\n    }\n\n    this.hmsNotifications.sendChangeTrackStateRequest({\n      requestedBy: requestedBy || undefined,\n      track,\n      enabled: request.enabled,\n    });\n  }\n\n  protected onChangeMultiTrackStateRequest(request: SDKHMSChangeMultiTrackStateRequest) {\n    const requestedBy = this.store.getState(selectPeerByID(request.requestedBy?.peerId));\n\n    if (!request.enabled) {\n      this.syncRoomState('changeMultiTrackStateRequest');\n    }\n\n    const tracks: HMSTrack[] = [];\n    const tracksMap = this.store.getState(selectTracksMap);\n    for (const track of request.tracks) {\n      const storeTrackID = this.getStoreLocalTrackIDfromSDKTrack(track);\n      if (storeTrackID && tracksMap[storeTrackID]) {\n        tracks.push(tracksMap[storeTrackID]);\n      }\n    }\n\n    this.hmsNotifications.sendChangeMultiTrackStateRequest({\n      requestedBy: requestedBy || undefined,\n      tracks,\n      enabled: request.enabled,\n      type: request.type,\n      source: request.source,\n    });\n  }\n\n  protected onReconnected() {\n    this.syncRoomState('reconnectedSync');\n    this.hmsNotifications.sendReconnected();\n    this.setState(store => {\n      store.room.roomState = store.room.isConnected ? HMSRoomState.Connected : HMSRoomState.Preview;\n    }, 'reconnected');\n  }\n\n  protected onReconnecting(sdkError: SDKHMSException) {\n    const error = SDKToHMS.convertException(sdkError);\n    HMSLogger.e('Reconnection: received error from sdk', error);\n    this.hmsNotifications.sendReconnecting(error);\n    this.setState(store => {\n      store.room.roomState = HMSRoomState.Reconnecting;\n      store.errors.push(error);\n    }, 'reconnecting');\n  }\n\n  protected onError(sdkException: SDKHMSException) {\n    const error = SDKToHMS.convertException(sdkException);\n    if (error.isTerminal) {\n      // terminal error leave room as it is not recoverable\n      this.leave().then(() => HMSLogger.e('error from SDK, left room.'));\n      this.setState(store => {\n        store.room.roomState = HMSRoomState.Failed;\n        store.errors.push(error);\n      }, 'errorTerminal');\n    } else {\n      const numExistingErrors = this.store.getState().errors.length;\n      // just in case there is some infinite loop sending errors\n      if (numExistingErrors < 50) {\n        this.setState(store => {\n          store.errors.push(error);\n        }, 'error');\n      }\n    }\n    this.syncRoomState('errorSync'); //TODO: check if need to be done in a different way\n    // send notification\n    this.hmsNotifications.sendError(error);\n    HMSLogger.e('received error from sdk', error instanceof SDKHMSException ? `${error}` : error);\n  }\n\n  private handleTrackRemove(sdkTrack: SDKHMSTrack, sdkPeer: sdkTypes.HMSPeer) {\n    this.setState(draftStore => {\n      const hmsPeer = draftStore.peers[sdkPeer.peerId];\n      const draftTracks = draftStore.tracks;\n      const trackId = sdkTrack.trackId;\n      // find and remove the exact track from hmsPeer\n      if (this.isSameStoreSDKTrack(trackId, hmsPeer?.audioTrack)) {\n        delete hmsPeer?.audioTrack;\n      } else if (this.isSameStoreSDKTrack(trackId, hmsPeer?.videoTrack)) {\n        delete hmsPeer?.videoTrack;\n      } else {\n        const auxiliaryIndex = hmsPeer?.auxiliaryTracks.indexOf(trackId);\n        if (auxiliaryIndex > -1 && this.isSameStoreSDKTrack(trackId, hmsPeer?.auxiliaryTracks[auxiliaryIndex])) {\n          hmsPeer?.auxiliaryTracks.splice(auxiliaryIndex, 1);\n        }\n      }\n      delete draftTracks[trackId];\n      delete this.hmsSDKTracks[trackId];\n    }, 'trackRemoved');\n  }\n\n  private async setEnabledSDKTrack(trackID: string, enabled: boolean) {\n    const track = this.hmsSDKTracks[trackID];\n    if (track) {\n      await track.setEnabled(enabled);\n    } else {\n      this.logPossibleInconsistency(`track ${trackID} not present, unable to enabled/disable`);\n    }\n  }\n\n  private async setSDKLocalVideoTrackSettings(trackID: string, settings: Partial<sdkTypes.HMSVideoTrackSettings>) {\n    const track = this.hmsSDKTracks[trackID] as SDKHMSLocalVideoTrack;\n    if (track) {\n      await track.setSettings(settings);\n    } else {\n      this.logPossibleInconsistency(`local track ${trackID} not present, unable to set settings`);\n    }\n  }\n\n  private async setSDKLocalAudioTrackSettings(trackID: string, settings: Partial<sdkTypes.HMSAudioTrackSettings>) {\n    const track = this.hmsSDKTracks[trackID] as SDKHMSLocalAudioTrack;\n    if (track) {\n      await track.setSettings(settings);\n    } else {\n      this.logPossibleInconsistency(`local track ${trackID} not present, unable to set settings`);\n    }\n  }\n\n  private getMediaSettings(sdkPeer: sdkTypes.HMSPeer): Partial<HMSMediaSettings> {\n    const settings = this.store.getState(selectLocalMediaSettings);\n    const audioTrack = sdkPeer.audioTrack as SDKHMSLocalAudioTrack;\n    const videoTrack = sdkPeer.videoTrack as SDKHMSLocalVideoTrack;\n    return {\n      audioInputDeviceId: audioTrack?.settings.deviceId || settings.audioInputDeviceId,\n      videoInputDeviceId: videoTrack?.settings.deviceId || settings.videoInputDeviceId,\n      audioOutputDeviceId: this.sdk.getAudioOutput().getDevice()?.deviceId,\n    };\n  }\n\n  private getPreviewFields(sdkLocalPeer: sdkTypes.HMSLocalPeer): HMSStore['preview'] {\n    // if room is not in preview, clear preview fields\n    if (!sdkLocalPeer.isInPreview()) {\n      return;\n    }\n\n    const hmsLocalPeer = SDKToHMS.convertPeer(sdkLocalPeer);\n\n    return {\n      localPeer: hmsLocalPeer.id,\n      audioTrack: hmsLocalPeer.audioTrack,\n      videoTrack: hmsLocalPeer.videoTrack,\n      asRole: sdkLocalPeer.asRole?.name || sdkLocalPeer.role?.name,\n    };\n  }\n\n  private async setTrackVolume(value: number, trackId: HMSTrackID) {\n    const track = this.hmsSDKTracks[trackId];\n    if (track) {\n      if (track instanceof SDKHMSAudioTrack) {\n        await track.setVolume(value);\n        this.setState(draftStore => {\n          const track = draftStore.tracks[trackId];\n          if (track && track.type === 'audio') {\n            track.volume = value;\n          }\n        }, 'trackVolume');\n      } else {\n        HMSLogger.w(`track ${trackId} is not an audio track`);\n      }\n    } else {\n      this.logPossibleInconsistency(`track ${trackId} not present, unable to set volume`);\n    }\n  }\n\n  /**\n   * Tells if the trackID is for local peer and video unmute is in process\n   * @private\n   */\n  private localAndVideoUnmuting(trackID: string) {\n    const localPeer = this.store.getState(selectLocalPeer);\n    if (localPeer?.videoTrack !== trackID) {\n      return false;\n    }\n    const displayEnabled = this.store.getState(selectIsLocalVideoDisplayEnabled);\n    const actuallyEnabled = this.store.getState(selectIsLocalVideoEnabled);\n    return displayEnabled && !actuallyEnabled;\n  }\n\n  private logPossibleInconsistency(inconsistency: string) {\n    HMSLogger.w('possible inconsistency detected - ', inconsistency);\n  }\n\n  private async addRemoveVideoPlugin(plugin: HMSVideoPlugin, action: 'add' | 'remove', pluginFrameRate?: number) {\n    if (!plugin) {\n      HMSLogger.w('Invalid plugin received in store');\n      return;\n    }\n    const trackID = this.store.getState(selectLocalVideoTrackID);\n    if (trackID) {\n      const sdkTrack = this.hmsSDKTracks[trackID];\n      if (sdkTrack) {\n        if (action === 'add') {\n          await (sdkTrack as SDKHMSLocalVideoTrack).addPlugin(plugin, pluginFrameRate);\n        } else if (action === 'remove') {\n          await (sdkTrack as SDKHMSLocalVideoTrack).removePlugin(plugin);\n        }\n        this.syncRoomState(`${action}VideoPlugin`);\n      } else {\n        this.logPossibleInconsistency(`track ${trackID} not present, unable to remove plugin`);\n      }\n    }\n  }\n  private async addRemoveAudioPlugin(plugin: HMSAudioPlugin, action: 'add' | 'remove') {\n    if (!plugin) {\n      HMSLogger.w('Invalid plugin received in store');\n      return;\n    }\n    const trackID = this.store.getState(selectLocalAudioTrackID);\n    if (trackID) {\n      const sdkTrack = this.hmsSDKTracks[trackID];\n      if (sdkTrack) {\n        if (action === 'add') {\n          await (sdkTrack as SDKHMSLocalAudioTrack).addPlugin(plugin);\n        } else if (action === 'remove') {\n          await (sdkTrack as SDKHMSLocalAudioTrack).removePlugin(plugin);\n        }\n        this.syncRoomState(`${action}AudioPlugin`);\n      } else {\n        this.logPossibleInconsistency(`track ${trackID} not present, unable to remove plugin`);\n      }\n    }\n  }\n\n  /**\n   * In case of replace track id is changed but not in store. Given the store id, check the real id\n   * sdk is using to refer to the track and match them.\n   */\n  private isSameStoreSDKTrack(sdkTrackID: string, storeTrackID?: string): boolean {\n    if (!storeTrackID) {\n      return false;\n    }\n    return this.hmsSDKTracks[storeTrackID]?.trackId === sdkTrackID;\n  }\n\n  /**\n   * convert new role change requests to store format and save.\n   * keep only one request at a time in store till we figure out how to handle multiple requests at the same time\n   */\n  private onRoleChangeRequest(request: SDKHMSRoleChangeRequest) {\n    this.setState(store => {\n      if (store.roleChangeRequests.length === 0) {\n        store.roleChangeRequests.push(SDKToHMS.convertRoleChangeRequest(request));\n      }\n    }, 'roleChangeRequest');\n  }\n\n  private removeRoleChangeRequest(toRemove: HMSRoleChangeRequest) {\n    this.setState(store => {\n      const index = store.roleChangeRequests.findIndex(req => {\n        return req.token === toRemove.token;\n      });\n      if (index !== -1) {\n        store.roleChangeRequests.splice(index, 1);\n      }\n    }, 'removeRoleChangeRequest');\n  }\n\n  private onRoleUpdate() {\n    this.syncRoomState('roleUpdate');\n  }\n\n  private getStoreLocalTrackIDfromSDKTrack(sdkTrack: SDKHMSLocalTrack) {\n    const trackIDs = this.store.getState(selectLocalTrackIDs);\n    return trackIDs.find(trackID => this.hmsSDKTracks[trackID].trackId === sdkTrack.trackId);\n  }\n\n  private setProgress = ({ type, progress }: sdkTypes.HMSPlaylistProgressEvent) => {\n    this.setState(draftStore => {\n      draftStore.playlist[type].progress = progress;\n      draftStore.playlist[type].currentTime = this.sdk.getPlaylistManager().getCurrentTime(type);\n    }, 'playlistProgress');\n  };\n\n  private syncPlaylistState = (action: string) => {\n    this.setState(draftStore => {\n      Object.assign(draftStore.playlist, SDKToHMS.convertPlaylist(this.sdk.getPlaylistManager()));\n    }, action);\n  };\n\n  private sendPeerUpdateNotification = (type: sdkTypes.HMSPeerUpdate, sdkPeer: sdkTypes.HMSPeer) => {\n    let peer = this.store.getState(selectPeerByID(sdkPeer.peerId));\n    const actionName = PEER_NOTIFICATION_TYPES[type] || 'peerUpdate';\n    this.syncRoomState(actionName);\n    // if peer wasn't available before sync(will happen if event is peer join)\n    if (!peer) {\n      peer = this.store.getState(selectPeerByID(sdkPeer.peerId));\n    }\n    this.hmsNotifications.sendPeerUpdate(type, peer);\n  };\n\n  private setSessionStoreValueLocally(\n    updates: SessionStoreUpdate | SessionStoreUpdate[],\n    actionName = 'setSessionStore',\n  ) {\n    const updatesList: SessionStoreUpdate[] = Array.isArray(updates) ? updates : [updates];\n    this.setState(store => {\n      updatesList.forEach(update => {\n        store.sessionStore[update.key as keyof T['sessionStore']] = update.value;\n      });\n    }, actionName);\n  }\n\n  /**\n   * setState is separate so any future changes to how state change can be done from one place.\n   * @param fn\n   * @param name\n   */\n  private setState: NamedSetState<HMSStore<T>> = (fn, name) => {\n    return this.store.namedSetState(fn, name);\n  };\n}\n","import { HMSRemoteAudioTrack, HMSRemoteVideoTrack, HMSTrack } from '@100mslive/hms-video';\n\nexport function isRemoteTrack(track: HMSTrack) {\n  return track instanceof HMSRemoteAudioTrack || track instanceof HMSRemoteVideoTrack;\n}\n","import { HMSLocalTrack as SDKHMSLocalTrack } from '@100mslive/hms-video';\nimport { HMSPeer, HMSPeerID, HMSScreenVideoTrack, HMSTrack, HMSTrackID, HMSVideoTrack } from '../../schema';\nimport { HMSPeerStats, HMSTrackStats } from '../sdkTypes';\n\n/**\n * updates draftPeers with newPeers ensuring minimal reference changes\n * @remarks\n * This is mutable and impure function, it modifies the passed in data to ensure\n * minimal reference changes\n * @param draftPeers the current peers object in store, an immer draft object\n * @param newPeers the latest update which needs to be stored\n * @param newHmsTracks this will be update if required\n * @param newHmsSDkTracks this is future value of local hms tacks map\n */\nexport const mergeNewPeersInDraft = (\n  draftPeers: Record<HMSPeerID, HMSPeer>,\n  newPeers: Record<HMSPeerID, Partial<HMSPeer>>,\n) => {\n  const peerIDs = union(Object.keys(draftPeers), Object.keys(newPeers));\n  for (const peerID of peerIDs) {\n    const oldPeer = draftPeers[peerID];\n    const newPeer = newPeers[peerID];\n    if (isEntityUpdated(oldPeer, newPeer)) {\n      if (areArraysEqual(oldPeer.auxiliaryTracks, newPeer.auxiliaryTracks)) {\n        newPeer.auxiliaryTracks = oldPeer.auxiliaryTracks;\n      }\n      Object.assign(oldPeer, newPeer);\n    } else if (isEntityRemoved(oldPeer, newPeer)) {\n      delete draftPeers[peerID];\n    } else if (isEntityAdded(oldPeer, newPeer)) {\n      draftPeers[peerID] = newPeer as HMSPeer;\n    }\n  }\n};\n\nexport const mergeNewTracksInDraft = (\n  draftTracks: Record<HMSTrackID, HMSTrack>,\n  newTracks: Record<HMSTrackID, Partial<HMSTrack>>,\n) => {\n  const trackIDs = union(Object.keys(draftTracks), Object.keys(newTracks));\n  for (const trackID of trackIDs) {\n    const oldTrack = draftTracks[trackID];\n    const newTrack = newTracks[trackID];\n    if (isEntityUpdated(oldTrack, newTrack)) {\n      mergeTrackArrayFields(oldTrack, newTrack);\n      Object.assign(oldTrack, newTrack);\n    } else if (isEntityRemoved(oldTrack, newTrack)) {\n      delete draftTracks[trackID];\n    } else if (isEntityAdded(oldTrack, newTrack)) {\n      draftTracks[trackID] = newTrack as HMSTrack;\n    }\n  }\n};\n\nexport const mergeNewIndividualStatsInDraft = <TID extends string, T extends HMSPeerStats | HMSTrackStats>(\n  draftStats: Record<TID, T | undefined>,\n  newStats: Record<TID, Partial<T | undefined>>,\n) => {\n  const IDs = union(Object.keys(draftStats), Object.keys(newStats)) as TID[];\n  for (const trackID of IDs) {\n    const oldStat = draftStats[trackID];\n    const newStat = newStats[trackID];\n    if (isEntityUpdated(oldStat, newStat)) {\n      Object.assign(oldStat!, newStat);\n    } else if (isEntityRemoved(oldStat, newStat)) {\n      delete draftStats[trackID];\n    } else if (isEntityAdded(oldStat, newStat)) {\n      draftStats[trackID] = newStat as T;\n    }\n  }\n};\n\nexport const mergeLocalTrackStats = (\n  draftStats: Record<HMSTrackID, HMSTrackStats[] | undefined>,\n  newStats: Record<HMSTrackID, Record<string, HMSTrackStats>>,\n  tracks: SDKHMSLocalTrack[],\n) => {\n  const trackMap: Record<string, HMSTrackStats[]> = tracks.reduce((acc, track) => {\n    // @ts-ignore\n    acc[track.firstTrackId] = Object.values(newStats[track.getTrackIDBeingSent()] || {}).sort((a, b) => {\n      if (!a.rid || !b.rid) {\n        return 0;\n      }\n      return a.rid < b.rid ? -1 : 1;\n    });\n    return acc;\n  }, {});\n  const IDs = union(Object.keys(draftStats), Object.keys(trackMap));\n  for (const trackID of IDs) {\n    if (!trackMap[trackID]) {\n      delete draftStats[trackID];\n      continue;\n    }\n    draftStats[trackID] = trackMap[trackID];\n  }\n};\n\n/**\n * array's are usually created with new reference, avoid that update if both arrays are same\n */\nconst mergeTrackArrayFields = (oldTrack: HMSTrack, newTrack: Partial<HMSTrack>) => {\n  if (oldTrack.plugins && areArraysEqual(oldTrack.plugins, newTrack.plugins)) {\n    newTrack.plugins = oldTrack.plugins;\n  }\n  if (\n    oldTrack.type === 'video' &&\n    oldTrack.layerDefinitions &&\n    areArraysEqual(oldTrack.layerDefinitions, (newTrack as HMSVideoTrack | HMSScreenVideoTrack).layerDefinitions)\n  ) {\n    (newTrack as HMSVideoTrack | HMSScreenVideoTrack).layerDefinitions = oldTrack.layerDefinitions;\n  }\n};\n\nconst isEntityUpdated = <T>(oldItem: T, newItem: T) => oldItem && newItem;\nconst isEntityRemoved = <T>(oldItem: T, newItem: T) => oldItem && !newItem;\nconst isEntityAdded = <T>(oldItem: T, newItem: T) => !oldItem && newItem;\n\n// eslint-disable-next-line complexity\nexport const areArraysEqual = <T>(arr1: T[], arr2?: T[]): boolean => {\n  if (arr1 === arr2 || (arr1.length === 0 && arr2?.length === 0)) {\n    // reference check\n    return true;\n  }\n  if (!arr1 || !arr2 || !(arr1.length === arr2.length)) {\n    return false;\n  }\n  for (let i = 0; i < arr1.length; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n};\n\nconst union = <T>(arr1: T[], arr2: T[]): T[] => {\n  const set: Set<T> = new Set();\n  for (const elem of arr1) {\n    set.add(elem);\n  }\n  for (const elem of arr2) {\n    set.add(elem);\n  }\n  return Array.from(set);\n};\n","import {\n  HMSLocalAudioTrack as SDKHMSLocalAudioTrack,\n  HMSLocalVideoTrack as SDKHMSLocalVideoTrack,\n  HMSRemoteAudioTrack as SDKHMSRemoteAudioTrack,\n  HMSRemoteVideoTrack as SDKHMSRemoteVideoTrack,\n  HMSRoleChangeRequest as SDKHMSRoleChangeRequest,\n  HMSTrack as SDKHMSTrack,\n} from '@100mslive/hms-video';\nimport { areArraysEqual } from './sdkUtils/storeMergeUtils';\nimport * as sdkTypes from './sdkTypes';\nimport {\n  HMSAudioTrack,\n  HMSDeviceChangeEvent,\n  HMSException,\n  HMSMessage,\n  HMSPeer,\n  HMSPeerID,\n  HMSPlaylistItem,\n  HMSPlaylistType,\n  HMSRole,\n  HMSRoleChangeStoreRequest,\n  HMSRoleName,\n  HMSRoom,\n  HMSScreenVideoTrack,\n  HMSTrack,\n  HMSTrackFacingMode,\n  HMSVideoTrack,\n} from '../schema';\n\n/**\n * This file has conversion functions from schema defined in sdk to normalised schema defined in store.\n * A lot of conversions below involve deep clone as once the object goes into store it becomes unmodifiable\n * due to immer, so it can't be mutated later.\n *\n * Objects directly from the SDK are not stored as is and cloned because the SDK might modify it later\n */\n\nexport class SDKToHMS {\n  static convertPeer(sdkPeer: sdkTypes.HMSPeer): Partial<HMSPeer> & Pick<HMSPeer, 'id'> {\n    return {\n      id: sdkPeer.peerId,\n      name: sdkPeer.name,\n      roleName: sdkPeer.role?.name,\n      isLocal: sdkPeer.isLocal,\n      videoTrack: sdkPeer.videoTrack?.trackId,\n      audioTrack: sdkPeer.audioTrack?.trackId,\n      auxiliaryTracks: sdkPeer.auxiliaryTracks.map(track => track.trackId),\n      customerUserId: sdkPeer.customerUserId,\n      metadata: sdkPeer.metadata,\n      joinedAt: sdkPeer.joinedAt,\n    };\n  }\n\n  static convertTrack(sdkTrack: SDKHMSTrack, peerId?: HMSPeerID): HMSTrack {\n    const track: HMSTrack = {\n      id: sdkTrack.trackId,\n      source: sdkTrack.source,\n      type: sdkTrack.type,\n      enabled: sdkTrack.enabled,\n      displayEnabled: sdkTrack.enabled,\n      peerId: sdkTrack.peerId || peerId,\n    } as HMSTrack;\n    this.enrichTrack(track, sdkTrack);\n    return track;\n  }\n\n  static enrichTrack(track: HMSTrack, sdkTrack: SDKHMSTrack) {\n    const mediaSettings = sdkTrack.getMediaTrackSettings();\n\n    if (sdkTrack instanceof SDKHMSRemoteAudioTrack) {\n      (track as HMSAudioTrack).volume = sdkTrack.getVolume() || 0;\n    }\n    SDKToHMS.updateDeviceID(track, sdkTrack);\n    SDKToHMS.enrichLocalTrack(track, sdkTrack);\n    if (track.type === 'video') {\n      if (track.source === 'screen') {\n        // @ts-ignore\n        track.displaySurface = mediaSettings.displaySurface;\n        SDKToHMS.enrichScreenTrack(track as HMSScreenVideoTrack, sdkTrack);\n      } else if (track.source === 'regular') {\n        (track as HMSVideoTrack).facingMode = mediaSettings.facingMode as HMSTrackFacingMode;\n      }\n      track.height = mediaSettings.height;\n      track.width = mediaSettings.width;\n      SDKToHMS.enrichVideoTrack(track as HMSVideoTrack, sdkTrack);\n    }\n    SDKToHMS.enrichPluginsDetails(track, sdkTrack);\n  }\n\n  static enrichLocalTrack(track: HMSTrack, sdkTrack: SDKHMSTrack) {\n    if (sdkTrack instanceof SDKHMSLocalVideoTrack || sdkTrack instanceof SDKHMSLocalAudioTrack) {\n      track.isPublished = sdkTrack.isPublished;\n    }\n  }\n\n  static updateDeviceID(track: HMSTrack, sdkTrack: SDKHMSTrack) {\n    if (sdkTrack instanceof SDKHMSLocalVideoTrack || sdkTrack instanceof SDKHMSLocalAudioTrack) {\n      track.deviceID = sdkTrack.settings.deviceId;\n    } else {\n      track.deviceID = sdkTrack.getMediaTrackSettings()?.deviceId;\n    }\n  }\n\n  static enrichVideoTrack(track: HMSVideoTrack, sdkTrack: SDKHMSTrack) {\n    if (sdkTrack instanceof SDKHMSRemoteVideoTrack) {\n      track.layer = sdkTrack.getLayer();\n      track.preferredLayer = sdkTrack.getPreferredLayer();\n      track.degraded = sdkTrack.degraded;\n    }\n    if (sdkTrack instanceof SDKHMSRemoteVideoTrack || sdkTrack instanceof SDKHMSLocalVideoTrack) {\n      if (!areArraysEqual(sdkTrack.getSimulcastDefinitions(), track.layerDefinitions)) {\n        track.layerDefinitions = sdkTrack.getSimulcastDefinitions();\n      }\n    }\n  }\n\n  static enrichScreenTrack(track: HMSScreenVideoTrack, sdkTrack: SDKHMSTrack) {\n    if (sdkTrack instanceof SDKHMSLocalVideoTrack) {\n      const newCaptureHandle = sdkTrack.getCaptureHandle?.();\n      if (newCaptureHandle?.handle !== track.captureHandle?.handle) {\n        track.captureHandle = newCaptureHandle;\n      }\n      if (sdkTrack.isCurrentTab) {\n        track.displaySurface = 'selfBrowser';\n      }\n    }\n  }\n\n  static enrichPluginsDetails(track: HMSTrack, sdkTrack: SDKHMSTrack) {\n    if (sdkTrack instanceof SDKHMSLocalVideoTrack || sdkTrack instanceof SDKHMSLocalAudioTrack) {\n      if (!areArraysEqual(sdkTrack.getPlugins(), track.plugins)) {\n        track.plugins = sdkTrack.getPlugins();\n      }\n    }\n  }\n\n  static convertRoom(sdkRoom: sdkTypes.HMSRoom): Partial<HMSRoom> {\n    const { recording, rtmp, hls } = SDKToHMS.convertRecordingStreamingState(\n      sdkRoom?.recording,\n      sdkRoom?.rtmp,\n      sdkRoom?.hls,\n    );\n    return {\n      id: sdkRoom.id,\n      name: sdkRoom.name,\n      localPeer: sdkRoom.localPeer?.peerId ?? '',\n      recording,\n      rtmp,\n      hls,\n      sessionId: sdkRoom.sessionId,\n      startedAt: sdkRoom.startedAt,\n      joinedAt: sdkRoom.joinedAt,\n      peerCount: sdkRoom.peerCount,\n    };\n  }\n\n  static convertMessage(sdkMessage: sdkTypes.HMSMessage): Partial<HMSMessage> & Pick<HMSMessage, 'sender'> {\n    return {\n      sender: sdkMessage.sender?.peerId,\n      senderName: sdkMessage.sender?.name,\n      senderRole: sdkMessage.sender?.role?.name,\n      senderUserId: sdkMessage.sender?.customerUserId,\n      recipientPeer: sdkMessage.recipientPeer?.peerId,\n      recipientRoles: sdkMessage.recipientRoles?.map(role => role.name),\n      time: sdkMessage.time,\n      type: sdkMessage.type,\n      message: sdkMessage.message,\n    };\n  }\n\n  static convertRoles(sdkRoles: HMSRole[]): Record<HMSRoleName, HMSRole> {\n    const roles: Record<HMSRoleName, HMSRole> = {};\n    if (sdkRoles) {\n      sdkRoles.forEach(role => {\n        roles[role.name] = role;\n      });\n    }\n    return roles;\n  }\n\n  static convertRoleChangeRequest(req: SDKHMSRoleChangeRequest): HMSRoleChangeStoreRequest {\n    return {\n      requestedBy: req.requestedBy?.peerId,\n      roleName: req.role.name,\n      token: req.token,\n    };\n  }\n\n  static convertException(sdkException: sdkTypes.HMSException): HMSException {\n    return {\n      code: sdkException.code,\n      action: sdkException.action,\n      name: sdkException.name,\n      message: sdkException.message,\n      description: sdkException.description,\n      isTerminal: sdkException.isTerminal,\n      nativeError: sdkException.nativeError,\n      timestamp: new Date(),\n    };\n  }\n\n  static convertDeviceChangeUpdate(sdkDeviceChangeEvent: sdkTypes.HMSDeviceChangeEvent): HMSDeviceChangeEvent {\n    const convertedData: HMSDeviceChangeEvent = {\n      devices: sdkDeviceChangeEvent.devices,\n      selection: sdkDeviceChangeEvent.selection,\n      type: sdkDeviceChangeEvent.type,\n    };\n    if (sdkDeviceChangeEvent.error) {\n      convertedData.error = this.convertException(sdkDeviceChangeEvent.error);\n    }\n    return convertedData;\n  }\n\n  static convertPlaylist(playlistManager: sdkTypes.HMSPlaylistManager) {\n    const audioPlaylist = this.getConvertedPlaylistType(playlistManager, HMSPlaylistType.audio);\n    const videoPlaylist = this.getConvertedPlaylistType(playlistManager, HMSPlaylistType.video);\n    return { audio: audioPlaylist, video: videoPlaylist };\n  }\n\n  static convertPlaylistItem<T>(\n    playlistManager: sdkTypes.HMSPlaylistManager,\n    playlistItem: sdkTypes.HMSPlaylistItem<T>,\n  ): HMSPlaylistItem<T> {\n    const type = playlistItem.type;\n    const currentSelection = playlistManager.getCurrentSelection(type);\n    const isPlaying = playlistManager.isPlaying(type);\n    const isSelected = playlistItem.url === currentSelection?.url;\n\n    return {\n      ...playlistItem,\n      type: playlistItem.type as HMSPlaylistType,\n      selected: isSelected,\n      playing: isSelected && isPlaying,\n    };\n  }\n\n  private static getConvertedPlaylistType(playlistManager: sdkTypes.HMSPlaylistManager, type: HMSPlaylistType) {\n    const convertedPlaylist: Record<string, HMSPlaylistItem<any>> = {};\n    const currentSelection = playlistManager.getCurrentSelection(type);\n    const progress = playlistManager.getCurrentProgress(type);\n    const volume = playlistManager.getVolume(type);\n    const list = playlistManager.getList(type);\n    const currentIndex = playlistManager.getCurrentIndex(type);\n\n    playlistManager.getList(type).forEach(playlistItem => {\n      convertedPlaylist[playlistItem.id] = SDKToHMS.convertPlaylistItem(playlistManager, playlistItem);\n    });\n    return {\n      list: convertedPlaylist,\n      selection: {\n        id: currentSelection?.id,\n        hasPrevious: currentIndex > 0,\n        hasNext: currentIndex < list.length - 1,\n      },\n      progress,\n      volume,\n      currentTime: playlistManager.getCurrentTime(type),\n      playbackRate: playlistManager.getPlaybackRate(type),\n    };\n  }\n\n  static convertRecordingStreamingState(\n    recording?: sdkTypes.HMSRecording,\n    rtmp?: sdkTypes.HMSRTMP,\n    hls?: sdkTypes.HMSHLS,\n  ): { recording: sdkTypes.HMSRecording; rtmp: sdkTypes.HMSRTMP; hls: sdkTypes.HMSHLS } {\n    return {\n      recording: {\n        browser: {\n          running: false,\n          ...recording?.browser,\n        },\n        server: {\n          running: false,\n          ...recording?.server,\n        },\n        hls: { running: false, ...recording?.hls },\n      },\n      rtmp: { running: false, ...rtmp },\n      hls: {\n        variants: hls?.variants?.map(variant => variant) || [],\n        running: !!hls?.running,\n        error: hls?.error,\n      },\n    };\n  }\n}\n","import { HMSPlaylistManager } from './sdkTypes';\nimport { HMSLogger } from '../../common/ui-logger';\nimport { IHMSStore } from '../IHMSStore';\nimport { HMSGenericTypes, HMSPlaylistItem, HMSPlaylistType, IHMSPlaylistActions } from '../schema';\nimport { selectAudioPlaylist, selectVideoPlaylist } from '../selectors';\n\nexport class HMSPlaylist<T extends HMSGenericTypes> implements IHMSPlaylistActions {\n  private type: HMSPlaylistType;\n  constructor(\n    private playlistManager: HMSPlaylistManager,\n    type: HMSPlaylistType,\n    private syncPlaylistState: (action: string) => void,\n    private store: IHMSStore<T>,\n  ) {\n    this.type = type;\n  }\n\n  async play(id: string): Promise<void> {\n    if (!id) {\n      HMSLogger.w('Please pass id to play');\n      return;\n    }\n    await this.playlistManager.setEnabled(true, { id, type: this.type });\n  }\n\n  async pause(): Promise<void> {\n    const selector = this.type === HMSPlaylistType.audio ? selectAudioPlaylist : selectVideoPlaylist;\n    const selection = this.store.getState(selector.selection);\n    if (!selection.id) {\n      HMSLogger.w('No item is currently playing to pause');\n      return;\n    }\n    await this.playlistManager.setEnabled(false, { id: selection.id, type: this.type });\n  }\n\n  async playNext(): Promise<void> {\n    await this.playlistManager.playNext(this.type);\n  }\n\n  async playPrevious(): Promise<void> {\n    await this.playlistManager.playPrevious(this.type);\n  }\n\n  seek(seekValue: number): void {\n    this.playlistManager.seek(seekValue, this.type);\n    this.syncPlaylistState(`seekOn${this.type}Playlist`);\n  }\n\n  seekTo(seekValue: number): void {\n    this.playlistManager.seekTo(seekValue, this.type);\n    this.syncPlaylistState(`seekToOn${this.type}Playlist`);\n  }\n\n  setVolume(volume: number): void {\n    this.playlistManager.setVolume(volume, this.type);\n    this.syncPlaylistState(`setVolumeOn${this.type}Playlist`);\n  }\n\n  setList<T>(list: HMSPlaylistItem<T>[]): void {\n    this.playlistManager.setList(list);\n    this.syncPlaylistState(`setListOn${this.type}Playlist`);\n  }\n\n  async stop(): Promise<void> {\n    await this.playlistManager.stop(this.type);\n    this.syncPlaylistState(`stop${this.type}Playlist`);\n  }\n\n  setIsAutoplayOn(autoplay: boolean) {\n    this.playlistManager.setIsAutoplayOn(this.type, autoplay);\n  }\n\n  setPlaybackRate(playbackRate: number) {\n    this.playlistManager.setPlaybackRate(this.type, playbackRate);\n    this.syncPlaylistState(`set${this.type}PlaybackRate`);\n  }\n\n  async removeItem(id: string) {\n    const removed = await this.playlistManager.removeItem(id, this.type);\n    if (removed) {\n      this.syncPlaylistState(`remove${this.type}PlaylistItem`);\n    }\n    return removed;\n  }\n\n  async clearList() {\n    await this.playlistManager.clearList(this.type);\n    this.syncPlaylistState(`clear${this.type}Playlist`);\n  }\n}\n","import { HMSSdk, SessionStoreUpdate } from '@100mslive/hms-video';\nimport { IHMSSessionStoreActions } from '../schema';\n\nexport class HMSSessionStore<T extends Record<string, any>> implements IHMSSessionStoreActions<T> {\n  constructor(\n    private sdk: HMSSdk,\n    private setLocally: (updates: SessionStoreUpdate | SessionStoreUpdate[], actionName?: string) => void,\n  ) {}\n\n  private get sdkSessionStore() {\n    return this.sdk.getSessionStore();\n  }\n\n  async set<K extends keyof T>(key: K, value?: T[K]) {\n    const { value: latestValue } = await this.sdkSessionStore.set(String(key), value);\n    this.setLocally({ key: key as string, value: latestValue });\n  }\n\n  async observe(keys: keyof T | Array<keyof T>) {\n    const stringifiedKeys: string[] = Array.isArray(keys) ? keys.map(key => String(key)) : [String(keys)];\n    await this.sdkSessionStore.observe(stringifiedKeys);\n  }\n\n  async unobserve(keys: keyof T | Array<keyof T>) {\n    const stringifiedKeys: string[] = Array.isArray(keys) ? keys.map(key => String(key)) : [String(keys)];\n    await this.sdkSessionStore.unobserve(stringifiedKeys);\n  }\n}\n","import { HMSLogger } from '../../common/ui-logger';\nimport { HMSGenericTypes, HMSPeer, IHMSStore, selectIsConnectedToRoom, selectPeers } from '../../core';\nimport { IHMSActions } from '../../core/IHMSActions';\n\n/**\n * Log data of audio level and speaker speaking periodically to beam for transcript\n * diarization.\n */\nexport class BeamSpeakerLabelsLogger<T extends HMSGenericTypes> {\n  private audioContext?: AudioContext;\n  private readonly intervalMs: number;\n  private shouldMonitor: boolean;\n  private hasStarted: boolean;\n  private unsubs: any[];\n  private readonly analysers: Record<string, AnalyserNode>;\n  private readonly store: IHMSStore<T>;\n  private actions: IHMSActions<T>;\n  constructor(store: IHMSStore<T>, actions: IHMSActions<T>) {\n    this.intervalMs = 100;\n    this.shouldMonitor = false;\n    this.hasStarted = false;\n    this.unsubs = [];\n    this.analysers = {};\n    this.store = store;\n    this.actions = actions;\n  }\n\n  async start() {\n    if (this.hasStarted) {\n      return;\n    }\n    this.hasStarted = true;\n    HMSLogger.d('starting audio level monitor for remote peers', this.store);\n    const isConnected = this.store.getState(selectIsConnectedToRoom);\n    HMSLogger.d('starting audio levels is connected to room', isConnected);\n    if (isConnected) {\n      await this.monitorAudioLevels();\n    }\n    const unsub = this.store.subscribe(this.monitorAudioLevels.bind(this), selectIsConnectedToRoom);\n    this.unsubs.push(unsub);\n  }\n\n  async stop() {\n    if (!this.hasStarted) {\n      return;\n    }\n    this.hasStarted = false;\n    this.shouldMonitor = false;\n    this.unsubs.forEach(unsub => unsub());\n    HMSLogger.d('stopped audio level monitor for remote peers');\n  }\n\n  async monitorAudioLevels() {\n    const isConnected = this.store.getState(selectIsConnectedToRoom);\n    if (!isConnected) {\n      if (this.shouldMonitor) {\n        HMSLogger.i('room no longer connected, stopping audio level monitoring for remote');\n        this.shouldMonitor = false;\n      }\n      return;\n    }\n    if (this.shouldMonitor) {\n      return;\n    }\n    HMSLogger.i('monitoring audio levels');\n    this.shouldMonitor = true;\n    const loop = () => {\n      if (this.shouldMonitor) {\n        this.logAllPeersAudioLevels();\n        setTimeout(loop, this.intervalMs);\n      } else {\n        HMSLogger.i('stopped monitoring audio levels');\n      }\n    };\n    setTimeout(loop, 1000);\n  }\n\n  // eslint-disable-next-line complexity\n  async logAllPeersAudioLevels() {\n    if (!window.__triggerBeamEvent__) {\n      return;\n    }\n    // optimise this to selectTracks instead of selecting peers\n    const allPeers = this.store.getState(selectPeers);\n    const peers = allPeers.filter(peer => !!peer.audioTrack);\n    const peerAudioLevels = [];\n    for (const peer of peers) {\n      // @ts-ignore\n      const sdkTrack = this.actions.hmsSDKTracks[peer.audioTrack];\n      const nativeStream: MediaStream = sdkTrack?.stream?.nativeStream;\n      if (!peer.joinedAt) {\n        continue;\n      }\n      if (nativeStream) {\n        const peerLevel = await this.getAudioLevel(peer, nativeStream);\n        if (peerLevel.level > 0) {\n          peerAudioLevels.push(peerLevel);\n        }\n      }\n    }\n    if (peerAudioLevels.length > 0) {\n      const payload = {\n        event: 'app-audio-level',\n        data: peerAudioLevels,\n      };\n      // HMSLogger.d('logging audio levels', peerAudioLevels);\n      window.__triggerBeamEvent__(JSON.stringify(payload));\n    }\n  }\n\n  async getAudioLevel(peer: HMSPeer, stream: MediaStream) {\n    if (!this.analysers[stream.id]) {\n      this.analysers[stream.id] = this.createAnalyserNode(stream);\n    }\n    const analyserNode = this.analysers[stream.id];\n    const level = this.calculateAudioLevel(analyserNode);\n    return {\n      peerId: peer.id,\n      peerName: peer.name,\n      level,\n    };\n  }\n\n  createAnalyserNode(stream: MediaStream) {\n    if (!this.audioContext) {\n      this.audioContext = new AudioContext();\n    }\n    const analyser = this.audioContext.createAnalyser();\n    const source = this.audioContext.createMediaStreamSource(stream);\n    source.connect(analyser);\n    return analyser;\n  }\n\n  calculateAudioLevel(analyserNode: AnalyserNode) {\n    const data = new Uint8Array(analyserNode.fftSize);\n    analyserNode.getByteTimeDomainData(data);\n    const lowest = 0.009;\n    let max = lowest;\n    for (const frequency of data) {\n      max = Math.max(max, (frequency - 128) / 128);\n    }\n    const normalized = (Math.log(lowest) - Math.log(max)) / Math.log(lowest);\n    const percent = Math.ceil(Math.min(Math.max(normalized * 100, 0), 100));\n    return percent;\n  }\n}\n","import { isBrowser } from '@100mslive/hms-video';\n\nexport const storeNameWithTabTitle = (storeName: string) => {\n  return isBrowser ? `${storeName} ${document.title}` : storeName;\n};\n","import { HMSGenericTypes, HMSNotifications, IHMSNotifications, IHMSStore } from '../../core';\nimport { IHMSActions } from '../../core/IHMSActions';\nimport { IHMSStoreReadOnly } from '../../core/IHMSStore';\n\n/**\n * @internal\n */\nexport class BeamControllerStore<T extends HMSGenericTypes = { sessionStore: Record<string, any> }> {\n  // perform action to add, remove beam\n  private readonly actions: IHMSActions<T>;\n  // get all details from store about room, peers, tracks.\n  private readonly store: IHMSStore<T>;\n  // all details from the notification\n  private readonly notifications: HMSNotifications;\n\n  constructor(hmsStore: IHMSStore<T>, hmsActions: IHMSActions<T>, hmsNotifications: HMSNotifications) {\n    this.store = hmsStore;\n    this.actions = hmsActions;\n    this.notifications = hmsNotifications;\n  }\n\n  /**\n   * A reactive store which has a subscribe method you can use in combination with selectors\n   * to subscribe to a subset of the store. The store serves as a single source of truth for\n   * all data related to the corresponding HMS Room.\n   */\n  getStore(): IHMSStoreReadOnly {\n    return this.store;\n  }\n\n  /**\n   * Any action which may modify the store or may need to talk to the SDK will happen\n   * through the IHMSActions instance returned by this\n   */\n  getActions(): IHMSActions {\n    return this.actions;\n  }\n\n  /**\n   * This return notification handler function to which you can pass your callback to\n   * receive notifications like peer joined, peer left, etc. to show in your UI or use\n   * for analytics\n   */\n  getNotifications(): IHMSNotifications {\n    return { onNotification: this.notifications.onNotification };\n  }\n}\n","import { HMSPeerStats, HMSSdk, HMSTrackStats, HMSWebrtcStats } from '@100mslive/hms-video';\nimport { mergeLocalTrackStats, mergeNewIndividualStatsInDraft } from '../hmsSDKStore/sdkUtils/storeMergeUtils';\nimport { IHMSStatsStore, IHMSStore } from '../IHMSStore';\nimport { createDefaultStatsStore, HMSPeerID, HMSRoomState, HMSTrack, HMSTrackID } from '../schema';\nimport {\n  selectLocalAudioTrackID,\n  selectLocalPeerID,\n  selectLocalVideoTrackID,\n  selectRoomState,\n  selectTracksMap,\n} from '../selectors';\n\ntype Unsubscribe = (() => void) | undefined;\nexport const subscribeToSdkWebrtcStats = (sdk: HMSSdk, webrtcStore: IHMSStatsStore, store: IHMSStore) => {\n  // also used as flag to check if webrtc internals has been initialised\n  let unsubscribe: Unsubscribe;\n  /**\n   * Connected to room, webrtc internals can be initialized\n   */\n  if (store.getState(selectRoomState) === HMSRoomState.Connected) {\n    unsubscribe = initAndSubscribeWebrtcStore(sdk, webrtcStore, store);\n  }\n\n  /**\n   * Subscribe to room state for 2 purposes:\n   * - unsubscribe on leave\n   * - if internals is called before join is completed, init internals when roomState changes to connected\n   */\n  store.subscribe(roomState => {\n    if ([HMSRoomState.Connected, HMSRoomState.Reconnecting].includes(roomState)) {\n      if (!unsubscribe) {\n        unsubscribe = initAndSubscribeWebrtcStore(sdk, webrtcStore, store);\n      }\n      // room state can go to disconnecting and back to connected if leave fails, we don't want to resubscribe in that case\n    } else if ([HMSRoomState.Disconnected, HMSRoomState.Failed].includes(roomState)) {\n      if (unsubscribe) {\n        resetHMSStatsStore(webrtcStore, roomState);\n        unsubscribe();\n        // set flag to defined after unsubscribing to enable subscribing again\n        unsubscribe = undefined;\n      }\n    }\n  }, selectRoomState);\n};\n\nconst initAndSubscribeWebrtcStore = (sdk: HMSSdk, webrtcStore: IHMSStatsStore, store: IHMSStore) => {\n  const unsubLocalPeer = updateLocalPeerInWebrtcStore(store, webrtcStore);\n\n  sdk.getWebrtcInternals()?.start();\n  const unsubSdkStats = sdk\n    .getWebrtcInternals()\n    ?.onStatsChange(stats => updateWebrtcStoreStats(webrtcStore, stats, store, sdk));\n\n  return () => {\n    unsubLocalPeer();\n    unsubSdkStats && unsubSdkStats();\n  };\n};\n\nconst updateLocalPeerInWebrtcStore = (store: IHMSStore, webrtcStore: IHMSStatsStore) => {\n  let unsubID: Unsubscribe, unsubVideoTrackID: Unsubscribe, unsubAudioTrackID: Unsubscribe;\n  if (store.getState(selectLocalPeerID)) {\n    webrtcStore.namedSetState(draft => {\n      draft.localPeer.id = store.getState(selectLocalPeerID);\n    }, 'localpeer-id');\n  } else {\n    unsubID = store.subscribe(localPeerID => {\n      localPeerID &&\n        webrtcStore.namedSetState(draft => {\n          draft.localPeer.id = localPeerID;\n        }, 'localpeer-id');\n    }, selectLocalPeerID);\n  }\n\n  if (store.getState(selectLocalVideoTrackID)) {\n    webrtcStore.namedSetState(draft => {\n      draft.localPeer.videoTrack = store.getState(selectLocalVideoTrackID);\n    }, 'localpeer-videotrack-id');\n  } else {\n    unsubVideoTrackID = store.subscribe(videoTrackID => {\n      videoTrackID &&\n        webrtcStore.namedSetState(draft => {\n          draft.localPeer.videoTrack = videoTrackID;\n        }, 'localpeer-videotrack-id');\n    }, selectLocalVideoTrackID);\n  }\n\n  if (store.getState(selectLocalAudioTrackID)) {\n    webrtcStore.namedSetState(draft => {\n      draft.localPeer.audioTrack = store.getState(selectLocalAudioTrackID);\n    }, 'localpeer-audiotrack-id');\n  } else {\n    unsubAudioTrackID = store.subscribe(audioTrackID => {\n      audioTrackID &&\n        webrtcStore.namedSetState(draft => {\n          draft.localPeer.audioTrack = audioTrackID;\n        }, 'localpeer-audiotrack-id');\n    }, selectLocalAudioTrackID);\n  }\n\n  return () => {\n    unsubID?.();\n    unsubVideoTrackID?.();\n    unsubAudioTrackID?.();\n  };\n};\n\nconst updateWebrtcStoreStats = (\n  webrtcStore: IHMSStatsStore,\n  stats: HMSWebrtcStats,\n  hmsStore: IHMSStore,\n  sdk: HMSSdk,\n) => {\n  const tracks: Record<HMSTrackID, HMSTrack> = hmsStore.getState(selectTracksMap);\n  webrtcStore.namedSetState(store => {\n    const localPeerID = hmsStore.getState(selectLocalPeerID);\n    const newTrackStats: Record<HMSTrackID, HMSTrackStats> = {};\n    const trackIDs = Object.keys(tracks).filter(trackID => tracks[trackID].peerId !== localPeerID);\n\n    for (const trackID of trackIDs) {\n      const sdkTrackStats = stats.getRemoteTrackStats(trackID);\n      if (sdkTrackStats) {\n        newTrackStats[trackID] = sdkTrackStats;\n      }\n    }\n\n    mergeNewIndividualStatsInDraft<HMSTrackID, HMSTrackStats>(store.remoteTrackStats, newTrackStats);\n\n    // @TODO: Include all peer stats, own ticket, transmit local peer stats to other peer's using biz\n    const newPeerStats = { [localPeerID]: stats.getLocalPeerStats() };\n    mergeNewIndividualStatsInDraft<HMSPeerID, HMSPeerStats>(store.peerStats, newPeerStats);\n    // @ts-ignore\n    mergeLocalTrackStats(store.localTrackStats, stats.getLocalTrackStats(), sdk.store.getLocalPeerTracks());\n  }, 'webrtc-stats');\n};\n\nconst resetHMSStatsStore = (store: IHMSStatsStore, reason = 'resetState') => {\n  store.namedSetState(draft => {\n    Object.assign(draft, createDefaultStatsStore());\n  }, reason);\n};\n","import { Subscribe } from 'zustand/vanilla';\nimport { HMSSdk } from '@100mslive/hms-video';\nimport { subscribeToSdkWebrtcStats } from './webrtc-stats-store';\nimport { storeNameWithTabTitle } from '../../common/storeName';\nimport { GetState, IHMSStatsStore, IHMSStatsStoreReadOnly, IHMSStore } from '../IHMSStore';\nimport { createDefaultStatsStore, HMSReactiveStore, HMSStatsStore, selectRoomState } from '..';\n\n/**\n * @internal\n */\nexport class HMSStats implements IHMSStatsStoreReadOnly {\n  readonly getState: GetState<HMSStatsStore>;\n  readonly subscribe: Subscribe<HMSStatsStore>;\n  readonly getPublishPeerConnection: () => Promise<RTCPeerConnection | undefined>;\n  readonly getSubscribePeerConnection: () => Promise<RTCPeerConnection | undefined>;\n  private readonly store: IHMSStatsStore;\n\n  constructor(private hmsStore: IHMSStore, private sdk?: HMSSdk) {\n    this.store = HMSReactiveStore.createNewHMSStore<HMSStatsStore>(\n      storeNameWithTabTitle('HMSStatsStore'),\n      createDefaultStatsStore,\n    );\n\n    this.getState = this.store.getState;\n    this.subscribe = this.store.subscribe;\n\n    this.getPublishPeerConnection = () =>\n      new Promise<RTCPeerConnection | undefined>(resolve => {\n        if (this.hmsStore.getState(selectRoomState) === 'Connected') {\n          resolve(this.sdk?.getWebrtcInternals()?.getPublishPeerConnection());\n        } else {\n          this.hmsStore.subscribe(roomState => {\n            if (roomState === 'Connected') {\n              resolve(this.sdk?.getWebrtcInternals()?.getPublishPeerConnection());\n            }\n          }, selectRoomState);\n        }\n      });\n\n    this.getSubscribePeerConnection = () =>\n      new Promise<RTCPeerConnection | undefined>(resolve => {\n        if (this.hmsStore.getState(selectRoomState) === 'Connected') {\n          resolve(this.sdk?.getWebrtcInternals()?.getSubscribePeerConnection());\n        } else {\n          this.hmsStore.subscribe(roomState => {\n            if (roomState === 'Connected') {\n              resolve(this.sdk?.getWebrtcInternals()?.getSubscribePeerConnection());\n            }\n          }, selectRoomState);\n        }\n      });\n\n    if (!this.sdk) {\n      return;\n    }\n\n    subscribeToSdkWebrtcStats(this.sdk, this.store, this.hmsStore);\n  }\n}\n","import { createSelector } from 'reselect';\nimport { HMSPreferredSimulcastLayer, RID, simulcastMapping } from '../hmsSDKStore/sdkTypes';\nimport { HMSPeerID, HMSStatsStore, HMSTrackID } from '../schema';\nimport { byIDCurry } from '../selectors/common';\n\nconst selectLocalPeerID = (store: HMSStatsStore) => store.localPeer.id;\nconst selectLocalAudioTrackID = (store: HMSStatsStore) => store.localPeer.audioTrack;\nconst selectLocalVideoTrackID = (store: HMSStatsStore) => store.localPeer.videoTrack;\nconst selectPeerID = (_store: HMSStatsStore, peerID: HMSPeerID | undefined) => peerID;\nconst selectTrackID = (_store: HMSStatsStore, trackID: HMSTrackID | undefined) => trackID;\nconst selectRemoteTrackStatsMap = (store: HMSStatsStore) => store.remoteTrackStats;\nconst selectPeerStatsMap = (store: HMSStatsStore) => store.peerStats;\nconst selectLocalTrackStatsMap = (store: HMSStatsStore) => store.localTrackStats;\n\n/**\n * Local peer stats selectors\n */\nconst localPeerStats = createSelector(\n  [selectPeerStatsMap, selectLocalPeerID],\n  (storePeerStats, localPeerID) => storePeerStats[localPeerID],\n);\n\n/**\n *  The total number of packets lost during the call\n */\nconst packetsLost = createSelector(localPeerStats, localPeerStats => localPeerStats?.subscribe?.packetsLost);\n\nconst jitter = createSelector(localPeerStats, localPeerStats => localPeerStats?.subscribe?.jitter);\n\n/**\n * The bitrate at which all the local tracks are being published at\n */\nconst publishBitrate = createSelector(localPeerStats, localPeerStats => localPeerStats?.publish?.bitrate);\n\n/**\n * The bitrate at which all the remote tracks are being received at\n */\nconst subscribeBitrate = createSelector(localPeerStats, localPeerStats => localPeerStats?.subscribe?.bitrate);\n\n/**\n * The total bitrate available for publishing\n */\nconst availablePublishBitrate = createSelector(\n  localPeerStats,\n  localPeerStats => localPeerStats?.publish?.availableOutgoingBitrate,\n);\n\n/**\n * The total bitrate available for subscribing to remote peers\n */\nconst availableSubscribeBitrate = createSelector(\n  localPeerStats,\n  localPeerStats => localPeerStats?.subscribe?.availableIncomingBitrate,\n);\n\n/**\n * The total bytes sent by the local peer\n */\nconst totalBytesSent = createSelector(localPeerStats, localPeerStats => localPeerStats?.publish?.bytesSent);\n\n/**\n * The total bytes received by the local peer\n */\nconst totalBytesReceived = createSelector(localPeerStats, localPeerStats => localPeerStats?.subscribe?.bytesReceived);\n\n/**\n * By ID Selectors\n * To be used for remote tracks\n */\n\nconst selectPeerStatsByIDBare = createSelector([selectPeerStatsMap, selectPeerID], (storePeerStats, peerID) =>\n  peerID ? storePeerStats[peerID] : undefined,\n);\n\nconst selectTrackStatsByIDBare = createSelector(\n  [selectRemoteTrackStatsMap, selectTrackID],\n  (storeTrackStats, trackID) => (trackID ? storeTrackStats[trackID] : undefined),\n);\n\nconst selectLocalTrackStatsByIDBare = createSelector(\n  [selectLocalTrackStatsMap, selectTrackID],\n  (storeLocalTrackStats, trackID) => (trackID ? storeLocalTrackStats[trackID] : undefined),\n);\n\n/**\n * Stats(bitrate, bytes sent/received, etc...) for a single peer given the peer ID\n */\nconst peerStatsByID = byIDCurry(selectPeerStatsByIDBare);\n\n/**\n * Stats(bitrate, bytes sent/received, framerate, FPS, etc...) for a remote track\n */\nconst trackStatsByID = byIDCurry(selectTrackStatsByIDBare);\n\n/**\n * Local track stats selectors\n */\n\nconst localAudioTrackStats = createSelector(\n  [selectLocalTrackStatsMap, selectLocalAudioTrackID],\n  (trackStats, trackID) => (trackID ? trackStats[trackID]?.[0] : undefined),\n);\n\nconst localAudioTrackStatsByID = byIDCurry(\n  createSelector(selectLocalTrackStatsByIDBare, trackStats => trackStats?.[0]),\n);\n\nconst localVideoTrackStats = createSelector(\n  [selectLocalTrackStatsMap, selectLocalVideoTrackID],\n  (trackStats, trackID) => (trackID ? trackStats[trackID]?.[0] : undefined),\n);\n\nconst localVideoTrackStatsByID = byIDCurry(createSelector(selectLocalTrackStatsByIDBare, trackStats => trackStats));\n\nconst localVideoTrackStatsByLayer = (layer?: HMSPreferredSimulcastLayer) =>\n  byIDCurry(\n    createSelector(selectLocalTrackStatsByIDBare, stats => {\n      const rid = (Object.keys(simulcastMapping) as RID[]).find(key => simulcastMapping[key] === layer);\n      return layer ? stats?.find(stat => stat.rid === rid) || stats?.[0] : stats?.[0];\n    }),\n  );\n\nexport const selectHMSStats = {\n  localPeerStats,\n  packetsLost,\n  jitter,\n  publishBitrate,\n  subscribeBitrate,\n  availablePublishBitrate,\n  availableSubscribeBitrate,\n  totalBytesSent,\n  totalBytesReceived,\n  peerStatsByID,\n  trackStatsByID,\n  localAudioTrackStatsByID,\n  localVideoTrackStatsByID,\n  localVideoTrackStatsByLayer,\n  localAudioTrackStats,\n  localVideoTrackStats,\n};\n",null,"const errors = {\n\t0: \"Illegal state\",\n\t1: \"Immer drafts cannot have computed properties\",\n\t2: \"This object has been frozen and should not be mutated\",\n\t3(data: any) {\n\t\treturn (\n\t\t\t\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" +\n\t\t\tdata\n\t\t)\n\t},\n\t4: \"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",\n\t5: \"Immer forbids circular references\",\n\t6: \"The first or second argument to `produce` must be a function\",\n\t7: \"The third argument to `produce` must be a function or undefined\",\n\t8: \"First argument to `createDraft` must be a plain object, an array, or an immerable object\",\n\t9: \"First argument to `finishDraft` must be a draft returned by `createDraft`\",\n\t10: \"The given draft is already finalized\",\n\t11: \"Object.defineProperty() cannot be used on an Immer draft\",\n\t12: \"Object.setPrototypeOf() cannot be used on an Immer draft\",\n\t13: \"Immer only supports deleting array indices\",\n\t14: \"Immer only supports setting array indices and the 'length' property\",\n\t15(path: string) {\n\t\treturn \"Cannot apply patch, path doesn't resolve: \" + path\n\t},\n\t16: 'Sets cannot have \"replace\" patches.',\n\t17(op: string) {\n\t\treturn \"Unsupported patch operation: \" + op\n\t},\n\t18(plugin: string) {\n\t\treturn `The plugin for '${plugin}' has not been loaded into Immer. To enable the plugin, import and call \\`enable${plugin}()\\` when initializing your application.`\n\t},\n\t20: \"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available\",\n\t21(thing: string) {\n\t\treturn `produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '${thing}'`\n\t},\n\t22(thing: string) {\n\t\treturn `'current' expects a draft, got: ${thing}`\n\t},\n\t23(thing: string) {\n\t\treturn `'original' expects a draft, got: ${thing}`\n\t},\n\t24: \"Patching reserved attributes like __proto__, prototype and constructor is not allowed\"\n} as const\n\nexport function die(error: keyof typeof errors, ...args: any[]): never {\n\tif (__DEV__) {\n\t\tconst e = errors[error]\n\t\tconst msg = !e\n\t\t\t? \"unknown error nr: \" + error\n\t\t\t: typeof e === \"function\"\n\t\t\t? e.apply(null, args as any)\n\t\t\t: e\n\t\tthrow new Error(`[Immer] ${msg}`)\n\t}\n\tthrow new Error(\n\t\t`[Immer] minified error nr: ${error}${\n\t\t\targs.length ? \" \" + args.map(s => `'${s}'`).join(\",\") : \"\"\n\t\t}. Find the full error at: https://bit.ly/3cXEKWf`\n\t)\n}\n","import {\n\tDRAFT_STATE,\n\tDRAFTABLE,\n\thasSet,\n\tObjectish,\n\tDrafted,\n\tAnyObject,\n\tAnyMap,\n\tAnySet,\n\tImmerState,\n\thasMap,\n\tArchtype,\n\tdie\n} from \"../internal\"\n\n/** Returns true if the given value is an Immer draft */\n/*#__PURE__*/\nexport function isDraft(value: any): boolean {\n\treturn !!value && !!value[DRAFT_STATE]\n}\n\n/** Returns true if the given value can be drafted by Immer */\n/*#__PURE__*/\nexport function isDraftable(value: any): boolean {\n\tif (!value) return false\n\treturn (\n\t\tisPlainObject(value) ||\n\t\tArray.isArray(value) ||\n\t\t!!value[DRAFTABLE] ||\n\t\t!!value.constructor?.[DRAFTABLE] ||\n\t\tisMap(value) ||\n\t\tisSet(value)\n\t)\n}\n\nconst objectCtorString = Object.prototype.constructor.toString()\n/*#__PURE__*/\nexport function isPlainObject(value: any): boolean {\n\tif (!value || typeof value !== \"object\") return false\n\tconst proto = Object.getPrototypeOf(value)\n\tif (proto === null) {\n\t\treturn true\n\t}\n\tconst Ctor =\n\t\tObject.hasOwnProperty.call(proto, \"constructor\") && proto.constructor\n\n\tif (Ctor === Object) return true\n\n\treturn (\n\t\ttypeof Ctor == \"function\" &&\n\t\tFunction.toString.call(Ctor) === objectCtorString\n\t)\n}\n\n/** Get the underlying object that is represented by the given draft */\n/*#__PURE__*/\nexport function original<T>(value: T): T | undefined\nexport function original(value: Drafted<any>): any {\n\tif (!isDraft(value)) die(23, value)\n\treturn value[DRAFT_STATE].base_\n}\n\n/*#__PURE__*/\nexport const ownKeys: (target: AnyObject) => PropertyKey[] =\n\ttypeof Reflect !== \"undefined\" && Reflect.ownKeys\n\t\t? Reflect.ownKeys\n\t\t: typeof Object.getOwnPropertySymbols !== \"undefined\"\n\t\t? obj =>\n\t\t\t\tObject.getOwnPropertyNames(obj).concat(\n\t\t\t\t\tObject.getOwnPropertySymbols(obj) as any\n\t\t\t\t)\n\t\t: /* istanbul ignore next */ Object.getOwnPropertyNames\n\nexport const getOwnPropertyDescriptors =\n\tObject.getOwnPropertyDescriptors ||\n\tfunction getOwnPropertyDescriptors(target: any) {\n\t\t// Polyfill needed for Hermes and IE, see https://github.com/facebook/hermes/issues/274\n\t\tconst res: any = {}\n\t\townKeys(target).forEach(key => {\n\t\t\tres[key] = Object.getOwnPropertyDescriptor(target, key)\n\t\t})\n\t\treturn res\n\t}\n\nexport function each<T extends Objectish>(\n\tobj: T,\n\titer: (key: string | number, value: any, source: T) => void,\n\tenumerableOnly?: boolean\n): void\nexport function each(obj: any, iter: any, enumerableOnly = false) {\n\tif (getArchtype(obj) === Archtype.Object) {\n\t\t;(enumerableOnly ? Object.keys : ownKeys)(obj).forEach(key => {\n\t\t\tif (!enumerableOnly || typeof key !== \"symbol\") iter(key, obj[key], obj)\n\t\t})\n\t} else {\n\t\tobj.forEach((entry: any, index: any) => iter(index, entry, obj))\n\t}\n}\n\n/*#__PURE__*/\nexport function getArchtype(thing: any): Archtype {\n\t/* istanbul ignore next */\n\tconst state: undefined | ImmerState = thing[DRAFT_STATE]\n\treturn state\n\t\t? state.type_ > 3\n\t\t\t? state.type_ - 4 // cause Object and Array map back from 4 and 5\n\t\t\t: (state.type_ as any) // others are the same\n\t\t: Array.isArray(thing)\n\t\t? Archtype.Array\n\t\t: isMap(thing)\n\t\t? Archtype.Map\n\t\t: isSet(thing)\n\t\t? Archtype.Set\n\t\t: Archtype.Object\n}\n\n/*#__PURE__*/\nexport function has(thing: any, prop: PropertyKey): boolean {\n\treturn getArchtype(thing) === Archtype.Map\n\t\t? thing.has(prop)\n\t\t: Object.prototype.hasOwnProperty.call(thing, prop)\n}\n\n/*#__PURE__*/\nexport function get(thing: AnyMap | AnyObject, prop: PropertyKey): any {\n\t// @ts-ignore\n\treturn getArchtype(thing) === Archtype.Map ? thing.get(prop) : thing[prop]\n}\n\n/*#__PURE__*/\nexport function set(thing: any, propOrOldValue: PropertyKey, value: any) {\n\tconst t = getArchtype(thing)\n\tif (t === Archtype.Map) thing.set(propOrOldValue, value)\n\telse if (t === Archtype.Set) {\n\t\tthing.add(value)\n\t} else thing[propOrOldValue] = value\n}\n\n/*#__PURE__*/\nexport function is(x: any, y: any): boolean {\n\t// From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n\tif (x === y) {\n\t\treturn x !== 0 || 1 / x === 1 / y\n\t} else {\n\t\treturn x !== x && y !== y\n\t}\n}\n\n/*#__PURE__*/\nexport function isMap(target: any): target is AnyMap {\n\treturn hasMap && target instanceof Map\n}\n\n/*#__PURE__*/\nexport function isSet(target: any): target is AnySet {\n\treturn hasSet && target instanceof Set\n}\n/*#__PURE__*/\nexport function latest(state: ImmerState): any {\n\treturn state.copy_ || state.base_\n}\n\n/*#__PURE__*/\nexport function shallowCopy(base: any) {\n\tif (Array.isArray(base)) return Array.prototype.slice.call(base)\n\tconst descriptors = getOwnPropertyDescriptors(base)\n\tdelete descriptors[DRAFT_STATE as any]\n\tlet keys = ownKeys(descriptors)\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst key: any = keys[i]\n\t\tconst desc = descriptors[key]\n\t\tif (desc.writable === false) {\n\t\t\tdesc.writable = true\n\t\t\tdesc.configurable = true\n\t\t}\n\t\t// like object.assign, we will read any _own_, get/set accessors. This helps in dealing\n\t\t// with libraries that trap values, like mobx or vue\n\t\t// unlike object.assign, non-enumerables will be copied as well\n\t\tif (desc.get || desc.set)\n\t\t\tdescriptors[key] = {\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true, // could live with !!desc.set as well here...\n\t\t\t\tenumerable: desc.enumerable,\n\t\t\t\tvalue: base[key]\n\t\t\t}\n\t}\n\treturn Object.create(Object.getPrototypeOf(base), descriptors)\n}\n\n/**\n * Freezes draftable objects. Returns the original object.\n * By default freezes shallowly, but if the second argument is `true` it will freeze recursively.\n *\n * @param obj\n * @param deep\n */\nexport function freeze<T>(obj: T, deep?: boolean): T\nexport function freeze<T>(obj: any, deep: boolean = false): T {\n\tif (isFrozen(obj) || isDraft(obj) || !isDraftable(obj)) return obj\n\tif (getArchtype(obj) > 1 /* Map or Set */) {\n\t\tobj.set = obj.add = obj.clear = obj.delete = dontMutateFrozenCollections as any\n\t}\n\tObject.freeze(obj)\n\tif (deep) each(obj, (key, value) => freeze(value, true), true)\n\treturn obj\n}\n\nfunction dontMutateFrozenCollections() {\n\tdie(2)\n}\n\nexport function isFrozen(obj: any): boolean {\n\tif (obj == null || typeof obj !== \"object\") return true\n\t// See #600, IE dies on non-objects in Object.isFrozen\n\treturn Object.isFrozen(obj)\n}\n","import {\n\tImmerState,\n\tPatch,\n\tImmerScope,\n\tDrafted,\n\tAnyObject,\n\tImmerBaseState,\n\tAnyMap,\n\tAnySet,\n\tProxyType,\n\tdie\n} from \"../internal\"\n\n/** Plugin utilities */\nconst plugins: {\n\tPatches?: {\n\t\tgeneratePatches_(\n\t\t\tstate: ImmerState,\n\t\t\tbasePath: PatchPath,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tgenerateReplacementPatches_(\n\t\t\tbase: any,\n\t\t\treplacement: any,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tapplyPatches_<T>(draft: T, patches: Patch[]): T\n\t}\n\tES5?: {\n\t\twillFinalizeES5_(scope: ImmerScope, result: any, isReplaced: boolean): void\n\t\tcreateES5Proxy_<T>(\n\t\t\tbase: T,\n\t\t\tparent?: ImmerState\n\t\t): Drafted<T, ES5ObjectState | ES5ArrayState>\n\t\thasChanges_(state: ES5ArrayState | ES5ObjectState): boolean\n\t}\n\tMapSet?: {\n\t\tproxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T\n\t\tproxySet_<T extends AnySet>(target: T, parent?: ImmerState): T\n\t}\n} = {}\n\ntype Plugins = typeof plugins\n\nexport function getPlugin<K extends keyof Plugins>(\n\tpluginKey: K\n): Exclude<Plugins[K], undefined> {\n\tconst plugin = plugins[pluginKey]\n\tif (!plugin) {\n\t\tdie(18, pluginKey)\n\t}\n\t// @ts-ignore\n\treturn plugin\n}\n\nexport function loadPlugin<K extends keyof Plugins>(\n\tpluginKey: K,\n\timplementation: Plugins[K]\n): void {\n\tif (!plugins[pluginKey]) plugins[pluginKey] = implementation\n}\n\n/** ES5 Plugin */\n\ninterface ES5BaseState extends ImmerBaseState {\n\tassigned_: {[key: string]: any}\n\tparent_?: ImmerState\n\trevoked_: boolean\n}\n\nexport interface ES5ObjectState extends ES5BaseState {\n\ttype_: ProxyType.ES5Object\n\tdraft_: Drafted<AnyObject, ES5ObjectState>\n\tbase_: AnyObject\n\tcopy_: AnyObject | null\n}\n\nexport interface ES5ArrayState extends ES5BaseState {\n\ttype_: ProxyType.ES5Array\n\tdraft_: Drafted<AnyObject, ES5ArrayState>\n\tbase_: any\n\tcopy_: any\n}\n\n/** Map / Set plugin */\n\nexport interface MapState extends ImmerBaseState {\n\ttype_: ProxyType.Map\n\tcopy_: AnyMap | undefined\n\tassigned_: Map<any, boolean> | undefined\n\tbase_: AnyMap\n\trevoked_: boolean\n\tdraft_: Drafted<AnyMap, MapState>\n}\n\nexport interface SetState extends ImmerBaseState {\n\ttype_: ProxyType.Set\n\tcopy_: AnySet | undefined\n\tbase_: AnySet\n\tdrafts_: Map<any, Drafted> // maps the original value to the draft value in the new set\n\trevoked_: boolean\n\tdraft_: Drafted<AnySet, SetState>\n}\n\n/** Patches plugin */\n\nexport type PatchPath = (string | number)[]\n","import {\n\tPatch,\n\tPatchListener,\n\tDrafted,\n\tImmer,\n\tDRAFT_STATE,\n\tImmerState,\n\tProxyType,\n\tgetPlugin\n} from \"../internal\"\nimport {die} from \"../utils/errors\"\n\n/** Each scope represents a `produce` call. */\n\nexport interface ImmerScope {\n\tpatches_?: Patch[]\n\tinversePatches_?: Patch[]\n\tcanAutoFreeze_: boolean\n\tdrafts_: any[]\n\tparent_?: ImmerScope\n\tpatchListener_?: PatchListener\n\timmer_: Immer\n\tunfinalizedDrafts_: number\n}\n\nlet currentScope: ImmerScope | undefined\n\nexport function getCurrentScope() {\n\tif (__DEV__ && !currentScope) die(0)\n\treturn currentScope!\n}\n\nfunction createScope(\n\tparent_: ImmerScope | undefined,\n\timmer_: Immer\n): ImmerScope {\n\treturn {\n\t\tdrafts_: [],\n\t\tparent_,\n\t\timmer_,\n\t\t// Whenever the modified draft contains a draft from another scope, we\n\t\t// need to prevent auto-freezing so the unowned draft can be finalized.\n\t\tcanAutoFreeze_: true,\n\t\tunfinalizedDrafts_: 0\n\t}\n}\n\nexport function usePatchesInScope(\n\tscope: ImmerScope,\n\tpatchListener?: PatchListener\n) {\n\tif (patchListener) {\n\t\tgetPlugin(\"Patches\") // assert we have the plugin\n\t\tscope.patches_ = []\n\t\tscope.inversePatches_ = []\n\t\tscope.patchListener_ = patchListener\n\t}\n}\n\nexport function revokeScope(scope: ImmerScope) {\n\tleaveScope(scope)\n\tscope.drafts_.forEach(revokeDraft)\n\t// @ts-ignore\n\tscope.drafts_ = null\n}\n\nexport function leaveScope(scope: ImmerScope) {\n\tif (scope === currentScope) {\n\t\tcurrentScope = scope.parent_\n\t}\n}\n\nexport function enterScope(immer: Immer) {\n\treturn (currentScope = createScope(currentScope, immer))\n}\n\nfunction revokeDraft(draft: Drafted) {\n\tconst state: ImmerState = draft[DRAFT_STATE]\n\tif (\n\t\tstate.type_ === ProxyType.ProxyObject ||\n\t\tstate.type_ === ProxyType.ProxyArray\n\t)\n\t\tstate.revoke_()\n\telse state.revoked_ = true\n}\n","import {\n\tImmerScope,\n\tDRAFT_STATE,\n\tisDraftable,\n\tNOTHING,\n\tPatchPath,\n\teach,\n\thas,\n\tfreeze,\n\tImmerState,\n\tisDraft,\n\tSetState,\n\tset,\n\tProxyType,\n\tgetPlugin,\n\tdie,\n\trevokeScope,\n\tisFrozen,\n\tshallowCopy\n} from \"../internal\"\n\nexport function processResult(result: any, scope: ImmerScope) {\n\tscope.unfinalizedDrafts_ = scope.drafts_.length\n\tconst baseDraft = scope.drafts_![0]\n\tconst isReplaced = result !== undefined && result !== baseDraft\n\tif (!scope.immer_.useProxies_)\n\t\tgetPlugin(\"ES5\").willFinalizeES5_(scope, result, isReplaced)\n\tif (isReplaced) {\n\t\tif (baseDraft[DRAFT_STATE].modified_) {\n\t\t\trevokeScope(scope)\n\t\t\tdie(4)\n\t\t}\n\t\tif (isDraftable(result)) {\n\t\t\t// Finalize the result in case it contains (or is) a subset of the draft.\n\t\t\tresult = finalize(scope, result)\n\t\t\tif (!scope.parent_) maybeFreeze(scope, result)\n\t\t}\n\t\tif (scope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(\n\t\t\t\tbaseDraft[DRAFT_STATE].base_,\n\t\t\t\tresult,\n\t\t\t\tscope.patches_,\n\t\t\t\tscope.inversePatches_!\n\t\t\t)\n\t\t}\n\t} else {\n\t\t// Finalize the base draft.\n\t\tresult = finalize(scope, baseDraft, [])\n\t}\n\trevokeScope(scope)\n\tif (scope.patches_) {\n\t\tscope.patchListener_!(scope.patches_, scope.inversePatches_!)\n\t}\n\treturn result !== NOTHING ? result : undefined\n}\n\nfunction finalize(rootScope: ImmerScope, value: any, path?: PatchPath) {\n\t// Don't recurse in tho recursive data structures\n\tif (isFrozen(value)) return value\n\n\tconst state: ImmerState = value[DRAFT_STATE]\n\t// A plain object, might need freezing, might contain drafts\n\tif (!state) {\n\t\teach(\n\t\t\tvalue,\n\t\t\t(key, childValue) =>\n\t\t\t\tfinalizeProperty(rootScope, state, value, key, childValue, path),\n\t\t\ttrue // See #590, don't recurse into non-enumerable of non drafted objects\n\t\t)\n\t\treturn value\n\t}\n\t// Never finalize drafts owned by another scope.\n\tif (state.scope_ !== rootScope) return value\n\t// Unmodified draft, return the (frozen) original\n\tif (!state.modified_) {\n\t\tmaybeFreeze(rootScope, state.base_, true)\n\t\treturn state.base_\n\t}\n\t// Not finalized yet, let's do that now\n\tif (!state.finalized_) {\n\t\tstate.finalized_ = true\n\t\tstate.scope_.unfinalizedDrafts_--\n\t\tconst result =\n\t\t\t// For ES5, create a good copy from the draft first, with added keys and without deleted keys.\n\t\t\tstate.type_ === ProxyType.ES5Object || state.type_ === ProxyType.ES5Array\n\t\t\t\t? (state.copy_ = shallowCopy(state.draft_))\n\t\t\t\t: state.copy_\n\t\t// Finalize all children of the copy\n\t\t// For sets we clone before iterating, otherwise we can get in endless loop due to modifying during iteration, see #628\n\t\t// To preserve insertion order in all cases we then clear the set\n\t\t// And we let finalizeProperty know it needs to re-add non-draft children back to the target\n\t\tlet resultEach = result\n\t\tlet isSet = false\n\t\tif (state.type_ === ProxyType.Set) {\n\t\t\tresultEach = new Set(result)\n\t\t\tresult.clear()\n\t\t\tisSet = true\n\t\t}\n\t\teach(resultEach, (key, childValue) =>\n\t\t\tfinalizeProperty(rootScope, state, result, key, childValue, path, isSet)\n\t\t)\n\t\t// everything inside is frozen, we can freeze here\n\t\tmaybeFreeze(rootScope, result, false)\n\t\t// first time finalizing, let's create those patches\n\t\tif (path && rootScope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generatePatches_(\n\t\t\t\tstate,\n\t\t\t\tpath,\n\t\t\t\trootScope.patches_,\n\t\t\t\trootScope.inversePatches_!\n\t\t\t)\n\t\t}\n\t}\n\treturn state.copy_\n}\n\nfunction finalizeProperty(\n\trootScope: ImmerScope,\n\tparentState: undefined | ImmerState,\n\ttargetObject: any,\n\tprop: string | number,\n\tchildValue: any,\n\trootPath?: PatchPath,\n\ttargetIsSet?: boolean\n) {\n\tif (__DEV__ && childValue === targetObject) die(5)\n\tif (isDraft(childValue)) {\n\t\tconst path =\n\t\t\trootPath &&\n\t\t\tparentState &&\n\t\t\tparentState!.type_ !== ProxyType.Set && // Set objects are atomic since they have no keys.\n\t\t\t!has((parentState as Exclude<ImmerState, SetState>).assigned_!, prop) // Skip deep patches for assigned keys.\n\t\t\t\t? rootPath!.concat(prop)\n\t\t\t\t: undefined\n\t\t// Drafts owned by `scope` are finalized here.\n\t\tconst res = finalize(rootScope, childValue, path)\n\t\tset(targetObject, prop, res)\n\t\t// Drafts from another scope must prevented to be frozen\n\t\t// if we got a draft back from finalize, we're in a nested produce and shouldn't freeze\n\t\tif (isDraft(res)) {\n\t\t\trootScope.canAutoFreeze_ = false\n\t\t} else return\n\t} else if (targetIsSet) {\n\t\ttargetObject.add(childValue)\n\t}\n\t// Search new objects for unfinalized drafts. Frozen objects should never contain drafts.\n\tif (isDraftable(childValue) && !isFrozen(childValue)) {\n\t\tif (!rootScope.immer_.autoFreeze_ && rootScope.unfinalizedDrafts_ < 1) {\n\t\t\t// optimization: if an object is not a draft, and we don't have to\n\t\t\t// deepfreeze everything, and we are sure that no drafts are left in the remaining object\n\t\t\t// cause we saw and finalized all drafts already; we can stop visiting the rest of the tree.\n\t\t\t// This benefits especially adding large data tree's without further processing.\n\t\t\t// See add-data.js perf test\n\t\t\treturn\n\t\t}\n\t\tfinalize(rootScope, childValue)\n\t\t// immer deep freezes plain objects, so if there is no parent state, we freeze as well\n\t\tif (!parentState || !parentState.scope_.parent_)\n\t\t\tmaybeFreeze(rootScope, childValue)\n\t}\n}\n\nfunction maybeFreeze(scope: ImmerScope, value: any, deep = false) {\n\t// we never freeze for a non-root scope; as it would prevent pruning for drafts inside wrapping objects\n\tif (!scope.parent_ && scope.immer_.autoFreeze_ && scope.canAutoFreeze_) {\n\t\tfreeze(value, deep)\n\t}\n}\n","import {\n\teach,\n\thas,\n\tis,\n\tisDraftable,\n\tshallowCopy,\n\tlatest,\n\tImmerBaseState,\n\tImmerState,\n\tDrafted,\n\tAnyObject,\n\tAnyArray,\n\tObjectish,\n\tgetCurrentScope,\n\tDRAFT_STATE,\n\tdie,\n\tcreateProxy,\n\tProxyType\n} from \"../internal\"\n\ninterface ProxyBaseState extends ImmerBaseState {\n\tassigned_: {\n\t\t[property: string]: boolean\n\t}\n\tparent_?: ImmerState\n\trevoke_(): void\n}\n\nexport interface ProxyObjectState extends ProxyBaseState {\n\ttype_: ProxyType.ProxyObject\n\tbase_: any\n\tcopy_: any\n\tdraft_: Drafted<AnyObject, ProxyObjectState>\n}\n\nexport interface ProxyArrayState extends ProxyBaseState {\n\ttype_: ProxyType.ProxyArray\n\tbase_: AnyArray\n\tcopy_: AnyArray | null\n\tdraft_: Drafted<AnyArray, ProxyArrayState>\n}\n\ntype ProxyState = ProxyObjectState | ProxyArrayState\n\n/**\n * Returns a new draft of the `base` object.\n *\n * The second argument is the parent draft-state (used internally).\n */\nexport function createProxyProxy<T extends Objectish>(\n\tbase: T,\n\tparent?: ImmerState\n): Drafted<T, ProxyState> {\n\tconst isArray = Array.isArray(base)\n\tconst state: ProxyState = {\n\t\ttype_: isArray ? ProxyType.ProxyArray : (ProxyType.ProxyObject as any),\n\t\t// Track which produce call this is associated with.\n\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t// True for both shallow and deep changes.\n\t\tmodified_: false,\n\t\t// Used during finalization.\n\t\tfinalized_: false,\n\t\t// Track which properties have been assigned (true) or deleted (false).\n\t\tassigned_: {},\n\t\t// The parent draft state.\n\t\tparent_: parent,\n\t\t// The base state.\n\t\tbase_: base,\n\t\t// The base proxy.\n\t\tdraft_: null as any, // set below\n\t\t// The base copy with any updated values.\n\t\tcopy_: null,\n\t\t// Called by the `produce` function.\n\t\trevoke_: null as any,\n\t\tisManual_: false\n\t}\n\n\t// the traps must target something, a bit like the 'real' base.\n\t// but also, we need to be able to determine from the target what the relevant state is\n\t// (to avoid creating traps per instance to capture the state in closure,\n\t// and to avoid creating weird hidden properties as well)\n\t// So the trick is to use 'state' as the actual 'target'! (and make sure we intercept everything)\n\t// Note that in the case of an array, we put the state in an array to have better Reflect defaults ootb\n\tlet target: T = state as any\n\tlet traps: ProxyHandler<object | Array<any>> = objectTraps\n\tif (isArray) {\n\t\ttarget = [state] as any\n\t\ttraps = arrayTraps\n\t}\n\n\tconst {revoke, proxy} = Proxy.revocable(target, traps)\n\tstate.draft_ = proxy as any\n\tstate.revoke_ = revoke\n\treturn proxy as any\n}\n\n/**\n * Object drafts\n */\nexport const objectTraps: ProxyHandler<ProxyState> = {\n\tget(state, prop) {\n\t\tif (prop === DRAFT_STATE) return state\n\n\t\tconst source = latest(state)\n\t\tif (!has(source, prop)) {\n\t\t\t// non-existing or non-own property...\n\t\t\treturn readPropFromProto(state, source, prop)\n\t\t}\n\t\tconst value = source[prop]\n\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\t\t// Check for existing draft in modified state.\n\t\t// Assigned values are never drafted. This catches any drafts we created, too.\n\t\tif (value === peek(state.base_, prop)) {\n\t\t\tprepareCopy(state)\n\t\t\treturn (state.copy_![prop as any] = createProxy(\n\t\t\t\tstate.scope_.immer_,\n\t\t\t\tvalue,\n\t\t\t\tstate\n\t\t\t))\n\t\t}\n\t\treturn value\n\t},\n\thas(state, prop) {\n\t\treturn prop in latest(state)\n\t},\n\townKeys(state) {\n\t\treturn Reflect.ownKeys(latest(state))\n\t},\n\tset(\n\t\tstate: ProxyObjectState,\n\t\tprop: string /* strictly not, but helps TS */,\n\t\tvalue\n\t) {\n\t\tconst desc = getDescriptorFromProto(latest(state), prop)\n\t\tif (desc?.set) {\n\t\t\t// special case: if this write is captured by a setter, we have\n\t\t\t// to trigger it with the correct context\n\t\t\tdesc.set.call(state.draft_, value)\n\t\t\treturn true\n\t\t}\n\t\tif (!state.modified_) {\n\t\t\t// the last check is because we need to be able to distinguish setting a non-existing to undefined (which is a change)\n\t\t\t// from setting an existing property with value undefined to undefined (which is not a change)\n\t\t\tconst current = peek(latest(state), prop)\n\t\t\t// special case, if we assigning the original value to a draft, we can ignore the assignment\n\t\t\tconst currentState: ProxyObjectState = current?.[DRAFT_STATE]\n\t\t\tif (currentState && currentState.base_ === value) {\n\t\t\t\tstate.copy_![prop] = value\n\t\t\t\tstate.assigned_[prop] = false\n\t\t\t\treturn true\n\t\t\t}\n\t\t\tif (is(value, current) && (value !== undefined || has(state.base_, prop)))\n\t\t\t\treturn true\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t}\n\n\t\tif (\n\t\t\t(state.copy_![prop] === value &&\n\t\t\t\t// special case: handle new props with value 'undefined'\n\t\t\t\t(value !== undefined || prop in state.copy_)) ||\n\t\t\t// special case: NaN\n\t\t\t(Number.isNaN(value) && Number.isNaN(state.copy_![prop]))\n\t\t)\n\t\t\treturn true\n\n\t\t// @ts-ignore\n\t\tstate.copy_![prop] = value\n\t\tstate.assigned_[prop] = true\n\t\treturn true\n\t},\n\tdeleteProperty(state, prop: string) {\n\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\tif (peek(state.base_, prop) !== undefined || prop in state.base_) {\n\t\t\tstate.assigned_[prop] = false\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t} else {\n\t\t\t// if an originally not assigned property was deleted\n\t\t\tdelete state.assigned_[prop]\n\t\t}\n\t\t// @ts-ignore\n\t\tif (state.copy_) delete state.copy_[prop]\n\t\treturn true\n\t},\n\t// Note: We never coerce `desc.value` into an Immer draft, because we can't make\n\t// the same guarantee in ES5 mode.\n\tgetOwnPropertyDescriptor(state, prop) {\n\t\tconst owner = latest(state)\n\t\tconst desc = Reflect.getOwnPropertyDescriptor(owner, prop)\n\t\tif (!desc) return desc\n\t\treturn {\n\t\t\twritable: true,\n\t\t\tconfigurable: state.type_ !== ProxyType.ProxyArray || prop !== \"length\",\n\t\t\tenumerable: desc.enumerable,\n\t\t\tvalue: owner[prop]\n\t\t}\n\t},\n\tdefineProperty() {\n\t\tdie(11)\n\t},\n\tgetPrototypeOf(state) {\n\t\treturn Object.getPrototypeOf(state.base_)\n\t},\n\tsetPrototypeOf() {\n\t\tdie(12)\n\t}\n}\n\n/**\n * Array drafts\n */\n\nconst arrayTraps: ProxyHandler<[ProxyArrayState]> = {}\neach(objectTraps, (key, fn) => {\n\t// @ts-ignore\n\tarrayTraps[key] = function() {\n\t\targuments[0] = arguments[0][0]\n\t\treturn fn.apply(this, arguments)\n\t}\n})\narrayTraps.deleteProperty = function(state, prop) {\n\tif (__DEV__ && isNaN(parseInt(prop as any))) die(13)\n\t// @ts-ignore\n\treturn arrayTraps.set!.call(this, state, prop, undefined)\n}\narrayTraps.set = function(state, prop, value) {\n\tif (__DEV__ && prop !== \"length\" && isNaN(parseInt(prop as any))) die(14)\n\treturn objectTraps.set!.call(this, state[0], prop, value, state[0])\n}\n\n// Access a property without creating an Immer draft.\nfunction peek(draft: Drafted, prop: PropertyKey) {\n\tconst state = draft[DRAFT_STATE]\n\tconst source = state ? latest(state) : draft\n\treturn source[prop]\n}\n\nfunction readPropFromProto(state: ImmerState, source: any, prop: PropertyKey) {\n\tconst desc = getDescriptorFromProto(source, prop)\n\treturn desc\n\t\t? `value` in desc\n\t\t\t? desc.value\n\t\t\t: // This is a very special case, if the prop is a getter defined by the\n\t\t\t  // prototype, we should invoke it with the draft as context!\n\t\t\t  desc.get?.call(state.draft_)\n\t\t: undefined\n}\n\nfunction getDescriptorFromProto(\n\tsource: any,\n\tprop: PropertyKey\n): PropertyDescriptor | undefined {\n\t// 'in' checks proto!\n\tif (!(prop in source)) return undefined\n\tlet proto = Object.getPrototypeOf(source)\n\twhile (proto) {\n\t\tconst desc = Object.getOwnPropertyDescriptor(proto, prop)\n\t\tif (desc) return desc\n\t\tproto = Object.getPrototypeOf(proto)\n\t}\n\treturn undefined\n}\n\nexport function markChanged(state: ImmerState) {\n\tif (!state.modified_) {\n\t\tstate.modified_ = true\n\t\tif (state.parent_) {\n\t\t\tmarkChanged(state.parent_)\n\t\t}\n\t}\n}\n\nexport function prepareCopy(state: {base_: any; copy_: any}) {\n\tif (!state.copy_) {\n\t\tstate.copy_ = shallowCopy(state.base_)\n\t}\n}\n","import {\n\tIProduceWithPatches,\n\tIProduce,\n\tImmerState,\n\tDrafted,\n\tisDraftable,\n\tprocessResult,\n\tPatch,\n\tObjectish,\n\tDRAFT_STATE,\n\tDraft,\n\tPatchListener,\n\tisDraft,\n\tisMap,\n\tisSet,\n\tcreateProxyProxy,\n\tgetPlugin,\n\tdie,\n\thasProxies,\n\tenterScope,\n\trevokeScope,\n\tleaveScope,\n\tusePatchesInScope,\n\tgetCurrentScope,\n\tNOTHING,\n\tfreeze,\n\tcurrent\n} from \"../internal\"\n\ninterface ProducersFns {\n\tproduce: IProduce\n\tproduceWithPatches: IProduceWithPatches\n}\n\nexport class Immer implements ProducersFns {\n\tuseProxies_: boolean = hasProxies\n\n\tautoFreeze_: boolean = true\n\n\tconstructor(config?: {useProxies?: boolean; autoFreeze?: boolean}) {\n\t\tif (typeof config?.useProxies === \"boolean\")\n\t\t\tthis.setUseProxies(config!.useProxies)\n\t\tif (typeof config?.autoFreeze === \"boolean\")\n\t\t\tthis.setAutoFreeze(config!.autoFreeze)\n\t}\n\n\t/**\n\t * The `produce` function takes a value and a \"recipe function\" (whose\n\t * return value often depends on the base state). The recipe function is\n\t * free to mutate its first argument however it wants. All mutations are\n\t * only ever applied to a __copy__ of the base state.\n\t *\n\t * Pass only a function to create a \"curried producer\" which relieves you\n\t * from passing the recipe function every time.\n\t *\n\t * Only plain objects and arrays are made mutable. All other objects are\n\t * considered uncopyable.\n\t *\n\t * Note: This function is __bound__ to its `Immer` instance.\n\t *\n\t * @param {any} base - the initial state\n\t * @param {Function} recipe - function that receives a proxy of the base state as first argument and which can be freely modified\n\t * @param {Function} patchListener - optional function that will be called with all the patches produced here\n\t * @returns {any} a new state, or the initial state if nothing was modified\n\t */\n\tproduce: IProduce = (base: any, recipe?: any, patchListener?: any) => {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\" && typeof recipe !== \"function\") {\n\t\t\tconst defaultBase = recipe\n\t\t\trecipe = base\n\n\t\t\tconst self = this\n\t\t\treturn function curriedProduce(\n\t\t\t\tthis: any,\n\t\t\t\tbase = defaultBase,\n\t\t\t\t...args: any[]\n\t\t\t) {\n\t\t\t\treturn self.produce(base, (draft: Drafted) => recipe.call(this, draft, ...args)) // prettier-ignore\n\t\t\t}\n\t\t}\n\n\t\tif (typeof recipe !== \"function\") die(6)\n\t\tif (patchListener !== undefined && typeof patchListener !== \"function\")\n\t\t\tdie(7)\n\n\t\tlet result\n\n\t\t// Only plain objects, arrays, and \"immerable classes\" are drafted.\n\t\tif (isDraftable(base)) {\n\t\t\tconst scope = enterScope(this)\n\t\t\tconst proxy = createProxy(this, base, undefined)\n\t\t\tlet hasError = true\n\t\t\ttry {\n\t\t\t\tresult = recipe(proxy)\n\t\t\t\thasError = false\n\t\t\t} finally {\n\t\t\t\t// finally instead of catch + rethrow better preserves original stack\n\t\t\t\tif (hasError) revokeScope(scope)\n\t\t\t\telse leaveScope(scope)\n\t\t\t}\n\t\t\tif (typeof Promise !== \"undefined\" && result instanceof Promise) {\n\t\t\t\treturn result.then(\n\t\t\t\t\tresult => {\n\t\t\t\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\t\t\t\treturn processResult(result, scope)\n\t\t\t\t\t},\n\t\t\t\t\terror => {\n\t\t\t\t\t\trevokeScope(scope)\n\t\t\t\t\t\tthrow error\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\treturn processResult(result, scope)\n\t\t} else if (!base || typeof base !== \"object\") {\n\t\t\tresult = recipe(base)\n\t\t\tif (result === undefined) result = base\n\t\t\tif (result === NOTHING) result = undefined\n\t\t\tif (this.autoFreeze_) freeze(result, true)\n\t\t\tif (patchListener) {\n\t\t\t\tconst p: Patch[] = []\n\t\t\t\tconst ip: Patch[] = []\n\t\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(base, result, p, ip)\n\t\t\t\tpatchListener(p, ip)\n\t\t\t}\n\t\t\treturn result\n\t\t} else die(21, base)\n\t}\n\n\tproduceWithPatches: IProduceWithPatches = (base: any, recipe?: any): any => {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\") {\n\t\t\treturn (state: any, ...args: any[]) =>\n\t\t\t\tthis.produceWithPatches(state, (draft: any) => base(draft, ...args))\n\t\t}\n\n\t\tlet patches: Patch[], inversePatches: Patch[]\n\t\tconst result = this.produce(base, recipe, (p: Patch[], ip: Patch[]) => {\n\t\t\tpatches = p\n\t\t\tinversePatches = ip\n\t\t})\n\n\t\tif (typeof Promise !== \"undefined\" && result instanceof Promise) {\n\t\t\treturn result.then(nextState => [nextState, patches!, inversePatches!])\n\t\t}\n\t\treturn [result, patches!, inversePatches!]\n\t}\n\n\tcreateDraft<T extends Objectish>(base: T): Draft<T> {\n\t\tif (!isDraftable(base)) die(8)\n\t\tif (isDraft(base)) base = current(base)\n\t\tconst scope = enterScope(this)\n\t\tconst proxy = createProxy(this, base, undefined)\n\t\tproxy[DRAFT_STATE].isManual_ = true\n\t\tleaveScope(scope)\n\t\treturn proxy as any\n\t}\n\n\tfinishDraft<D extends Draft<any>>(\n\t\tdraft: D,\n\t\tpatchListener?: PatchListener\n\t): D extends Draft<infer T> ? T : never {\n\t\tconst state: ImmerState = draft && (draft as any)[DRAFT_STATE]\n\t\tif (__DEV__) {\n\t\t\tif (!state || !state.isManual_) die(9)\n\t\t\tif (state.finalized_) die(10)\n\t\t}\n\t\tconst {scope_: scope} = state\n\t\tusePatchesInScope(scope, patchListener)\n\t\treturn processResult(undefined, scope)\n\t}\n\n\t/**\n\t * Pass true to automatically freeze all copies created by Immer.\n\t *\n\t * By default, auto-freezing is enabled.\n\t */\n\tsetAutoFreeze(value: boolean) {\n\t\tthis.autoFreeze_ = value\n\t}\n\n\t/**\n\t * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n\t * always faster than using ES5 proxies.\n\t *\n\t * By default, feature detection is used, so calling this is rarely necessary.\n\t */\n\tsetUseProxies(value: boolean) {\n\t\tif (value && !hasProxies) {\n\t\t\tdie(20)\n\t\t}\n\t\tthis.useProxies_ = value\n\t}\n\n\tapplyPatches<T extends Objectish>(base: T, patches: Patch[]): T {\n\t\t// If a patch replaces the entire state, take that replacement as base\n\t\t// before applying patches\n\t\tlet i: number\n\t\tfor (i = patches.length - 1; i >= 0; i--) {\n\t\t\tconst patch = patches[i]\n\t\t\tif (patch.path.length === 0 && patch.op === \"replace\") {\n\t\t\t\tbase = patch.value\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// If there was a patch that replaced the entire state, start from the\n\t\t// patch after that.\n\t\tif (i > -1) {\n\t\t\tpatches = patches.slice(i + 1)\n\t\t}\n\n\t\tconst applyPatchesImpl = getPlugin(\"Patches\").applyPatches_\n\t\tif (isDraft(base)) {\n\t\t\t// N.B: never hits if some patch a replacement, patches are never drafts\n\t\t\treturn applyPatchesImpl(base, patches)\n\t\t}\n\t\t// Otherwise, produce a copy of the base state.\n\t\treturn this.produce(base, (draft: Drafted) =>\n\t\t\tapplyPatchesImpl(draft, patches)\n\t\t)\n\t}\n}\n\nexport function createProxy<T extends Objectish>(\n\timmer: Immer,\n\tvalue: T,\n\tparent?: ImmerState\n): Drafted<T, ImmerState> {\n\t// precondition: createProxy should be guarded by isDraftable, so we know we can safely draft\n\tconst draft: Drafted = isMap(value)\n\t\t? getPlugin(\"MapSet\").proxyMap_(value, parent)\n\t\t: isSet(value)\n\t\t? getPlugin(\"MapSet\").proxySet_(value, parent)\n\t\t: immer.useProxies_\n\t\t? createProxyProxy(value, parent)\n\t\t: getPlugin(\"ES5\").createES5Proxy_(value, parent)\n\n\tconst scope = parent ? parent.scope_ : getCurrentScope()\n\tscope.drafts_.push(draft)\n\treturn draft\n}\n","import {\n\tdie,\n\tisDraft,\n\tshallowCopy,\n\teach,\n\tDRAFT_STATE,\n\tget,\n\tset,\n\tImmerState,\n\tisDraftable,\n\tArchtype,\n\tgetArchtype,\n\tgetPlugin\n} from \"../internal\"\n\n/** Takes a snapshot of the current state of a draft and finalizes it (but without freezing). This is a great utility to print the current state during debugging (no Proxies in the way). The output of current can also be safely leaked outside the producer. */\nexport function current<T>(value: T): T\nexport function current(value: any): any {\n\tif (!isDraft(value)) die(22, value)\n\treturn currentImpl(value)\n}\n\nfunction currentImpl(value: any): any {\n\tif (!isDraftable(value)) return value\n\tconst state: ImmerState | undefined = value[DRAFT_STATE]\n\tlet copy: any\n\tconst archType = getArchtype(value)\n\tif (state) {\n\t\tif (\n\t\t\t!state.modified_ &&\n\t\t\t(state.type_ < 4 || !getPlugin(\"ES5\").hasChanges_(state as any))\n\t\t)\n\t\t\treturn state.base_\n\t\t// Optimization: avoid generating new drafts during copying\n\t\tstate.finalized_ = true\n\t\tcopy = copyHelper(value, archType)\n\t\tstate.finalized_ = false\n\t} else {\n\t\tcopy = copyHelper(value, archType)\n\t}\n\n\teach(copy, (key, childValue) => {\n\t\tif (state && get(state.base_, key) === childValue) return // no need to copy or search in something that didn't change\n\t\tset(copy, key, currentImpl(childValue))\n\t})\n\t// In the future, we might consider freezing here, based on the current settings\n\treturn archType === Archtype.Set ? new Set(copy) : copy\n}\n\nfunction copyHelper(value: any, archType: number): any {\n\t// creates a shallow copy, even if it is a map or set\n\tswitch (archType) {\n\t\tcase Archtype.Map:\n\t\t\treturn new Map(value)\n\t\tcase Archtype.Set:\n\t\t\t// Set will be cloned as array temporarily, so that we can replace individual items\n\t\t\treturn Array.from(value)\n\t}\n\treturn shallowCopy(value)\n}\n","import {\n\tImmerState,\n\tDrafted,\n\tES5ArrayState,\n\tES5ObjectState,\n\teach,\n\thas,\n\tisDraft,\n\tlatest,\n\tDRAFT_STATE,\n\tis,\n\tloadPlugin,\n\tImmerScope,\n\tProxyType,\n\tgetCurrentScope,\n\tdie,\n\tmarkChanged,\n\tobjectTraps,\n\townKeys,\n\tgetOwnPropertyDescriptors\n} from \"../internal\"\n\ntype ES5State = ES5ArrayState | ES5ObjectState\n\nexport function enableES5() {\n\tfunction willFinalizeES5_(\n\t\tscope: ImmerScope,\n\t\tresult: any,\n\t\tisReplaced: boolean\n\t) {\n\t\tif (!isReplaced) {\n\t\t\tif (scope.patches_) {\n\t\t\t\tmarkChangesRecursively(scope.drafts_![0])\n\t\t\t}\n\t\t\t// This is faster when we don't care about which attributes changed.\n\t\t\tmarkChangesSweep(scope.drafts_)\n\t\t}\n\t\t// When a child draft is returned, look for changes.\n\t\telse if (\n\t\t\tisDraft(result) &&\n\t\t\t(result[DRAFT_STATE] as ES5State).scope_ === scope\n\t\t) {\n\t\t\tmarkChangesSweep(scope.drafts_)\n\t\t}\n\t}\n\n\tfunction createES5Draft(isArray: boolean, base: any) {\n\t\tif (isArray) {\n\t\t\tconst draft = new Array(base.length)\n\t\t\tfor (let i = 0; i < base.length; i++)\n\t\t\t\tObject.defineProperty(draft, \"\" + i, proxyProperty(i, true))\n\t\t\treturn draft\n\t\t} else {\n\t\t\tconst descriptors = getOwnPropertyDescriptors(base)\n\t\t\tdelete descriptors[DRAFT_STATE as any]\n\t\t\tconst keys = ownKeys(descriptors)\n\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\tconst key: any = keys[i]\n\t\t\t\tdescriptors[key] = proxyProperty(\n\t\t\t\t\tkey,\n\t\t\t\t\tisArray || !!descriptors[key].enumerable\n\t\t\t\t)\n\t\t\t}\n\t\t\treturn Object.create(Object.getPrototypeOf(base), descriptors)\n\t\t}\n\t}\n\n\tfunction createES5Proxy_<T>(\n\t\tbase: T,\n\t\tparent?: ImmerState\n\t): Drafted<T, ES5ObjectState | ES5ArrayState> {\n\t\tconst isArray = Array.isArray(base)\n\t\tconst draft = createES5Draft(isArray, base)\n\n\t\tconst state: ES5ObjectState | ES5ArrayState = {\n\t\t\ttype_: isArray ? ProxyType.ES5Array : (ProxyType.ES5Object as any),\n\t\t\tscope_: parent ? parent.scope_ : getCurrentScope(),\n\t\t\tmodified_: false,\n\t\t\tfinalized_: false,\n\t\t\tassigned_: {},\n\t\t\tparent_: parent,\n\t\t\t// base is the object we are drafting\n\t\t\tbase_: base,\n\t\t\t// draft is the draft object itself, that traps all reads and reads from either the base (if unmodified) or copy (if modified)\n\t\t\tdraft_: draft,\n\t\t\tcopy_: null,\n\t\t\trevoked_: false,\n\t\t\tisManual_: false\n\t\t}\n\n\t\tObject.defineProperty(draft, DRAFT_STATE, {\n\t\t\tvalue: state,\n\t\t\t// enumerable: false <- the default\n\t\t\twritable: true\n\t\t})\n\t\treturn draft\n\t}\n\n\t// property descriptors are recycled to make sure we don't create a get and set closure per property,\n\t// but share them all instead\n\tconst descriptors: {[prop: string]: PropertyDescriptor} = {}\n\n\tfunction proxyProperty(\n\t\tprop: string | number,\n\t\tenumerable: boolean\n\t): PropertyDescriptor {\n\t\tlet desc = descriptors[prop]\n\t\tif (desc) {\n\t\t\tdesc.enumerable = enumerable\n\t\t} else {\n\t\t\tdescriptors[prop] = desc = {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable,\n\t\t\t\tget(this: any) {\n\t\t\t\t\tconst state = this[DRAFT_STATE]\n\t\t\t\t\tif (__DEV__) assertUnrevoked(state)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\treturn objectTraps.get(state, prop)\n\t\t\t\t},\n\t\t\t\tset(this: any, value) {\n\t\t\t\t\tconst state = this[DRAFT_STATE]\n\t\t\t\t\tif (__DEV__) assertUnrevoked(state)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tobjectTraps.set(state, prop, value)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn desc\n\t}\n\n\t// This looks expensive, but only proxies are visited, and only objects without known changes are scanned.\n\tfunction markChangesSweep(drafts: Drafted<any, ImmerState>[]) {\n\t\t// The natural order of drafts in the `scope` array is based on when they\n\t\t// were accessed. By processing drafts in reverse natural order, we have a\n\t\t// better chance of processing leaf nodes first. When a leaf node is known to\n\t\t// have changed, we can avoid any traversal of its ancestor nodes.\n\t\tfor (let i = drafts.length - 1; i >= 0; i--) {\n\t\t\tconst state: ES5State = drafts[i][DRAFT_STATE]\n\t\t\tif (!state.modified_) {\n\t\t\t\tswitch (state.type_) {\n\t\t\t\t\tcase ProxyType.ES5Array:\n\t\t\t\t\t\tif (hasArrayChanges(state)) markChanged(state)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase ProxyType.ES5Object:\n\t\t\t\t\t\tif (hasObjectChanges(state)) markChanged(state)\n\t\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction markChangesRecursively(object: any) {\n\t\tif (!object || typeof object !== \"object\") return\n\t\tconst state: ES5State | undefined = object[DRAFT_STATE]\n\t\tif (!state) return\n\t\tconst {base_, draft_, assigned_, type_} = state\n\t\tif (type_ === ProxyType.ES5Object) {\n\t\t\t// Look for added keys.\n\t\t\t// probably there is a faster way to detect changes, as sweep + recurse seems to do some\n\t\t\t// unnecessary work.\n\t\t\t// also: probably we can store the information we detect here, to speed up tree finalization!\n\t\t\teach(draft_, key => {\n\t\t\t\tif ((key as any) === DRAFT_STATE) return\n\t\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\t\tif ((base_ as any)[key] === undefined && !has(base_, key)) {\n\t\t\t\t\tassigned_[key] = true\n\t\t\t\t\tmarkChanged(state)\n\t\t\t\t} else if (!assigned_[key]) {\n\t\t\t\t\t// Only untouched properties trigger recursion.\n\t\t\t\t\tmarkChangesRecursively(draft_[key])\n\t\t\t\t}\n\t\t\t})\n\t\t\t// Look for removed keys.\n\t\t\teach(base_, key => {\n\t\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\t\tif (draft_[key] === undefined && !has(draft_, key)) {\n\t\t\t\t\tassigned_[key] = false\n\t\t\t\t\tmarkChanged(state)\n\t\t\t\t}\n\t\t\t})\n\t\t} else if (type_ === ProxyType.ES5Array) {\n\t\t\tif (hasArrayChanges(state as ES5ArrayState)) {\n\t\t\t\tmarkChanged(state)\n\t\t\t\tassigned_.length = true\n\t\t\t}\n\n\t\t\tif (draft_.length < base_.length) {\n\t\t\t\tfor (let i = draft_.length; i < base_.length; i++) assigned_[i] = false\n\t\t\t} else {\n\t\t\t\tfor (let i = base_.length; i < draft_.length; i++) assigned_[i] = true\n\t\t\t}\n\n\t\t\t// Minimum count is enough, the other parts has been processed.\n\t\t\tconst min = Math.min(draft_.length, base_.length)\n\n\t\t\tfor (let i = 0; i < min; i++) {\n\t\t\t\t// Only untouched indices trigger recursion.\n\t\t\t\tif (!draft_.hasOwnProperty(i)) {\n\t\t\t\t\tassigned_[i] = true\n\t\t\t\t}\n\t\t\t\tif (assigned_[i] === undefined) markChangesRecursively(draft_[i])\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction hasObjectChanges(state: ES5ObjectState) {\n\t\tconst {base_, draft_} = state\n\n\t\t// Search for added keys and changed keys. Start at the back, because\n\t\t// non-numeric keys are ordered by time of definition on the object.\n\t\tconst keys = ownKeys(draft_)\n\t\tfor (let i = keys.length - 1; i >= 0; i--) {\n\t\t\tconst key: any = keys[i]\n\t\t\tif (key === DRAFT_STATE) continue\n\t\t\tconst baseValue = base_[key]\n\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\tif (baseValue === undefined && !has(base_, key)) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t\t// Once a base key is deleted, future changes go undetected, because its\n\t\t\t// descriptor is erased. This branch detects any missed changes.\n\t\t\telse {\n\t\t\t\tconst value = draft_[key]\n\t\t\t\tconst state: ImmerState = value && value[DRAFT_STATE]\n\t\t\t\tif (state ? state.base_ !== baseValue : !is(value, baseValue)) {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point, no keys were added or changed.\n\t\t// Compare key count to determine if keys were deleted.\n\t\tconst baseIsDraft = !!base_[DRAFT_STATE as any]\n\t\treturn keys.length !== ownKeys(base_).length + (baseIsDraft ? 0 : 1) // + 1 to correct for DRAFT_STATE\n\t}\n\n\tfunction hasArrayChanges(state: ES5ArrayState) {\n\t\tconst {draft_} = state\n\t\tif (draft_.length !== state.base_.length) return true\n\t\t// See #116\n\t\t// If we first shorten the length, our array interceptors will be removed.\n\t\t// If after that new items are added, result in the same original length,\n\t\t// those last items will have no intercepting property.\n\t\t// So if there is no own descriptor on the last position, we know that items were removed and added\n\t\t// N.B.: splice, unshift, etc only shift values around, but not prop descriptors, so we only have to check\n\t\t// the last one\n\t\t// last descriptor can be not a trap, if the array was extended\n\t\tconst descriptor = Object.getOwnPropertyDescriptor(\n\t\t\tdraft_,\n\t\t\tdraft_.length - 1\n\t\t)\n\t\t// descriptor can be null, but only for newly created sparse arrays, eg. new Array(10)\n\t\tif (descriptor && !descriptor.get) return true\n\t\t// if we miss a property, it has been deleted, so array probobaly changed\n\t\tfor (let i = 0; i < draft_.length; i++) {\n\t\t\tif (!draft_.hasOwnProperty(i)) return true\n\t\t}\n\t\t// For all other cases, we don't have to compare, as they would have been picked up by the index setters\n\t\treturn false\n\t}\n\n\tfunction hasChanges_(state: ES5State) {\n\t\treturn state.type_ === ProxyType.ES5Object\n\t\t\t? hasObjectChanges(state)\n\t\t\t: hasArrayChanges(state)\n\t}\n\n\tfunction assertUnrevoked(state: any /*ES5State | MapState | SetState*/) {\n\t\tif (state.revoked_) die(3, JSON.stringify(latest(state)))\n\t}\n\n\tloadPlugin(\"ES5\", {\n\t\tcreateES5Proxy_,\n\t\twillFinalizeES5_,\n\t\thasChanges_\n\t})\n}\n","import {immerable} from \"../immer\"\nimport {\n\tImmerState,\n\tPatch,\n\tSetState,\n\tES5ArrayState,\n\tProxyArrayState,\n\tMapState,\n\tES5ObjectState,\n\tProxyObjectState,\n\tPatchPath,\n\tget,\n\teach,\n\thas,\n\tgetArchtype,\n\tisSet,\n\tisMap,\n\tloadPlugin,\n\tProxyType,\n\tArchtype,\n\tdie,\n\tisDraft,\n\tisDraftable,\n\tNOTHING\n} from \"../internal\"\n\nexport function enablePatches() {\n\tconst REPLACE = \"replace\"\n\tconst ADD = \"add\"\n\tconst REMOVE = \"remove\"\n\n\tfunction generatePatches_(\n\t\tstate: ImmerState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tswitch (state.type_) {\n\t\t\tcase ProxyType.ProxyObject:\n\t\t\tcase ProxyType.ES5Object:\n\t\t\tcase ProxyType.Map:\n\t\t\t\treturn generatePatchesFromAssigned(\n\t\t\t\t\tstate,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t\tcase ProxyType.ES5Array:\n\t\t\tcase ProxyType.ProxyArray:\n\t\t\t\treturn generateArrayPatches(state, basePath, patches, inversePatches)\n\t\t\tcase ProxyType.Set:\n\t\t\t\treturn generateSetPatches(\n\t\t\t\t\t(state as any) as SetState,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t}\n\t}\n\n\tfunction generateArrayPatches(\n\t\tstate: ES5ArrayState | ProxyArrayState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, assigned_} = state\n\t\tlet copy_ = state.copy_!\n\n\t\t// Reduce complexity by ensuring `base` is never longer.\n\t\tif (copy_.length < base_.length) {\n\t\t\t// @ts-ignore\n\t\t\t;[base_, copy_] = [copy_, base_]\n\t\t\t;[patches, inversePatches] = [inversePatches, patches]\n\t\t}\n\n\t\t// Process replaced indices.\n\t\tfor (let i = 0; i < base_.length; i++) {\n\t\t\tif (assigned_[i] && copy_[i] !== base_[i]) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t\t})\n\t\t\t\tinversePatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(base_[i])\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\t// Process added indices.\n\t\tfor (let i = base_.length; i < copy_.length; i++) {\n\t\t\tconst path = basePath.concat([i])\n\t\t\tpatches.push({\n\t\t\t\top: ADD,\n\t\t\t\tpath,\n\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t})\n\t\t}\n\t\tif (base_.length < copy_.length) {\n\t\t\tinversePatches.push({\n\t\t\t\top: REPLACE,\n\t\t\t\tpath: basePath.concat([\"length\"]),\n\t\t\t\tvalue: base_.length\n\t\t\t})\n\t\t}\n\t}\n\n\t// This is used for both Map objects and normal objects.\n\tfunction generatePatchesFromAssigned(\n\t\tstate: MapState | ES5ObjectState | ProxyObjectState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tconst {base_, copy_} = state\n\t\teach(state.assigned_!, (key, assignedValue) => {\n\t\t\tconst origValue = get(base_, key)\n\t\t\tconst value = get(copy_!, key)\n\t\t\tconst op = !assignedValue ? REMOVE : has(base_, key) ? REPLACE : ADD\n\t\t\tif (origValue === value && op === REPLACE) return\n\t\t\tconst path = basePath.concat(key as any)\n\t\t\tpatches.push(op === REMOVE ? {op, path} : {op, path, value})\n\t\t\tinversePatches.push(\n\t\t\t\top === ADD\n\t\t\t\t\t? {op: REMOVE, path}\n\t\t\t\t\t: op === REMOVE\n\t\t\t\t\t? {op: ADD, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t\t\t: {op: REPLACE, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t)\n\t\t})\n\t}\n\n\tfunction generateSetPatches(\n\t\tstate: SetState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, copy_} = state\n\n\t\tlet i = 0\n\t\tbase_.forEach((value: any) => {\n\t\t\tif (!copy_!.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t\ti = 0\n\t\tcopy_!.forEach((value: any) => {\n\t\t\tif (!base_.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t}\n\n\tfunction generateReplacementPatches_(\n\t\tbaseValue: any,\n\t\treplacement: any,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tpatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: replacement === NOTHING ? undefined : replacement\n\t\t})\n\t\tinversePatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: baseValue\n\t\t})\n\t}\n\n\tfunction applyPatches_<T>(draft: T, patches: Patch[]): T {\n\t\tpatches.forEach(patch => {\n\t\t\tconst {path, op} = patch\n\n\t\t\tlet base: any = draft\n\t\t\tfor (let i = 0; i < path.length - 1; i++) {\n\t\t\t\tconst parentType = getArchtype(base)\n\t\t\t\tlet p = path[i]\n\t\t\t\tif (typeof p !== \"string\" && typeof p !== \"number\") {\n\t\t\t\t\tp = \"\" + p\n\t\t\t\t}\n\n\t\t\t\t// See #738, avoid prototype pollution\n\t\t\t\tif (\n\t\t\t\t\t(parentType === Archtype.Object || parentType === Archtype.Array) &&\n\t\t\t\t\t(p === \"__proto__\" || p === \"constructor\")\n\t\t\t\t)\n\t\t\t\t\tdie(24)\n\t\t\t\tif (typeof base === \"function\" && p === \"prototype\") die(24)\n\t\t\t\tbase = get(base, p)\n\t\t\t\tif (typeof base !== \"object\") die(15, path.join(\"/\"))\n\t\t\t}\n\n\t\t\tconst type = getArchtype(base)\n\t\t\tconst value = deepClonePatchValue(patch.value) // used to clone patch to ensure original patch is not modified, see #411\n\t\t\tconst key = path[path.length - 1]\n\t\t\tswitch (op) {\n\t\t\t\tcase REPLACE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase Archtype.Map:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\t\tcase Archtype.Set:\n\t\t\t\t\t\t\tdie(16)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// if value is an object, then it's assigned by reference\n\t\t\t\t\t\t\t// in the following add or remove ops, the value field inside the patch will also be modifyed\n\t\t\t\t\t\t\t// so we use value from the cloned patch\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase ADD:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase Archtype.Array:\n\t\t\t\t\t\t\treturn key === \"-\"\n\t\t\t\t\t\t\t\t? base.push(value)\n\t\t\t\t\t\t\t\t: base.splice(key as any, 0, value)\n\t\t\t\t\t\tcase Archtype.Map:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\tcase Archtype.Set:\n\t\t\t\t\t\t\treturn base.add(value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase REMOVE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase Archtype.Array:\n\t\t\t\t\t\t\treturn base.splice(key as any, 1)\n\t\t\t\t\t\tcase Archtype.Map:\n\t\t\t\t\t\t\treturn base.delete(key)\n\t\t\t\t\t\tcase Archtype.Set:\n\t\t\t\t\t\t\treturn base.delete(patch.value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn delete base[key]\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tdie(17, op)\n\t\t\t}\n\t\t})\n\n\t\treturn draft\n\t}\n\n\t// optimize: this is quite a performance hit, can we detect intelligently when it is needed?\n\t// E.g. auto-draft when new objects from outside are assigned and modified?\n\t// (See failing test when deepClone just returns obj)\n\tfunction deepClonePatchValue<T>(obj: T): T\n\tfunction deepClonePatchValue(obj: any) {\n\t\tif (!isDraftable(obj)) return obj\n\t\tif (Array.isArray(obj)) return obj.map(deepClonePatchValue)\n\t\tif (isMap(obj))\n\t\t\treturn new Map(\n\t\t\t\tArray.from(obj.entries()).map(([k, v]) => [k, deepClonePatchValue(v)])\n\t\t\t)\n\t\tif (isSet(obj)) return new Set(Array.from(obj).map(deepClonePatchValue))\n\t\tconst cloned = Object.create(Object.getPrototypeOf(obj))\n\t\tfor (const key in obj) cloned[key] = deepClonePatchValue(obj[key])\n\t\tif (has(obj, immerable)) cloned[immerable] = obj[immerable]\n\t\treturn cloned\n\t}\n\n\tfunction clonePatchValueIfNeeded<T>(obj: T): T {\n\t\tif (isDraft(obj)) {\n\t\t\treturn deepClonePatchValue(obj)\n\t\t} else return obj\n\t}\n\n\tloadPlugin(\"Patches\", {\n\t\tapplyPatches_,\n\t\tgeneratePatches_,\n\t\tgenerateReplacementPatches_\n\t})\n}\n","// types only!\nimport {\n\tImmerState,\n\tAnyMap,\n\tAnySet,\n\tMapState,\n\tSetState,\n\tDRAFT_STATE,\n\tgetCurrentScope,\n\tlatest,\n\titeratorSymbol,\n\tisDraftable,\n\tcreateProxy,\n\tloadPlugin,\n\tmarkChanged,\n\tProxyType,\n\tdie,\n\teach\n} from \"../internal\"\n\nexport function enableMapSet() {\n\t/* istanbul ignore next */\n\tvar extendStatics = function(d: any, b: any): any {\n\t\textendStatics =\n\t\t\tObject.setPrototypeOf ||\n\t\t\t({__proto__: []} instanceof Array &&\n\t\t\t\tfunction(d, b) {\n\t\t\t\t\td.__proto__ = b\n\t\t\t\t}) ||\n\t\t\tfunction(d, b) {\n\t\t\t\tfor (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]\n\t\t\t}\n\t\treturn extendStatics(d, b)\n\t}\n\n\t// Ugly hack to resolve #502 and inherit built in Map / Set\n\tfunction __extends(d: any, b: any): any {\n\t\textendStatics(d, b)\n\t\tfunction __(this: any): any {\n\t\t\tthis.constructor = d\n\t\t}\n\t\td.prototype =\n\t\t\t// @ts-ignore\n\t\t\t((__.prototype = b.prototype), new __())\n\t}\n\n\tconst DraftMap = (function(_super) {\n\t\t__extends(DraftMap, _super)\n\t\t// Create class manually, cause #502\n\t\tfunction DraftMap(this: any, target: AnyMap, parent?: ImmerState): any {\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ProxyType.Map,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tassigned_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this as any,\n\t\t\t\tisManual_: false,\n\t\t\t\trevoked_: false\n\t\t\t} as MapState\n\t\t\treturn this\n\t\t}\n\t\tconst p = DraftMap.prototype\n\n\t\tObject.defineProperty(p, \"size\", {\n\t\t\tget: function() {\n\t\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t\t}\n\t\t\t// enumerable: false,\n\t\t\t// configurable: true\n\t\t})\n\n\t\tp.has = function(key: any): boolean {\n\t\t\treturn latest(this[DRAFT_STATE]).has(key)\n\t\t}\n\n\t\tp.set = function(key: any, value: any) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (!latest(state).has(key) || latest(state).get(key) !== value) {\n\t\t\t\tprepareMapCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t\tstate.copy_!.set(key, value)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tp.delete = function(key: any): boolean {\n\t\t\tif (!this.has(key)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareMapCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\tif (state.base_.has(key)) {\n\t\t\t\tstate.assigned_!.set(key, false)\n\t\t\t} else {\n\t\t\t\tstate.assigned_!.delete(key)\n\t\t\t}\n\t\t\tstate.copy_!.delete(key)\n\t\t\treturn true\n\t\t}\n\n\t\tp.clear = function() {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (latest(state).size) {\n\t\t\t\tprepareMapCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.assigned_ = new Map()\n\t\t\t\teach(state.base_, key => {\n\t\t\t\t\tstate.assigned_!.set(key, false)\n\t\t\t\t})\n\t\t\t\tstate.copy_!.clear()\n\t\t\t}\n\t\t}\n\n\t\tp.forEach = function(\n\t\t\tcb: (value: any, key: any, self: any) => void,\n\t\t\tthisArg?: any\n\t\t) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tlatest(state).forEach((_value: any, key: any, _map: any) => {\n\t\t\t\tcb.call(thisArg, this.get(key), key, this)\n\t\t\t})\n\t\t}\n\n\t\tp.get = function(key: any): any {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tconst value = latest(state).get(key)\n\t\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\t\treturn value\n\t\t\t}\n\t\t\tif (value !== state.base_.get(key)) {\n\t\t\t\treturn value // either already drafted or reassigned\n\t\t\t}\n\t\t\t// despite what it looks, this creates a draft only once, see above condition\n\t\t\tconst draft = createProxy(state.scope_.immer_, value, state)\n\t\t\tprepareMapCopy(state)\n\t\t\tstate.copy_!.set(key, draft)\n\t\t\treturn draft\n\t\t}\n\n\t\tp.keys = function(): IterableIterator<any> {\n\t\t\treturn latest(this[DRAFT_STATE]).keys()\n\t\t}\n\n\t\tp.values = function(): IterableIterator<any> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[iteratorSymbol]: () => this.values(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\tp.entries = function(): IterableIterator<[any, any]> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[iteratorSymbol]: () => this.entries(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue: [r.value, value]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\tp[iteratorSymbol] = function() {\n\t\t\treturn this.entries()\n\t\t}\n\n\t\treturn DraftMap\n\t})(Map)\n\n\tfunction proxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftMap(target, parent)\n\t}\n\n\tfunction prepareMapCopy(state: MapState) {\n\t\tif (!state.copy_) {\n\t\t\tstate.assigned_ = new Map()\n\t\t\tstate.copy_ = new Map(state.base_)\n\t\t}\n\t}\n\n\tconst DraftSet = (function(_super) {\n\t\t__extends(DraftSet, _super)\n\t\t// Create class manually, cause #502\n\t\tfunction DraftSet(this: any, target: AnySet, parent?: ImmerState) {\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ProxyType.Set,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this,\n\t\t\t\tdrafts_: new Map(),\n\t\t\t\trevoked_: false,\n\t\t\t\tisManual_: false\n\t\t\t} as SetState\n\t\t\treturn this\n\t\t}\n\t\tconst p = DraftSet.prototype\n\n\t\tObject.defineProperty(p, \"size\", {\n\t\t\tget: function() {\n\t\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t\t}\n\t\t\t// enumerable: true,\n\t\t})\n\n\t\tp.has = function(value: any): boolean {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\t// bit of trickery here, to be able to recognize both the value, and the draft of its value\n\t\t\tif (!state.copy_) {\n\t\t\t\treturn state.base_.has(value)\n\t\t\t}\n\t\t\tif (state.copy_.has(value)) return true\n\t\t\tif (state.drafts_.has(value) && state.copy_.has(state.drafts_.get(value)))\n\t\t\t\treturn true\n\t\t\treturn false\n\t\t}\n\n\t\tp.add = function(value: any): any {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (!this.has(value)) {\n\t\t\t\tprepareSetCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.copy_!.add(value)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tp.delete = function(value: any): any {\n\t\t\tif (!this.has(value)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\treturn (\n\t\t\t\tstate.copy_!.delete(value) ||\n\t\t\t\t(state.drafts_.has(value)\n\t\t\t\t\t? state.copy_!.delete(state.drafts_.get(value))\n\t\t\t\t\t: /* istanbul ignore next */ false)\n\t\t\t)\n\t\t}\n\n\t\tp.clear = function() {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (latest(state).size) {\n\t\t\t\tprepareSetCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.copy_!.clear()\n\t\t\t}\n\t\t}\n\n\t\tp.values = function(): IterableIterator<any> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.values()\n\t\t}\n\n\t\tp.entries = function entries(): IterableIterator<[any, any]> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.entries()\n\t\t}\n\n\t\tp.keys = function(): IterableIterator<any> {\n\t\t\treturn this.values()\n\t\t}\n\n\t\tp[iteratorSymbol] = function() {\n\t\t\treturn this.values()\n\t\t}\n\n\t\tp.forEach = function forEach(cb: any, thisArg?: any) {\n\t\t\tconst iterator = this.values()\n\t\t\tlet result = iterator.next()\n\t\t\twhile (!result.done) {\n\t\t\t\tcb.call(thisArg, result.value, result.value, this)\n\t\t\t\tresult = iterator.next()\n\t\t\t}\n\t\t}\n\n\t\treturn DraftSet\n\t})(Set)\n\n\tfunction proxySet_<T extends AnySet>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftSet(target, parent)\n\t}\n\n\tfunction prepareSetCopy(state: SetState) {\n\t\tif (!state.copy_) {\n\t\t\t// create drafts for all entries to preserve insertion order\n\t\t\tstate.copy_ = new Set()\n\t\t\tstate.base_.forEach(value => {\n\t\t\t\tif (isDraftable(value)) {\n\t\t\t\t\tconst draft = createProxy(state.scope_.immer_, value, state)\n\t\t\t\t\tstate.drafts_.set(value, draft)\n\t\t\t\t\tstate.copy_!.add(draft)\n\t\t\t\t} else {\n\t\t\t\t\tstate.copy_!.add(value)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tfunction assertUnrevoked(state: any /*ES5State | MapState | SetState*/) {\n\t\tif (state.revoked_) die(3, JSON.stringify(latest(state)))\n\t}\n\n\tloadPlugin(\"MapSet\", {proxyMap_, proxySet_})\n}\n","import {enableES5} from \"./es5\"\nimport {enableMapSet} from \"./mapset\"\nimport {enablePatches} from \"./patches\"\n\nexport function enableAllPlugins() {\n\tenableES5()\n\tenableMapSet()\n\tenablePatches()\n}\n","import {\n\tIProduce,\n\tIProduceWithPatches,\n\tImmer,\n\tDraft,\n\tImmutable\n} from \"./internal\"\n\nexport {\n\tDraft,\n\tImmutable,\n\tPatch,\n\tPatchListener,\n\toriginal,\n\tcurrent,\n\tisDraft,\n\tisDraftable,\n\tNOTHING as nothing,\n\tDRAFTABLE as immerable,\n\tfreeze\n} from \"./internal\"\n\nconst immer = new Immer()\n\n/**\n * The `produce` function takes a value and a \"recipe function\" (whose\n * return value often depends on the base state). The recipe function is\n * free to mutate its first argument however it wants. All mutations are\n * only ever applied to a __copy__ of the base state.\n *\n * Pass only a function to create a \"curried producer\" which relieves you\n * from passing the recipe function every time.\n *\n * Only plain objects and arrays are made mutable. All other objects are\n * considered uncopyable.\n *\n * Note: This function is __bound__ to its `Immer` instance.\n *\n * @param {any} base - the initial state\n * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n * @param {Function} patchListener - optional function that will be called with all the patches produced here\n * @returns {any} a new state, or the initial state if nothing was modified\n */\nexport const produce: IProduce = immer.produce\nexport default produce\n\n/**\n * Like `produce`, but `produceWithPatches` always returns a tuple\n * [nextState, patches, inversePatches] (instead of just the next state)\n */\nexport const produceWithPatches: IProduceWithPatches = immer.produceWithPatches.bind(\n\timmer\n)\n\n/**\n * Pass true to automatically freeze all copies created by Immer.\n *\n * Always freeze by default, even in production mode\n */\nexport const setAutoFreeze = immer.setAutoFreeze.bind(immer)\n\n/**\n * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n * always faster than using ES5 proxies.\n *\n * By default, feature detection is used, so calling this is rarely necessary.\n */\nexport const setUseProxies = immer.setUseProxies.bind(immer)\n\n/**\n * Apply an array of Immer patches to the first argument.\n *\n * This function is a producer, which means copy-on-write is in effect.\n */\nexport const applyPatches = immer.applyPatches.bind(immer)\n\n/**\n * Create an Immer draft from the given base state, which may be a draft itself.\n * The draft can be modified until you finalize it with the `finishDraft` function.\n */\nexport const createDraft = immer.createDraft.bind(immer)\n\n/**\n * Finalize an Immer draft from a `createDraft` call, returning the base state\n * (if no changes were made) or a modified copy. The draft must *not* be\n * mutated afterwards.\n *\n * Pass a function as the 2nd argument to generate Immer patches based on the\n * changes that were made.\n */\nexport const finishDraft = immer.finishDraft.bind(immer)\n\n/**\n * This function is actually a no-op, but can be used to cast an immutable type\n * to an draft type and make TypeScript happy\n *\n * @param value\n */\nexport function castDraft<T>(value: T): Draft<T> {\n\treturn value as any\n}\n\n/**\n * This function is actually a no-op, but can be used to cast a mutable type\n * to an immutable type and make TypeScript happy\n * @param value\n */\nexport function castImmutable<T>(value: T): Immutable<T> {\n\treturn value as any\n}\n\nexport {Immer}\n\nexport {enableES5} from \"./plugins/es5\"\nexport {enablePatches} from \"./plugins/patches\"\nexport {enableMapSet} from \"./plugins/mapset\"\nexport {enableAllPlugins} from \"./plugins/all\"\n","// Should be no imports here!\n\n// Some things that should be evaluated before all else...\n\n// We only want to know if non-polyfilled symbols are available\nconst hasSymbol =\n\ttypeof Symbol !== \"undefined\" && typeof Symbol(\"x\") === \"symbol\"\nexport const hasMap = typeof Map !== \"undefined\"\nexport const hasSet = typeof Set !== \"undefined\"\nexport const hasProxies =\n\ttypeof Proxy !== \"undefined\" &&\n\ttypeof Proxy.revocable !== \"undefined\" &&\n\ttypeof Reflect !== \"undefined\"\n\n/**\n * The sentinel value returned by producers to replace the draft with undefined.\n */\nexport const NOTHING: Nothing = hasSymbol\n\t? Symbol.for(\"immer-nothing\")\n\t: ({[\"immer-nothing\"]: true} as any)\n\n/**\n * To let Immer treat your class instances as plain immutable objects\n * (albeit with a custom prototype), you must define either an instance property\n * or a static property on each of your custom classes.\n *\n * Otherwise, your class instance will never be drafted, which means it won't be\n * safe to mutate in a produce callback.\n */\nexport const DRAFTABLE: unique symbol = hasSymbol\n\t? Symbol.for(\"immer-draftable\")\n\t: (\"__$immer_draftable\" as any)\n\nexport const DRAFT_STATE: unique symbol = hasSymbol\n\t? Symbol.for(\"immer-state\")\n\t: (\"__$immer_state\" as any)\n\n// Even a polyfilled Symbol might provide Symbol.iterator\nexport const iteratorSymbol: typeof Symbol.iterator =\n\t(typeof Symbol != \"undefined\" && Symbol.iterator) || (\"@@iterator\" as any)\n\n/** Use a class type for `nothing` so its type is unique */\nexport class Nothing {\n\t// This lets us do `Exclude<T, Nothing>`\n\t// @ts-ignore\n\tprivate _!: unique symbol\n}\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction shallow(objA, objB) {\n  if (Object.is(objA, objB)) {\n    return true;\n  }\n\n  if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n\n  if (keysA.length !== Object.keys(objB).length) {\n    return false;\n  }\n\n  for (var i = 0; i < keysA.length; i++) {\n    if (!Object.prototype.hasOwnProperty.call(objB, keysA[i]) || !Object.is(objA[keysA[i]], objB[keysA[i]])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexports.default = shallow;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction create(createState) {\n  var state;\n  var listeners = new Set();\n\n  var setState = function setState(partial, replace) {\n    var nextState = typeof partial === 'function' ? partial(state) : partial;\n\n    if (nextState !== state) {\n      var _previousState = state;\n      state = replace ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach(function (listener) {\n        return listener(state, _previousState);\n      });\n    }\n  };\n\n  var getState = function getState() {\n    return state;\n  };\n\n  var subscribeWithSelector = function subscribeWithSelector(listener, selector, equalityFn) {\n    if (selector === void 0) {\n      selector = getState;\n    }\n\n    if (equalityFn === void 0) {\n      equalityFn = Object.is;\n    }\n\n    var currentSlice = selector(state);\n\n    function listenerToAdd() {\n      var nextSlice = selector(state);\n\n      if (!equalityFn(currentSlice, nextSlice)) {\n        var _previousSlice = currentSlice;\n        listener(currentSlice = nextSlice, _previousSlice);\n      }\n    }\n\n    listeners.add(listenerToAdd);\n    return function () {\n      return listeners.delete(listenerToAdd);\n    };\n  };\n\n  var subscribe = function subscribe(listener, selector, equalityFn) {\n    if (selector || equalityFn) {\n      return subscribeWithSelector(listener, selector, equalityFn);\n    }\n\n    listeners.add(listener);\n    return function () {\n      return listeners.delete(listener);\n    };\n  };\n\n  var destroy = function destroy() {\n    return listeners.clear();\n  };\n\n  var api = {\n    setState: setState,\n    getState: getState,\n    subscribe: subscribe,\n    destroy: destroy\n  };\n  state = createState(setState, getState, api);\n  return api;\n}\n\nexports.default = create;\n",null,"import adapter from 'webrtc-adapter';\nimport './utils/local-storage-polyfill';\nimport HMSLogger from './utils/logger';\n\nHMSLogger.i('adapter', `${adapter.browserDetails.browser} v${adapter.browserDetails.version}`);\n\nexport * from './sdk';\nexport * from './media/tracks';\nexport * from './utils/media';\nexport * from './utils/device-error';\nexport * from './utils/support';\nexport * from './error/HMSException';\nexport * from './interfaces';\nexport * from './rtc-stats';\nexport * from './plugins';\nexport * from './utils/logger';\n","import { UAParser } from 'ua-parser-js';\nimport { v4 as uuid } from 'uuid';\nimport { LocalStorage } from './local-storage';\n\nexport const parsedUserAgent = new UAParser();\n\nexport const isNode =\n  typeof window === 'undefined' && !parsedUserAgent.getBrowser().name?.toLowerCase().includes('electron');\n\nexport const isBrowser = typeof window !== 'undefined';\n\nexport enum ENV {\n  PROD = 'prod',\n  QA = 'qa',\n  DEV = 'dev',\n}\n\nconst checkIsSupported = () => {\n  if (isNode) {\n    return false;\n  }\n  // @TODO: Get this from preview/init API from server\n  return true;\n};\n\nexport const isSupported = checkIsSupported();\n\nexport const isMobile = () => parsedUserAgent.getDevice().type === 'mobile';\n\nexport const getAnalyticsDeviceId = () => {\n  let id;\n  const storage = new LocalStorage<string>('hms-analytics-deviceId');\n  const storageId = storage.get();\n  if (storageId) {\n    id = storageId;\n  } else {\n    id = uuid();\n    storage.set(id);\n  }\n  return id;\n};\n\nexport const isPageHidden = () => typeof document !== 'undefined' && document.hidden;\n\nexport const isIOS = () => parsedUserAgent.getOS().name?.toLowerCase() === 'ios';\n","import { initializeLocalstoragePolyfill } from './local-storage-polyfill';\nimport { isBrowser } from './support';\n\nexport class LocalStorage<T> {\n  private storage: Storage | null = null;\n\n  constructor(public readonly key: string) {}\n\n  /**\n   * localstorage is not available in SSR, so get it only at time of use\n   */\n  getStorage() {\n    if (isBrowser && !this.storage) {\n      initializeLocalstoragePolyfill();\n      this.storage = window.localStorage;\n    }\n    return this.storage;\n  }\n\n  get(): T | undefined {\n    const stringItem = this.getStorage()?.getItem(this.key);\n    if (!stringItem) {\n      return;\n    }\n    const item = JSON.parse(stringItem) as T;\n    return item;\n  }\n\n  set(value: T) {\n    const stringValue = JSON.stringify(value);\n    this.getStorage()?.setItem(this.key, stringValue);\n  }\n\n  clear() {\n    this.getStorage()?.removeItem(this.key);\n  }\n}\n","import { isBrowser } from './support';\n\nclass LocalStorage {\n  valuesMap = new Map();\n  getItem(key: string) {\n    if (this.valuesMap.has(key)) {\n      return String(this.valuesMap.get(key));\n    }\n    return null;\n  }\n\n  setItem(key: string, val: string) {\n    this.valuesMap.set(key, val);\n  }\n\n  removeItem(key: string) {\n    this.valuesMap.delete(key);\n  }\n\n  clear() {\n    this.valuesMap.clear();\n  }\n\n  key(i: number) {\n    if (arguments.length === 0) {\n      throw new TypeError(\"Failed to execute 'key' on 'Storage': 1 argument required, but only 0 present.\"); // this is a TypeError implemented on Chrome, Firefox throws Not enough arguments to Storage.key.\n    }\n    const arr = Array.from(this.valuesMap.keys());\n    return arr[i];\n  }\n\n  get length() {\n    return this.valuesMap.size;\n  }\n}\n\nexport const initializeLocalstoragePolyfill = () => {\n  if (isBrowser && !localStorage) {\n    window.localStorage = new LocalStorage();\n  }\n};\n","export enum HMSLogLevel {\n  VERBOSE,\n  DEBUG,\n  INFO,\n  WARN,\n  TIME,\n  TIMEEND,\n  ERROR,\n  NONE,\n}\n\n// @ts-ignore - window.expect is available only when in test environment\nconst isTestEnv = typeof window !== 'undefined' && typeof window.expect !== 'undefined';\n/**\n * TODO: fix this so logs show the real file and line numbers where they originated from instead of this class\n * https://stackoverflow.com/questions/13815640/a-proper-wrapper-for-console-log-with-correct-line-number\n */\nexport default class HMSLogger {\n  static level: HMSLogLevel = isTestEnv ? HMSLogLevel.NONE : HMSLogLevel.VERBOSE;\n\n  static v(tag: string, ...data: any[]) {\n    this.log(HMSLogLevel.VERBOSE, tag, ...data);\n  }\n\n  static d(tag: string, ...data: any[]) {\n    this.log(HMSLogLevel.DEBUG, tag, ...data);\n  }\n\n  static i(tag: string, ...data: any[]) {\n    this.log(HMSLogLevel.INFO, tag, ...data);\n  }\n\n  static w(tag: string, ...data: any[]) {\n    this.log(HMSLogLevel.WARN, tag, ...data);\n  }\n\n  static e(tag: string, ...data: any[]) {\n    this.log(HMSLogLevel.ERROR, tag, ...data);\n  }\n\n  static time(mark: string) {\n    this.log(HMSLogLevel.TIME, '[HMSPerformanceTiming]', mark);\n  }\n\n  static timeEnd(mark: string) {\n    this.log(HMSLogLevel.TIMEEND, '[HMSPerformanceTiming]', mark, mark);\n  }\n\n  static cleanUp() {\n    performance.clearMarks();\n    performance.clearMeasures();\n  }\n\n  // eslint-disable-next-line complexity\n  private static log(level: HMSLogLevel, tag: string, ...data: any[]) {\n    if (this.level.valueOf() > level.valueOf()) {\n      return;\n    }\n\n    switch (level) {\n      case HMSLogLevel.VERBOSE: {\n        console.log(tag, ...data);\n        break;\n      }\n      case HMSLogLevel.DEBUG: {\n        console.debug(tag, ...data);\n        break;\n      }\n      case HMSLogLevel.INFO: {\n        console.info(tag, ...data);\n        break;\n      }\n      case HMSLogLevel.WARN: {\n        console.warn(tag, ...data);\n        break;\n      }\n      case HMSLogLevel.ERROR: {\n        console.error(tag, ...data);\n        break;\n      }\n      case HMSLogLevel.TIME: {\n        performance.mark(data[0]);\n        break;\n      }\n      case HMSLogLevel.TIMEEND: {\n        const mark = data[0];\n        try {\n          const entry = performance.measure(mark, mark);\n          // @ts-ignore\n          this.log(HMSLogLevel.DEBUG, tag, mark, entry?.duration);\n          performance.clearMarks(mark);\n          performance.clearMeasures(mark);\n        } catch (error) {\n          this.log(HMSLogLevel.DEBUG, tag, mark, error);\n        }\n        break;\n      }\n    }\n  }\n}\n","import { HMSPeer } from './peer';\nimport { HMSRole } from '../../interfaces';\nimport { HMSMessage } from '../../interfaces/message';\nimport { SendMessage } from '../../notification-manager';\nimport { ISignalParamsProvider } from '../../signal/ISignalSendParamsProvider';\n\nexport default class Message implements HMSMessage, ISignalParamsProvider<SendMessage> {\n  sender?: HMSPeer;\n  recipientPeer?: HMSPeer;\n  recipientRoles?: HMSRole[];\n  message: any;\n  time: Date;\n  type: string;\n\n  constructor({ sender, message, type = 'chat', recipientPeer, recipientRoles, time }: HMSMessage) {\n    this.sender = sender;\n    this.message = message;\n    this.type = type;\n    this.recipientPeer = recipientPeer;\n    this.recipientRoles = recipientRoles;\n    this.time = time;\n  }\n\n  toSignalParams() {\n    const roles = this.recipientRoles?.map(role => role.name);\n    const peer = this.recipientPeer?.peerId;\n    const sendParams: SendMessage = {\n      info: {\n        message: this.message,\n        type: this.type,\n      },\n    };\n    if (roles?.length) {\n      sendParams.roles = roles;\n    }\n    if (peer) {\n      sendParams.peer_id = peer;\n    }\n    return sendParams;\n  }\n\n  toString() {\n    return `{\n      sender: ${this.sender};\n      recipientPeer: ${this.recipientPeer};\n      recipientRoles: ${this.recipientRoles?.map(role => role.name)};\n      message: ${this.message};\n      time: ${this.time};\n      type: ${this.type};\n    }`;\n  }\n}\n","import { HMSHLS, HMSRecording, HMSRoom, HMSRTMP } from '../../interfaces/room';\nimport { IStore } from '../store/IStore';\n\nexport default class Room implements HMSRoom {\n  sessionId?: string;\n  startedAt?: Date;\n  recording: HMSRecording = { server: { running: false }, browser: { running: false }, hls: { running: false } };\n  rtmp: HMSRTMP = { running: false };\n  hls: HMSHLS = { running: false, variants: [] };\n  name?: string;\n  peerCount?: number;\n\n  public get localPeer() {\n    return this.store.getLocalPeer()!;\n  }\n\n  public get peers() {\n    return this.store.getPeers();\n  }\n\n  constructor(public id: string, private store: IStore) {}\n}\n","import { HMSPeer as IHMSPeer } from '../../../interfaces/peer';\nimport { HMSRole } from '../../../interfaces/role';\nimport { HMSAudioTrack, HMSTrack, HMSVideoTrack } from '../../../media/tracks';\n\nexport type HMSPeerInit = {\n  peerId: string;\n  name: string;\n  isLocal: boolean;\n  customerUserId?: string;\n  metadata?: string;\n  role?: HMSRole;\n  joinedAt?: Date;\n  fromRoomState?: boolean;\n};\n\nexport class HMSPeer implements IHMSPeer {\n  readonly peerId: string;\n  readonly isLocal: boolean;\n  name: string;\n  customerUserId?: string = '';\n  metadata?: string = '';\n  audioTrack?: HMSAudioTrack;\n  videoTrack?: HMSVideoTrack;\n  auxiliaryTracks: HMSTrack[] = [];\n  role?: HMSRole;\n  joinedAt?: Date;\n\n  constructor({ peerId, name, isLocal, customerUserId, metadata, role, joinedAt }: HMSPeerInit) {\n    this.name = name;\n    this.peerId = peerId;\n    this.isLocal = isLocal;\n    this.customerUserId = customerUserId;\n    this.metadata = metadata;\n    this.joinedAt = joinedAt;\n\n    if (role) {\n      this.role = role;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  updateRole(newRole: HMSRole) {\n    this.role = newRole;\n  }\n  /**\n   * @internal\n   */\n  updateName(newName: string) {\n    this.name = newName;\n  }\n  /**\n   * @internal\n   */\n  updateMetadata(data: string) {\n    this.metadata = data;\n  }\n\n  toString() {\n    return `{\n      name: ${this.name};\n      role: ${this.role?.name};\n      peerId: ${this.peerId};\n      customerUserId: ${this.customerUserId};\n      ${this.audioTrack ? `audioTrack: ${this.audioTrack?.trackId};` : ''}\n      ${this.videoTrack ? `videoTrack: ${this.videoTrack?.trackId};` : ''}\n    }`;\n  }\n}\n","import { v4 as uuidv4 } from 'uuid';\n\nexport default class HMSIdFactory {\n  static makePeerId = () => uuidv4();\n}\n","import { HMSPeer, HMSPeerInit } from './HMSPeer';\nimport { HMSLocalPeer as IHMSLocalPeer } from '../../../interfaces/peer';\nimport { HMSRole } from '../../../interfaces/role';\nimport { HMSLocalAudioTrack, HMSLocalTrack, HMSLocalVideoTrack } from '../../../media/tracks';\nimport HMSIdFactory from '../../../utils/id-factory';\n\ntype HMSLocalPeerInit = Omit<HMSPeerInit, 'isLocal' | 'peerId'> & { asRole?: HMSRole };\n\nexport class HMSLocalPeer extends HMSPeer implements IHMSLocalPeer {\n  isLocal = true;\n  declare audioTrack?: HMSLocalAudioTrack;\n  declare videoTrack?: HMSLocalVideoTrack;\n  auxiliaryTracks: HMSLocalTrack[] = [];\n  asRole?: HMSRole;\n\n  constructor(peerData: HMSLocalPeerInit) {\n    super({ ...peerData, peerId: HMSIdFactory.makePeerId(), isLocal: true });\n    this.asRole = peerData.asRole;\n  }\n\n  isInPreview() {\n    return !!this.asRole;\n  }\n\n  toString(): string {\n    return `{\n      name: ${this.name};\n      role: ${this.role?.name};\n      peerId: ${this.peerId};\n      customerUserId: ${this.customerUserId};\n      ${this.asRole ? `asRole: ${this.asRole.name};` : ''}\n      ${this.audioTrack ? `audioTrack: ${this.audioTrack?.trackId};` : ''}\n      ${this.videoTrack ? `videoTrack: ${this.videoTrack?.trackId};` : ''}\n    }`;\n  }\n}\n","import { HMSPeer, HMSPeerInit } from './HMSPeer';\nimport { HMSRemotePeer as IHMSRemotePeer } from '../../../interfaces/peer';\nimport { HMSRemoteAudioTrack, HMSRemoteTrack, HMSRemoteVideoTrack } from '../../../media/tracks';\n\ntype HMSRemotePeerInit = Omit<HMSPeerInit, 'isLocal'>;\n\nexport class HMSRemotePeer extends HMSPeer implements IHMSRemotePeer {\n  isLocal = false;\n  declare audioTrack?: HMSRemoteAudioTrack;\n  declare videoTrack?: HMSRemoteVideoTrack;\n  auxiliaryTracks: HMSRemoteTrack[] = [];\n  fromRoomState = false;\n\n  constructor(peerData: HMSRemotePeerInit) {\n    super({ ...peerData, isLocal: false });\n    this.fromRoomState = !!peerData.fromRoomState;\n  }\n}\n","import { v4 as uuid } from 'uuid';\nimport { IStore } from './store';\nimport AnalyticsEventFactory from '../analytics/AnalyticsEventFactory';\nimport { AnalyticsTimer, TimedEvent } from '../analytics/AnalyticsTimer';\nimport { DeviceManager } from '../device-manager';\nimport { ErrorCodes } from '../error/ErrorCodes';\nimport { ErrorFactory, HMSAction } from '../error/ErrorFactory';\nimport { HMSException } from '../error/HMSException';\nimport { BuildGetMediaError, HMSGetMediaActions } from '../error/utils';\nimport { EventBus } from '../events/EventBus';\nimport { HMSAudioCodec, HMSScreenShareConfig, HMSVideoCodec, ScreenCaptureHandleConfig } from '../interfaces';\nimport InitialSettings from '../interfaces/settings';\nimport {\n  HMSAudioTrackSettings,\n  HMSAudioTrackSettingsBuilder,\n  HMSTrackSettings,\n  HMSTrackSettingsBuilder,\n  HMSVideoTrackSettings,\n  HMSVideoTrackSettingsBuilder,\n} from '../media/settings';\nimport HMSLocalStream from '../media/streams/HMSLocalStream';\nimport { HMSLocalAudioTrack, HMSLocalTrack, HMSLocalVideoTrack, HMSTrackType } from '../media/tracks';\nimport { IFetchAVTrackOptions } from '../transport/ITransport';\nimport ITransportObserver from '../transport/ITransportObserver';\nimport HMSLogger from '../utils/logger';\nimport { HMSAudioContextHandler } from '../utils/media';\n\nconst defaultSettings = {\n  isAudioMuted: false,\n  isVideoMuted: false,\n  audioInputDeviceId: 'default',\n  audioOutputDeviceId: 'default',\n  videoDeviceId: 'default',\n};\n\nlet blankCanvas: HTMLCanvasElement;\n\nexport class LocalTrackManager {\n  readonly TAG: string = '[LocalTrackManager]';\n  private captureHandleIdentifier?: string;\n\n  constructor(\n    private store: IStore,\n    private observer: ITransportObserver,\n    private deviceManager: DeviceManager,\n    private eventBus: EventBus,\n    private analyticsTimer: AnalyticsTimer,\n  ) {\n    this.setScreenCaptureHandleConfig();\n  }\n\n  // eslint-disable-next-line complexity\n  async getTracksToPublish(initialSettings: InitialSettings = defaultSettings): Promise<HMSLocalTrack[]> {\n    const trackSettings = this.getAVTrackSettings(initialSettings);\n    if (!trackSettings) {\n      return [];\n    }\n    const canPublishAudio = !!trackSettings.audio;\n    const canPublishVideo = !!trackSettings.video;\n    let tracksToPublish: Array<HMSLocalTrack> = [];\n    const { videoTrack, audioTrack } = await this.updateCurrentLocalTrackSettings(trackSettings);\n    const localStream = (videoTrack?.stream || audioTrack?.stream) as HMSLocalStream | undefined;\n    // The track gets added to the store only after it is published.\n    const isVideoTrackPublished = Boolean(videoTrack && this.store.getTrackById(videoTrack.trackId));\n    const isAudioTrackPublished = Boolean(audioTrack && this.store.getTrackById(audioTrack.trackId));\n\n    if (isVideoTrackPublished && isAudioTrackPublished) {\n      // there is nothing to publish\n      return [];\n    }\n\n    const fetchTrackOptions: IFetchAVTrackOptions = {\n      audio: canPublishAudio && !audioTrack && (initialSettings.isAudioMuted ? 'empty' : true),\n      video: canPublishVideo && !videoTrack && (initialSettings.isVideoMuted ? 'empty' : true),\n    };\n\n    if (fetchTrackOptions.audio) {\n      this.analyticsTimer.start(TimedEvent.LOCAL_AUDIO_TRACK);\n    }\n    if (fetchTrackOptions.video) {\n      this.analyticsTimer.start(TimedEvent.LOCAL_VIDEO_TRACK);\n    }\n    try {\n      HMSLogger.d(this.TAG, 'Init Local Tracks', { fetchTrackOptions });\n      tracksToPublish = await this.getLocalTracks(fetchTrackOptions, trackSettings, localStream);\n    } catch (error) {\n      tracksToPublish = await this.retryGetLocalTracks(\n        error as HMSException,\n        trackSettings,\n        fetchTrackOptions,\n        localStream,\n      );\n    }\n    if (fetchTrackOptions.audio) {\n      this.analyticsTimer.end(TimedEvent.LOCAL_AUDIO_TRACK);\n    }\n    if (fetchTrackOptions.video) {\n      this.analyticsTimer.end(TimedEvent.LOCAL_VIDEO_TRACK);\n    }\n\n    if (videoTrack && canPublishVideo && !isVideoTrackPublished) {\n      tracksToPublish.push(videoTrack);\n    }\n    if (audioTrack && canPublishAudio && !isAudioTrackPublished) {\n      tracksToPublish.push(audioTrack);\n    }\n    return tracksToPublish;\n  }\n\n  /**\n   * @throws {HMSException}\n   */\n  async getLocalTracks(\n    fetchTrackOptions: IFetchAVTrackOptions = { audio: true, video: true },\n    settings: HMSTrackSettings,\n    localStream?: HMSLocalStream,\n  ): Promise<Array<HMSLocalTrack>> {\n    try {\n      const nativeTracks = await this.getNativeLocalTracks(fetchTrackOptions, settings);\n      return this.createHMSLocalTracks(nativeTracks, settings, localStream);\n    } catch (error) {\n      // TOOD: On OverConstrained error, retry with dropping all constraints.\n      // Just retry getusermedia again - it sometimes work when AbortError or NotFoundError is thrown on a few devices\n      this.eventBus.analytics.publish(\n        AnalyticsEventFactory.publish({\n          devices: this.deviceManager.getDevices(),\n          error: error as Error,\n          settings,\n        }),\n      );\n      throw error;\n    }\n  }\n\n  /**\n   * @throws {HMSException}\n   */\n  private async getNativeLocalTracks(\n    fetchTrackOptions: IFetchAVTrackOptions = { audio: false, video: false },\n    settings: HMSTrackSettings,\n  ) {\n    const trackSettings = new HMSTrackSettings(\n      fetchTrackOptions.video === true ? settings.video : null,\n      fetchTrackOptions.audio === true ? settings.audio : null,\n      settings.simulcast,\n    );\n    const nativeTracks: MediaStreamTrack[] = [];\n\n    if (trackSettings.audio || trackSettings.video) {\n      nativeTracks.push(...(await this.getAVTracks(trackSettings)));\n    }\n    nativeTracks.push(...this.getEmptyTracks(fetchTrackOptions));\n    return nativeTracks;\n  }\n\n  async getLocalScreen(partialConfig?: HMSScreenShareConfig) {\n    const config = await this.getOrDefaultScreenshareConfig(partialConfig);\n    const screenSettings = this.getScreenshareSettings(config.videoOnly);\n    const constraints = {\n      video: { ...screenSettings?.video.toConstraints(true), displaySurface: config.displaySurface },\n      preferCurrentTab: config.preferCurrentTab,\n      selfBrowserSurface: config.selfBrowserSurface,\n      surfaceSwitching: config.surfaceSwitching,\n      systemAudio: config.systemAudio,\n    } as MediaStreamConstraints;\n    if (screenSettings?.audio) {\n      const audioConstraints: MediaTrackConstraints = screenSettings?.audio?.toConstraints();\n      // remove advanced constraints as it not supported for screenshare audio\n      delete audioConstraints.advanced;\n      constraints.audio = {\n        ...audioConstraints,\n        autoGainControl: false,\n        noiseSuppression: false,\n        // @ts-ignore\n        googAutoGainControl: false,\n        echoCancellation: false,\n      };\n    }\n    let stream;\n    try {\n      HMSLogger.d('retrieving screenshare with ', { config }, { constraints });\n      // @ts-ignore [https://github.com/microsoft/TypeScript/issues/33232]\n      stream = (await navigator.mediaDevices.getDisplayMedia(constraints)) as MediaStream;\n    } catch (err) {\n      HMSLogger.w(this.TAG, 'error in getting screenshare - ', err);\n      const error = BuildGetMediaError(err as Error, HMSGetMediaActions.SCREEN);\n      this.eventBus.analytics.publish(\n        AnalyticsEventFactory.publish({\n          error: error as Error,\n          devices: this.deviceManager.getDevices(),\n          settings: new HMSTrackSettings(screenSettings?.video, screenSettings?.audio, false),\n        }),\n      );\n      throw error;\n    }\n\n    const tracks: Array<HMSLocalTrack> = [];\n    const local = new HMSLocalStream(stream);\n    const nativeVideoTrack = stream.getVideoTracks()[0];\n    const videoTrack = new HMSLocalVideoTrack(local, nativeVideoTrack, 'screen', this.eventBus, screenSettings?.video);\n    videoTrack.setSimulcastDefinitons(this.store.getSimulcastDefinitionsForPeer(this.store.getLocalPeer()!, 'screen'));\n\n    try {\n      const isCurrentTabShared = this.validateCurrentTabCapture(videoTrack, config.forceCurrentTab);\n      videoTrack.isCurrentTab = isCurrentTabShared;\n      await videoTrack.cropTo(config.cropTarget);\n    } catch (err) {\n      stream.getTracks().forEach(track => track.stop());\n      throw err;\n    }\n\n    tracks.push(videoTrack);\n    const nativeAudioTrack = stream.getAudioTracks()[0];\n    if (nativeAudioTrack) {\n      const audioTrack = new HMSLocalAudioTrack(\n        local,\n        nativeAudioTrack,\n        'screen',\n        this.eventBus,\n        screenSettings?.audio,\n      );\n      tracks.push(audioTrack);\n    }\n\n    HMSLogger.v(this.TAG, 'getLocalScreen', tracks);\n    return tracks;\n  }\n\n  setScreenCaptureHandleConfig(config?: Partial<ScreenCaptureHandleConfig>) {\n    // @ts-ignore\n    if (!navigator.mediaDevices?.setCaptureHandleConfig || this.isInIframe()) {\n      // setCaptureHandleConfig can't be called from within an iframe\n      return;\n    }\n    config = config || {};\n    Object.assign(config, { handle: uuid(), exposeOrigin: false, permittedOrigins: [window.location.origin] });\n    HMSLogger.d('setting capture handle - ', config.handle);\n    // @ts-ignore\n    navigator.mediaDevices.setCaptureHandleConfig(config);\n    this.captureHandleIdentifier = config.handle;\n  }\n\n  validateCurrentTabCapture(track: HMSLocalVideoTrack, forceCurrentTab: boolean): boolean {\n    const trackHandle = track.getCaptureHandle();\n    const isCurrentTabShared = !!(this.captureHandleIdentifier && trackHandle?.handle === this.captureHandleIdentifier);\n    if (forceCurrentTab && !isCurrentTabShared) {\n      HMSLogger.e(this.TAG, 'current tab was not shared with forceCurrentTab as true');\n      throw ErrorFactory.TracksErrors.CurrentTabNotShared();\n    }\n    return isCurrentTabShared;\n  }\n\n  async requestPermissions() {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true,\n        video: true,\n      });\n      // Stop stream\n      stream.getTracks().forEach(track => track.stop());\n    } catch (error) {\n      HMSLogger.e(this.TAG, error);\n    }\n  }\n\n  static getEmptyVideoTrack(prevTrack?: MediaStreamTrack): MediaStreamTrack {\n    const width = prevTrack?.getSettings()?.width || 320;\n    const height = prevTrack?.getSettings()?.height || 240;\n    const frameRate = 10; // fps TODO: experiment, see if this can be reduced\n    if (!blankCanvas) {\n      blankCanvas = document.createElement('canvas');\n      blankCanvas.width = width;\n      blankCanvas.height = height;\n      blankCanvas.getContext('2d', { willReadFrequently: true })?.fillRect(0, 0, width, height);\n    }\n    const stream = blankCanvas.captureStream(frameRate);\n    const emptyTrack = stream.getVideoTracks()[0];\n    const intervalID = setInterval(() => {\n      if (emptyTrack.readyState === 'ended') {\n        clearInterval(intervalID);\n        return;\n      }\n      const ctx = blankCanvas.getContext('2d');\n      if (ctx) {\n        const pixel = ctx.getImageData(0, 0, 1, 1).data;\n        const red = pixel[0] === 0 ? 1 : 0; // toggle red in pixel\n        ctx.fillStyle = `rgb(${red}, 0, 0)`;\n        ctx.fillRect(0, 0, 1, 1);\n      }\n    }, 1000 / frameRate);\n    emptyTrack.onended = () => {\n      clearInterval(intervalID);\n    };\n    emptyTrack.enabled = false;\n    return emptyTrack;\n  }\n\n  static getEmptyAudioTrack(): MediaStreamTrack {\n    const ctx = HMSAudioContextHandler.getAudioContext();\n    const oscillator = ctx.createOscillator();\n    const dst = ctx.createMediaStreamDestination();\n    oscillator.connect(dst);\n    oscillator.start();\n    const emptyTrack = dst.stream.getAudioTracks()[0];\n    emptyTrack.enabled = false;\n    return emptyTrack;\n  }\n\n  /**\n   * @throws {HMSException}\n   */\n  private async getAVTracks(settings: HMSTrackSettings): Promise<Array<MediaStreamTrack>> {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: settings.audio ? settings.audio.toConstraints() : false,\n        video: settings.video ? settings.video.toConstraints() : false,\n      });\n\n      return stream.getVideoTracks().concat(stream.getAudioTracks());\n    } catch (error) {\n      await this.deviceManager.init();\n      const videoError = !!(!this.deviceManager.hasWebcamPermission && settings.video);\n      const audioError = !!(!this.deviceManager.hasMicrophonePermission && settings.audio);\n      /**\n       * TODO: Only permission error throws correct device info in error(audio or video or both),\n       * Right now for other errors such as overconstrained error we are unable to get whether audio/video failure.\n       * Fix this by checking the native error message.\n       */\n      const errorType = this.getErrorType(videoError, audioError);\n      throw BuildGetMediaError(error as Error, errorType);\n    }\n  }\n\n  private getAVTrackSettings(initialSettings: InitialSettings): HMSTrackSettings | null {\n    const audioSettings = this.getAudioSettings(initialSettings);\n    const videoSettings = this.getVideoSettings(initialSettings);\n    if (!audioSettings && !videoSettings) {\n      return null;\n    }\n    return new HMSTrackSettingsBuilder().video(videoSettings).audio(audioSettings).build();\n  }\n\n  private isInIframe() {\n    try {\n      return window.self !== window.top;\n    } catch (e) {\n      return true;\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  private async retryGetLocalTracks(\n    error: HMSException,\n    trackSettings: HMSTrackSettings,\n    fetchTrackOptions: IFetchAVTrackOptions,\n    localStream?: HMSLocalStream,\n  ): Promise<Array<HMSLocalTrack>> {\n    if (error instanceof HMSException && error.action === HMSAction.TRACK) {\n      this.observer.onFailure(error);\n\n      const overConstrainedFailure = error.code === ErrorCodes.TracksErrors.OVER_CONSTRAINED;\n      const audioFailure = error.message.includes('audio');\n      const videoFailure = error.message.includes('video');\n      if (overConstrainedFailure) {\n        // TODO: Use this once TODO@L#250 is completed\n        // const newTrackSettings = new HMSTrackSettingsBuilder()\n        //   .video(videoFailure ? new HMSVideoTrackSettings() : trackSettings.video)\n        //   .audio(audioFailure ? new HMSAudioTrackSettings() : trackSettings.audio)\n        //   .build();\n        const newTrackSettings = new HMSTrackSettingsBuilder()\n          .video(new HMSVideoTrackSettings())\n          .audio(new HMSAudioTrackSettings())\n          .build();\n\n        HMSLogger.w(this.TAG, 'Fetch AV Tracks failed with overconstrained error', { fetchTrackOptions }, { error });\n\n        try {\n          // Try get local tracks with no constraints\n          return await this.getLocalTracks(fetchTrackOptions, newTrackSettings, localStream);\n        } catch (error) {\n          /**\n           * This error shouldn't be overconstrained error(as we've dropped all constraints).\n           * If it's an overconstrained error, change error code to avoid recursive loop\n           * Try get local tracks for empty tracks\n           */\n          const nativeError: Error | undefined = error instanceof HMSException ? error.nativeError : (error as Error);\n          let ex = error;\n          if (nativeError?.name === 'OverconstrainedError') {\n            const newError = ErrorFactory.TracksErrors.GenericTrack(\n              HMSAction.TRACK,\n              'Overconstrained error after dropping all constraints',\n            );\n            newError.addNativeError(nativeError);\n            ex = newError;\n          }\n\n          return await this.retryGetLocalTracks(ex as HMSException, trackSettings, fetchTrackOptions, localStream);\n        }\n      }\n\n      fetchTrackOptions.audio = audioFailure ? 'empty' : fetchTrackOptions.audio;\n      fetchTrackOptions.video = videoFailure ? 'empty' : fetchTrackOptions.video;\n      HMSLogger.w(this.TAG, 'Fetch AV Tracks failed', { fetchTrackOptions }, error);\n      try {\n        return await this.getLocalTracks(fetchTrackOptions, trackSettings, localStream);\n      } catch (error) {\n        HMSLogger.w(this.TAG, 'Fetch empty tacks failed', error);\n        fetchTrackOptions.audio = fetchTrackOptions.audio && 'empty';\n        fetchTrackOptions.video = fetchTrackOptions.video && 'empty';\n        this.observer.onFailure(error as HMSException);\n        return await this.getLocalTracks(fetchTrackOptions, trackSettings, localStream);\n      }\n    } else {\n      HMSLogger.w(this.TAG, 'Fetch AV Tracks failed - unknown exception', error);\n      this.observer.onFailure(error);\n      return [];\n    }\n  }\n\n  private getErrorType(videoError: boolean, audioError: boolean): HMSGetMediaActions {\n    if (videoError && audioError) {\n      return HMSGetMediaActions.AV;\n    }\n    if (videoError) {\n      return HMSGetMediaActions.VIDEO;\n    }\n    if (audioError) {\n      return HMSGetMediaActions.AUDIO;\n    }\n    return HMSGetMediaActions.UNKNOWN;\n  }\n\n  private getEmptyTracks(fetchTrackOptions: IFetchAVTrackOptions) {\n    const nativeTracks: MediaStreamTrack[] = [];\n    if (fetchTrackOptions.audio === 'empty') {\n      nativeTracks.push(LocalTrackManager.getEmptyAudioTrack());\n    }\n\n    if (fetchTrackOptions.video === 'empty') {\n      nativeTracks.push(LocalTrackManager.getEmptyVideoTrack());\n    }\n    return nativeTracks;\n  }\n\n  private async updateCurrentLocalTrackSettings(trackSettings: HMSTrackSettings | null) {\n    const localTracks = this.store.getLocalPeerTracks();\n    const videoTrack = localTracks.find(t => t.type === HMSTrackType.VIDEO && t.source === 'regular') as\n      | HMSLocalVideoTrack\n      | undefined;\n    const audioTrack = localTracks.find(t => t.type === HMSTrackType.AUDIO && t.source === 'regular') as\n      | HMSLocalAudioTrack\n      | undefined;\n\n    const screenVideoTrack = localTracks.find(t => t.type === HMSTrackType.VIDEO && t.source === 'screen') as\n      | HMSLocalVideoTrack\n      | undefined;\n\n    if (trackSettings?.video) {\n      await videoTrack?.setSettings(trackSettings.video);\n    }\n\n    if (trackSettings?.audio) {\n      await audioTrack?.setSettings(trackSettings.audio);\n    }\n\n    const screenSettings = this.getScreenshareSettings(true);\n    if (screenSettings?.video) {\n      await screenVideoTrack?.setSettings(screenSettings?.video);\n    }\n\n    return { videoTrack, audioTrack };\n  }\n\n  private getAudioSettings(initialSettings: InitialSettings) {\n    const publishParams = this.store.getPublishParams();\n    if (!publishParams || !publishParams.allowed?.includes('audio')) {\n      return null;\n    }\n    const localPeer = this.store.getLocalPeer();\n    const audioTrack = localPeer?.audioTrack;\n    // Get device from the tracks already added in preview\n    const audioDeviceId = audioTrack?.settings.deviceId || initialSettings.audioInputDeviceId;\n\n    return new HMSAudioTrackSettingsBuilder()\n      .codec(publishParams.audio.codec as HMSAudioCodec)\n      .maxBitrate(publishParams.audio.bitRate)\n      .deviceId(audioDeviceId || defaultSettings.audioInputDeviceId)\n      .build();\n  }\n\n  private getVideoSettings(initialSettings: InitialSettings) {\n    const publishParams = this.store.getPublishParams();\n    if (!publishParams || !publishParams.allowed?.includes('video')) {\n      return null;\n    }\n    const localPeer = this.store.getLocalPeer();\n    const videoTrack = localPeer?.videoTrack;\n    // Get device from the tracks already added in preview\n    const videoDeviceId = videoTrack?.settings.deviceId || initialSettings.videoDeviceId;\n    const video = publishParams.video;\n    return new HMSVideoTrackSettingsBuilder()\n      .codec(video.codec as HMSVideoCodec)\n      .maxBitrate(video.bitRate)\n      .maxFramerate(video.frameRate)\n      .setWidth(video.width) // take simulcast width if available\n      .setHeight(video.height) // take simulcast width if available\n      .deviceId(videoDeviceId || defaultSettings.videoDeviceId)\n      .build();\n  }\n\n  private getScreenshareSettings(isVideoOnly = false) {\n    const publishParams = this.store.getPublishParams();\n    if (!publishParams || !publishParams.allowed?.includes('screen')) {\n      return null;\n    }\n    const screen = publishParams.screen;\n    return {\n      video: new HMSVideoTrackSettingsBuilder()\n        // Don't cap maxBitrate for screenshare.\n        // If publish params doesn't have bitRate value - don't set maxBitrate.\n        .maxBitrate(screen.bitRate, false)\n        .codec(screen.codec as HMSVideoCodec)\n        .maxFramerate(screen.frameRate)\n        .setWidth(screen.width)\n        .setHeight(screen.height)\n        .build(),\n      audio: isVideoOnly ? undefined : new HMSAudioTrackSettingsBuilder().build(),\n    };\n  }\n\n  // eslint-disable-next-line complexity\n  private async getOrDefaultScreenshareConfig(partialConfig?: Partial<HMSScreenShareConfig>) {\n    type RequiredConfig = HMSScreenShareConfig &\n      Required<Omit<HMSScreenShareConfig, 'cropTarget' | 'cropElement' | 'displaySurface'>>;\n    const config: RequiredConfig = Object.assign(\n      {\n        videoOnly: false,\n        audioOnly: false,\n        forceCurrentTab: false,\n        preferCurrentTab: false,\n        selfBrowserSurface: 'exclude', // don't give self tab in options\n        surfaceSwitching: 'include', // give option to switch tabs while sharing\n        systemAudio: 'exclude', // system audio share leads to echo in windows\n        displaySurface: 'monitor',\n      },\n      partialConfig || {},\n    );\n    if (config.forceCurrentTab) {\n      config.videoOnly = true; // there will be echo otherwise\n      config.preferCurrentTab = true;\n      config.selfBrowserSurface = 'include';\n      config.surfaceSwitching = 'exclude';\n    }\n    if (config.preferCurrentTab) {\n      config.selfBrowserSurface = 'include';\n      config.displaySurface = undefined; // so the default selected is the current tab\n    }\n    // @ts-ignore\n    if (config.cropElement && window.CropTarget?.fromElement) {\n      // @ts-ignore\n      config.cropTarget = await window.CropTarget.fromElement(config.cropElement);\n    }\n    return config;\n  }\n\n  private createHMSLocalTracks(\n    nativeTracks: MediaStreamTrack[],\n    settings: HMSTrackSettings,\n    localStream?: HMSLocalStream,\n  ) {\n    const nativeVideoTrack = nativeTracks.find(track => track.kind === 'video');\n    const nativeAudioTrack = nativeTracks.find(track => track.kind === 'audio');\n    if (localStream) {\n      nativeTracks.forEach(track => localStream?.nativeStream.addTrack(track));\n    } else {\n      localStream = new HMSLocalStream(new MediaStream(nativeTracks));\n    }\n\n    const tracks: Array<HMSLocalTrack> = [];\n    if (nativeAudioTrack && settings?.audio) {\n      const audioTrack = new HMSLocalAudioTrack(\n        localStream,\n        nativeAudioTrack,\n        'regular',\n        this.eventBus,\n        settings.audio,\n      );\n      tracks.push(audioTrack);\n    }\n\n    if (nativeVideoTrack && settings?.video) {\n      const videoTrack = new HMSLocalVideoTrack(\n        localStream,\n        nativeVideoTrack,\n        'regular',\n        this.eventBus,\n        settings.video,\n      );\n      videoTrack.setSimulcastDefinitons(\n        this.store.getSimulcastDefinitionsForPeer(this.store.getLocalPeer()!, 'regular'),\n      );\n      tracks.push(videoTrack);\n    }\n    return tracks;\n  }\n}\n","import { v4 as uuid } from 'uuid';\nimport { AnalyticsEventLevel } from './AnalyticsEventLevel';\nimport { domainCategory } from './domain-analytics';\nimport { ISignalParamsProvider } from '../signal/ISignalSendParamsProvider';\nimport { getAnalyticsDeviceId } from '../utils/support';\nimport { createUserAgent } from '../utils/user-agent';\n\ninterface AnalyticsEventInit {\n  name: string;\n  level: AnalyticsEventLevel;\n  includesPII?: boolean;\n  properties?: Record<string, any>;\n  timestamp?: number;\n}\n\ninterface SignalEventParams {\n  name: string;\n  info: any;\n  timestamp: number;\n}\n\nexport default class AnalyticsEvent implements ISignalParamsProvider<SignalEventParams> {\n  name: string;\n  level: AnalyticsEventLevel;\n  includesPII: boolean;\n  properties: Record<string, any>;\n  metadata: {\n    token?: string;\n    peer: {\n      peer_id?: string;\n      session_id?: string;\n      room_id?: string;\n      role?: string;\n      room_name?: string;\n      joined_at?: number;\n      template_id?: string;\n      session_started_at?: number;\n      user_name?: string;\n      user_data?: string;\n    };\n    userAgent: string;\n  } = {\n    peer: {},\n    userAgent: createUserAgent(),\n  };\n  timestamp: number;\n  event_id: string;\n  device_id: string;\n\n  constructor({ name, level, properties, includesPII, timestamp }: AnalyticsEventInit) {\n    this.name = name;\n    this.level = level;\n    this.includesPII = includesPII || false;\n    this.properties = properties || {};\n    this.timestamp = timestamp || new Date().getTime(); // Timestamp of generating the event\n    this.event_id = uuid();\n    this.device_id = getAnalyticsDeviceId();\n  }\n\n  toSignalParams() {\n    return {\n      name: this.name,\n      info: { ...this.properties, timestamp: this.timestamp, domain: domainCategory },\n      timestamp: new Date().getTime(), // Timestamp of sending the event\n    };\n  }\n}\n","export enum DomainCategory {\n  CUSTOM = 'CUSTOM',\n  LOCAL = 'LOCAL',\n  HMS = 'HMS',\n}\n","import { DomainCategory } from './AnalyticsEventDomains';\nimport { isBrowser } from '../utils/support';\n\nfunction getDomainCategory() {\n  // this function gives us the domain category(sutom, hms , local) of the base url.\n  // below if statement checks if it's running in a browser ; or if we can use 'window' safely\n\n  if (isBrowser && window) {\n    const baseurl = window.location.hostname;\n\n    if (baseurl === 'localhost' || baseurl === '127.0.0.1') {\n      return DomainCategory.LOCAL;\n    }\n\n    if (baseurl.includes('app.100ms.live')) {\n      return DomainCategory.HMS;\n    } else {\n      return DomainCategory.CUSTOM;\n    }\n  }\n\n  return DomainCategory.CUSTOM;\n}\n\nexport const domainCategory = getDomainCategory();\n","import { ENV, isNode, parsedUserAgent } from './support';\nimport { DomainCategory } from '../analytics/AnalyticsEventDomains';\nimport { domainCategory } from '../analytics/domain-analytics';\nimport { HMSFrameworkInfo } from '../interfaces';\n\nconst sdk_version = require('../../package.json').version;\n\ntype UserAgent = {\n  os: string;\n  os_version: string;\n  sdk: 'web';\n  sdk_version: string;\n  env: 'debug' | 'prod';\n  domain: DomainCategory;\n  device_model?: string;\n  framework?: HMSFrameworkInfo['type'] | 'node';\n  framework_version?: HMSFrameworkInfo['version'];\n  framework_sdk_version?: HMSFrameworkInfo['sdkVersion'];\n};\n\nexport function createUserAgent(sdkEnv: ENV = ENV.PROD, frameworkInfo?: HMSFrameworkInfo): string {\n  const sdk = 'web';\n  const env = domainCategory !== DomainCategory.LOCAL && sdkEnv === ENV.PROD ? 'prod' : 'debug';\n\n  if (isNode) {\n    return convertObjectToString({\n      os: 'web_nodejs',\n      os_version: process.version,\n      sdk,\n      sdk_version,\n      env,\n      domain: domainCategory,\n      framework: 'node',\n      framework_version: process.version,\n      framework_sdk_version: frameworkInfo?.sdkVersion,\n    });\n  }\n\n  const parsedOs = parsedUserAgent.getOS();\n  const parsedDevice = parsedUserAgent.getDevice();\n  const parsedBrowser = parsedUserAgent.getBrowser();\n\n  const os = replaceSpaces(`web_${parsedOs.name}`);\n  const os_version = parsedOs.version || '';\n\n  const browser = replaceSpaces(`${parsedBrowser.name}_${parsedBrowser.version}`);\n  let device_model = browser;\n  if (parsedDevice.type) {\n    const deviceVendor = replaceSpaces(`${parsedDevice.vendor}_${parsedDevice.type}`);\n    device_model = `${deviceVendor}/${browser}`;\n  }\n\n  return convertObjectToString({\n    os,\n    os_version,\n    sdk,\n    sdk_version,\n    device_model,\n    env,\n    domain: domainCategory,\n    framework: frameworkInfo?.type,\n    framework_version: frameworkInfo?.version,\n    framework_sdk_version: frameworkInfo?.sdkVersion,\n  });\n}\n\nfunction replaceSpaces(s: string) {\n  return s.replace(/ /g, '_');\n}\n\nconst convertObjectToString = (object: UserAgent, delimiter = ',') =>\n  Object.keys(object)\n    .filter(key => !!object[key as keyof UserAgent])\n    .map(key => `${key}:${object[key as keyof UserAgent]}`)\n    .join(delimiter);\n","export enum HMSAnalyticsLevel {\n  VERBOSE,\n  INFO,\n  ERROR,\n  OFF,\n}\n\nexport enum AnalyticsEventLevel {\n  VERBOSE,\n  INFO,\n  ERROR,\n  OFF,\n}\n","import { HMSAction } from './ErrorFactory';\nimport { IAnalyticsPropertiesProvider } from '../analytics/IAnalyticsPropertiesProvider';\nimport { HMSSignalMethod } from '../signal/jsonrpc/models';\n\nexport class HMSException extends Error implements IAnalyticsPropertiesProvider {\n  action: string;\n  nativeError?: Error;\n\n  constructor(\n    public readonly code: number,\n    public name: string,\n    action: HMSAction | HMSSignalMethod,\n    public message: string,\n    public description: string,\n    public isTerminal: boolean = false,\n  ) {\n    super(message);\n\n    // Ref: https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, HMSException.prototype);\n    this.action = action.toString();\n  }\n\n  toAnalyticsProperties() {\n    return {\n      error_name: this.name,\n      error_code: this.code,\n      error_message: this.message,\n      error_description: this.description,\n      action: this.action,\n      is_terminal: this.isTerminal,\n    };\n  }\n\n  addNativeError(error: Error) {\n    this.nativeError = error;\n  }\n\n  toString() {\n    return `{\n      code: ${this.code};\n      name: ${this.name};\n      action: ${this.action};\n      message: ${this.message};\n      description: ${this.description};\n      isTerminal: ${this.isTerminal};\n      nativeError: ${this.nativeError?.message};\n    }`;\n  }\n}\n","import { AdditionalAnalyticsProperties } from './AdditionalAnalyticsProperties';\nimport AnalyticsEvent from './AnalyticsEvent';\nimport { AnalyticsEventLevel } from './AnalyticsEventLevel';\nimport { IAnalyticsPropertiesProvider } from './IAnalyticsPropertiesProvider';\nimport { SelectedDevices } from '../device-manager';\nimport { HMSException } from '../error/HMSException';\nimport { DeviceMap } from '../interfaces';\nimport { HMSTrackSettings } from '../media/settings/HMSTrackSettings';\nimport { HMSRemoteVideoTrack } from '../media/tracks';\n\nexport default class AnalyticsEventFactory {\n  private static KEY_REQUESTED_AT = 'requested_at';\n  private static KEY_RESPONDED_AT = 'responded_at';\n\n  static connect(\n    error?: Error,\n    additionalProperties?: AdditionalAnalyticsProperties,\n    requestedAt: Date = new Date(),\n    respondedAt: Date = new Date(),\n    endpoint?: string,\n  ) {\n    const name = this.eventNameFor('connect', error === undefined);\n    const level = error ? AnalyticsEventLevel.ERROR : AnalyticsEventLevel.INFO;\n\n    const properties = this.getPropertiesWithError(\n      {\n        ...additionalProperties,\n        [this.KEY_REQUESTED_AT]: requestedAt?.getTime(),\n        [this.KEY_RESPONDED_AT]: respondedAt?.getTime(),\n        endpoint,\n      },\n      error,\n    );\n\n    return new AnalyticsEvent({ name, level, properties });\n  }\n\n  static disconnect(error?: Error, additionalProperties?: AdditionalAnalyticsProperties) {\n    const name = 'disconnected';\n    const level = error ? AnalyticsEventLevel.ERROR : AnalyticsEventLevel.INFO;\n    const properties = this.getPropertiesWithError(additionalProperties, error);\n\n    return new AnalyticsEvent({ name, level, properties });\n  }\n\n  static preview({\n    error,\n    ...props\n  }: {\n    error?: Error;\n    time?: number;\n    init_response_time?: number;\n    ws_connect_time?: number;\n    on_policy_change_time?: number;\n    local_audio_track_time?: number;\n    local_video_track_time?: number;\n  }) {\n    const name = this.eventNameFor('preview', error === undefined);\n    const level = error ? AnalyticsEventLevel.ERROR : AnalyticsEventLevel.INFO;\n    const properties = this.getPropertiesWithError(props, error);\n\n    return new AnalyticsEvent({ name, level, properties });\n  }\n\n  static join({\n    error,\n    ...props\n  }: {\n    error?: Error;\n    is_preview_called?: boolean;\n    start?: Date;\n    end?: Date;\n    time?: number;\n    init_response_time?: number;\n    ws_connect_time?: number;\n    on_policy_change_time?: number;\n    local_audio_track_time?: number;\n    local_video_track_time?: number;\n    retries_join?: number;\n  }) {\n    const name = this.eventNameFor('join', error === undefined);\n    const level = error ? AnalyticsEventLevel.ERROR : AnalyticsEventLevel.INFO;\n\n    const properties = this.getPropertiesWithError({ ...props, is_preview_called: !!props.is_preview_called }, error);\n\n    return new AnalyticsEvent({ name, level, properties });\n  }\n\n  static publish({ devices, settings, error }: { devices?: DeviceMap; settings?: HMSTrackSettings; error?: Error }) {\n    const name = this.eventNameFor('publish', error === undefined);\n    const level = error ? AnalyticsEventLevel.ERROR : AnalyticsEventLevel.INFO;\n    const properties = this.getPropertiesWithError(\n      {\n        devices,\n        audio: settings?.audio,\n        video: settings?.video,\n      },\n      error,\n    );\n    return new AnalyticsEvent({\n      name,\n      level,\n      properties,\n    });\n  }\n\n  static hlsPlayerError(error: HMSException) {\n    return new AnalyticsEvent({\n      name: 'hlsPlayerError',\n      level: AnalyticsEventLevel.ERROR,\n      properties: this.getErrorProperties(error),\n    });\n  }\n  static subscribeFail(error: Error) {\n    const name = this.eventNameFor('subscribe', false);\n    const level = AnalyticsEventLevel.ERROR;\n    const properties = this.getErrorProperties(error);\n\n    return new AnalyticsEvent({ name, level, properties });\n  }\n\n  static leave() {\n    return new AnalyticsEvent({ name: 'leave', level: AnalyticsEventLevel.INFO });\n  }\n\n  static autoplayError() {\n    return new AnalyticsEvent({ name: 'autoplayError', level: AnalyticsEventLevel.ERROR });\n  }\n\n  static audioPlaybackError(error: HMSException) {\n    return new AnalyticsEvent({\n      name: 'audioPlaybackError',\n      level: AnalyticsEventLevel.ERROR,\n      properties: this.getErrorProperties(error),\n    });\n  }\n\n  static deviceChange({\n    selection,\n    type,\n    devices,\n    error,\n  }: {\n    selection: Partial<SelectedDevices>;\n    type?: 'change' | 'list' | 'audioInput' | 'audioOutput' | 'video';\n    devices: DeviceMap;\n    error?: Error;\n  }) {\n    const name = this.eventNameFor(error ? 'publish' : `device.${type}`, error === undefined);\n    const level = error ? AnalyticsEventLevel.ERROR : AnalyticsEventLevel.INFO;\n    const properties = this.getPropertiesWithError({ selection, devices }, error);\n    return new AnalyticsEvent({\n      name,\n      level,\n      properties,\n    });\n  }\n\n  static performance(stats: IAnalyticsPropertiesProvider) {\n    const name = 'perf.stats';\n    const level = AnalyticsEventLevel.INFO;\n    const properties = stats.toAnalyticsProperties();\n\n    return new AnalyticsEvent({ name, level, properties });\n  }\n\n  static rtcStats(stats: IAnalyticsPropertiesProvider) {\n    const name = 'rtc.stats';\n    const level = AnalyticsEventLevel.INFO;\n    const properties = stats.toAnalyticsProperties();\n\n    return new AnalyticsEvent({ name, level, properties });\n  }\n\n  /**\n   * TODO: remove once everything is switched to server side degradation, this\n   * event can be handled on server side as well.\n   */\n  static degradationStats(track: HMSRemoteVideoTrack, isDegraded: boolean) {\n    const name = 'video.degradation.stats';\n    const level = AnalyticsEventLevel.INFO;\n    let properties: any = {\n      degradedAt: track.degradedAt,\n      trackId: track.trackId,\n    };\n\n    if (!isDegraded && track.degradedAt instanceof Date) {\n      // not degraded => restored\n      const restoredAt = new Date();\n      const duration = restoredAt.valueOf() - track.degradedAt.valueOf();\n      properties = { ...properties, duration, restoredAt };\n    }\n\n    return new AnalyticsEvent({ name, level, properties });\n  }\n\n  static audioDetectionFail(error: Error, device?: MediaDeviceInfo): AnalyticsEvent {\n    const properties = this.getPropertiesWithError({ device }, error);\n    const level = AnalyticsEventLevel.ERROR;\n    const name = 'audiopresence.failed';\n\n    return new AnalyticsEvent({ name, level, properties });\n  }\n\n  static previewNetworkQuality(properties: { downLink?: string; score?: number; error?: string }) {\n    return new AnalyticsEvent({\n      name: 'perf.networkquality.preview',\n      level: properties.error ? AnalyticsEventLevel.ERROR : AnalyticsEventLevel.INFO,\n      properties,\n    });\n  }\n\n  private static eventNameFor(name: string, ok: boolean) {\n    const suffix = ok ? 'success' : 'failed';\n    return `${name}.${suffix}`;\n  }\n\n  private static getPropertiesWithError(initialProperties: any, error?: Error) {\n    const errorProperties = this.getErrorProperties(error);\n    initialProperties = { ...errorProperties, ...initialProperties };\n    return initialProperties;\n  }\n\n  private static getErrorProperties(error?: Error): Record<string, any> {\n    if (error) {\n      return error instanceof HMSException\n        ? error.toAnalyticsProperties()\n        : {\n            error_name: error.name,\n            error_message: error.message,\n            error_description: error.cause,\n          };\n    } else {\n      return {};\n    }\n  }\n}\n","import HMSLogger from '../utils/logger';\n\nexport type TimedEventName = 'init' | 'websocket-open' | 'on-policy-change' | 'local-tracks' | 'preview' | 'join';\n\nexport enum TimedEvent {\n  INIT = 'init_response_time',\n  WEBSOCKET_CONNECT = 'ws_connect_time',\n  ON_POLICY_CHANGE = 'on_policy_change_time',\n  LOCAL_AUDIO_TRACK = 'local_audio_track_time',\n  LOCAL_VIDEO_TRACK = 'local_video_track_time',\n  JOIN = 'join_time',\n  PREVIEW = 'preview_time',\n  PEER_LIST = 'peer_list_time',\n  ROOM_STATE = 'room_state_time',\n  JOIN_RESPONSE = 'join_response_time',\n  GET_TOKEN = 'GET_TOKEN',\n}\n\nconst defaultEventNames = [\n  TimedEvent.INIT,\n  TimedEvent.WEBSOCKET_CONNECT,\n  TimedEvent.ON_POLICY_CHANGE,\n  TimedEvent.LOCAL_AUDIO_TRACK,\n  TimedEvent.LOCAL_VIDEO_TRACK,\n  TimedEvent.PEER_LIST,\n  TimedEvent.ROOM_STATE,\n  TimedEvent.JOIN_RESPONSE,\n];\n\nexport class AnalyticsTimer {\n  private eventPerformanceMeasures: Partial<Record<TimedEvent, PerformanceMeasure>> = {};\n\n  start(eventName: TimedEvent) {\n    performance.mark(eventName);\n  }\n\n  end(eventName: TimedEvent) {\n    try {\n      this.eventPerformanceMeasures[eventName] = performance.measure(eventName, eventName);\n      HMSLogger.d('[HMSPerformanceTiming]', eventName, this.eventPerformanceMeasures[eventName]?.duration);\n    } catch (error) {\n      HMSLogger.w('[AnalyticsTimer]', `Error in measuring performance for event ${eventName}`, { error });\n    }\n  }\n\n  getTimeTaken(eventName: TimedEvent) {\n    return this.eventPerformanceMeasures[eventName]?.duration;\n  }\n\n  getTimes(...eventNames: TimedEvent[]) {\n    return [...defaultEventNames, ...eventNames].reduce(\n      (timeObject, eventName) => ({ ...timeObject, [eventName]: this.getTimeTaken(eventName) }),\n      {},\n    );\n  }\n\n  cleanUp() {\n    this.eventPerformanceMeasures = {};\n  }\n}\n","/*\n * ErrorCodes.ts\n *\n * Created by codegen\n * Copyright © 2021 100ms. All rights reserved.\n */\n\nexport const ErrorCodes = {\n  // https://www.rfc-editor.org/rfc/rfc6455#section-7.4.1\n  WebSocketConnectionErrors: {\n    // Error connecting to ws or init config not available\n    FAILED_TO_CONNECT: 1000,\n\n    // Network connection lost\n    WEBSOCKET_CONNECTION_LOST: 1003,\n\n    // Abnormal close without receiving a Close control frame\n    ABNORMAL_CLOSE: 1006,\n  },\n\n  APIErrors: {\n    // [INIT]: Server error\n    SERVER_ERRORS: 2000,\n    //init config not available\n    INIT_CONFIG_NOT_AVAILABLE: 2002,\n\n    // Endpoint is not reachable.\n    ENDPOINT_UNREACHABLE: 2003,\n\n    // Token is not in proper JWT format\n    INVALID_TOKEN_FORMAT: 2004,\n  },\n\n  TracksErrors: {\n    // [PUBLISH]: Error with getusermedia request\n    GENERIC_TRACK: 3000,\n\n    // [PUBLISH]: No permission to access capture device - {device_type}\n    CANT_ACCESS_CAPTURE_DEVICE: 3001,\n\n    // [PUBLISH]: Capture device is no longer available - {device_type}\n    DEVICE_NOT_AVAILABLE: 3002,\n\n    // [PUBLISH]: Capture device is in use by another application - {device_type}\n    DEVICE_IN_USE: 3003,\n\n    // Lost access to capture device midway - {device_type}\n    DEVICE_LOST_MIDWAY: 3008,\n\n    // There is no media to return. Please select either video or audio or both.\n    NOTHING_TO_RETURN: 3005,\n\n    // Cannot enable simulcast when no video settings are provided\n    INVALID_VIDEO_SETTINGS: 3006,\n\n    // Codec can't be changed mid call.\n    CODEC_CHANGE_NOT_PERMITTED: 3007,\n\n    // When the browser throws autoplay exception if something is played before interacting\n    AUTOPLAY_ERROR: 3008,\n\n    // Over constrained error - device hardware unable to satisfy requested constraints\n    OVER_CONSTRAINED: 3009,\n\n    // No audio detected from track, indicates problem with device hardware\n    NO_AUDIO_DETECTED: 3010,\n\n    // Operating System denied permission\n    SYSTEM_DENIED_PERMISSION: 3011,\n\n    // Current tab is not shared when forceCurrentTab was set to true for screenshare\n    CURRENT_TAB_NOT_SHARED: 3012,\n\n    // any error that occurs while playing audio of remote audio tracks\n    AUDIO_PLAYBACK_ERROR: 3013,\n  },\n\n  WebrtcErrors: {\n    // [{action}]: Failed to create offer.\n    CREATE_OFFER_FAILED: 4001,\n\n    // [{action}]: Failed to create answer.\n    CREATE_ANSWER_FAILED: 4002,\n\n    // [{action}]: Failed to set offer.\n    SET_LOCAL_DESCRIPTION_FAILED: 4003,\n\n    // [{action}]: Failed to set answer.\n    SET_REMOTE_DESCRIPTION_FAILED: 4004,\n\n    // [{action}]: Ice connection state FAILED\n    ICE_FAILURE: 4005,\n\n    // [{action}]: Ice connection state FAILED\n    ICE_DISCONNECTED: 4006,\n  },\n\n  WebsocketMethodErrors: {\n    // [JOIN]: {server_error}\n    SERVER_ERRORS: 5000,\n\n    // [JOIN]: You have already joined this room.\n    ALREADY_JOINED: 5001,\n\n    // [JOIN]: Cannot join if preview is in progress\n    CANNOT_JOIN_PREVIEW_IN_PROGRESS: 5002,\n  },\n\n  GenericErrors: {\n    // Client is not connected\n    NOT_CONNECTED: 6000,\n\n    // Unknown signalling error: {action} {error_info}\n    SIGNALLING: 6001,\n\n    // Unknown exception: {error_info}\n    UNKNOWN: 6002,\n\n    // WebRTC engine is not ready yet\n    NOT_READY: 6003,\n\n    // Failed to parse JSON message - {json_message}\n    JSON_PARSING_FAILED: 6004,\n\n    // Track Metadata Missing\n    TRACK_METADATA_MISSING: 6005,\n\n    // RTC Track missing\n    RTC_TRACK_MISSING: 6006,\n\n    // Peer Metadata Missing\n    PEER_METADATA_MISSING: 6007,\n\n    // Joined with invalid role\n    INVALID_ROLE: 6008,\n\n    PREVIEW_IN_PROGRESS: 6009,\n\n    MISSING_MEDIADEVICES: 6010,\n\n    MISSING_RTCPEERCONNECTION: 6011,\n  },\n\n  PlaylistErrors: {\n    NO_ENTRY_TO_PLAY: 8001,\n    NO_ENTRY_IS_PLAYING: 8002,\n  },\n};\n","import { HMSAction } from '../../error/ErrorFactory';\n\nexport interface JsonRpcRequest {\n  id: string;\n  method: string;\n  params: Map<string, any>;\n}\n\nexport interface JsonRpcResponse {\n  id: string;\n  result: any;\n  error: {\n    code: number;\n    message: string;\n  };\n}\n\nexport enum HMSSignalMethod {\n  JOIN = 'join',\n  OFFER = 'offer',\n  ANSWER = 'answer',\n  TRICKLE = 'trickle',\n  TRACK_UPDATE = 'track-update',\n  BROADCAST = 'broadcast',\n  ANALYTICS = 'analytics',\n  SERVER_ERROR = 'on-error',\n  SERVER_WARNING = 'on-warning',\n  SDK_NOTIFICATION = 'sdk-notification',\n  LEAVE = 'leave',\n  END_ROOM = 'end-room',\n  PING = 'ping',\n  ROLE_CHANGE_REQUEST = 'role-change-request',\n  ROLE_CHANGE = 'role-change',\n  TRACK_UPDATE_REQUEST = 'track-update-request',\n  PEER_LEAVE_REQUEST = 'peer-leave-request',\n  CHANGE_TRACK_MUTE_STATE_REQUEST = 'change-track-mute-state-request',\n  START_RTMP_OR_RECORDING_REQUEST = 'rtmp-start',\n  STOP_RTMP_AND_RECORDING_REQUEST = 'rtmp-stop',\n  UPDATE_PEER_METADATA = 'peer-update',\n  START_HLS_STREAMING = 'hls-start',\n  STOP_HLS_STREAMING = 'hls-stop',\n  HLS_TIMED_METADATA = 'hls-timed-metadata',\n  SET_METADATA = 'set-metadata',\n  GET_METADATA = 'get-metadata',\n  LISTEN_METADATA_CHANGE = 'listen-metadata-change',\n}\n\nexport function convertSignalMethodtoErrorAction(method: HMSSignalMethod): HMSAction {\n  switch (method) {\n    case HMSSignalMethod.JOIN:\n      return HMSAction.JOIN;\n    case HMSSignalMethod.OFFER:\n      return HMSAction.PUBLISH;\n    case HMSSignalMethod.ANSWER:\n      return HMSAction.SUBSCRIBE;\n    case HMSSignalMethod.TRACK_UPDATE:\n      return HMSAction.TRACK;\n    default:\n      return HMSAction.NONE;\n  }\n}\n","/*\n * ErrorFactory.ts\n *\n * Created by codegen\n * Copyright © 2021 100ms. All rights reserved.\n */\n\nimport { ErrorCodes } from './ErrorCodes';\nimport { HMSException } from './HMSException';\nimport { HMSSignalMethod } from '../signal/jsonrpc/models';\n\nexport enum HMSAction {\n  NONE = 'NONE',\n  TRACK = 'TRACK',\n  INIT = 'INIT',\n  GET_TOKEN = 'GET_TOKEN',\n  PUBLISH = 'PUBLISH',\n  UNPUBLISH = 'UNPUBLISH',\n  JOIN = 'JOIN',\n  SUBSCRIBE = 'SUBSCRIBE',\n  DATA_CHANNEL_SEND = 'DATA_CHANNEL_SEND',\n  RESTART_ICE = 'RESTART_ICE',\n  VIDEO_PLUGINS = 'VIDEO_PLUGINS',\n  AUDIO_PLUGINS = 'AUDIO_PLUGINS',\n  AUTOPLAY = 'AUTOPLAY',\n  RECONNECT_SIGNAL = 'RECONNECT_SIGNAL',\n  VALIDATION = 'VALIDATION',\n  PLAYLIST = 'PLAYLIST',\n  PREVIEW = 'PREVIEW',\n}\n\nconst terminalActions: (HMSSignalMethod | HMSAction)[] = [\n  HMSSignalMethod.JOIN,\n  HMSSignalMethod.OFFER,\n  HMSSignalMethod.ANSWER,\n  HMSSignalMethod.TRICKLE,\n  HMSAction.JOIN,\n];\n\nexport const ErrorFactory = {\n  WebSocketConnectionErrors: {\n    FailedToConnect(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.WebSocketConnectionErrors.FAILED_TO_CONNECT,\n        'WebsocketFailedToConnect',\n        action,\n        `[WS]: ${description}`,\n        `[WS]: ${description}`,\n      );\n    },\n\n    WebSocketConnectionLost(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.WebSocketConnectionErrors.WEBSOCKET_CONNECTION_LOST,\n        'WebSocketConnectionLost',\n        action,\n        `Network connection lost `,\n        description,\n      );\n    },\n\n    AbnormalClose(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.WebSocketConnectionErrors.ABNORMAL_CLOSE,\n        'WebSocketAbnormalClose',\n        action,\n        `Websocket closed abnormally`,\n        description,\n      );\n    },\n  },\n\n  APIErrors: {\n    ServerErrors(code: number, action: HMSAction, description = '', isTerminal = true) {\n      return new HMSException(\n        code,\n        'ServerErrors',\n        action,\n        `[${action}]: Server error ${description}`,\n        description,\n        isTerminal,\n      );\n    },\n\n    EndpointUnreachable(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.APIErrors.ENDPOINT_UNREACHABLE,\n        'EndpointUnreachable',\n        action,\n        `Endpoint is not reachable - ${description}`,\n        description,\n      );\n    },\n\n    InvalidTokenFormat(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.APIErrors.INVALID_TOKEN_FORMAT,\n        'InvalidTokenFormat',\n        action,\n        `Token is not in proper JWT format - ${description}`,\n        description,\n        true,\n      );\n    },\n\n    InitConfigNotAvailable(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.APIErrors.INIT_CONFIG_NOT_AVAILABLE,\n        'InitError',\n        action,\n        `[INIT]: ${description}`,\n        `[INIT]: ${description}`,\n      );\n    },\n  },\n\n  TracksErrors: {\n    GenericTrack(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.TracksErrors.GENERIC_TRACK,\n        'GenericTrack',\n        action,\n        `[TRACK]: ${description}`,\n        `[TRACK]: ${description}`,\n      );\n    },\n\n    CantAccessCaptureDevice(action: HMSAction, deviceInfo: string, description = '') {\n      return new HMSException(\n        ErrorCodes.TracksErrors.CANT_ACCESS_CAPTURE_DEVICE,\n        'CantAccessCaptureDevice',\n        action,\n        `User denied permission to access capture device - ${deviceInfo}`,\n        description,\n      );\n    },\n\n    DeviceNotAvailable(action: HMSAction, deviceInfo: string, description = '') {\n      return new HMSException(\n        ErrorCodes.TracksErrors.DEVICE_NOT_AVAILABLE,\n        'DeviceNotAvailable',\n        action,\n        `[TRACK]: Capture device is no longer available - ${deviceInfo}`,\n        description,\n      );\n    },\n\n    DeviceInUse(action: HMSAction, deviceInfo: string, description = '') {\n      return new HMSException(\n        ErrorCodes.TracksErrors.DEVICE_IN_USE,\n        'DeviceInUse',\n        action,\n        `[TRACK]: Capture device is in use by another application - ${deviceInfo}`,\n        description,\n      );\n    },\n\n    DeviceLostMidway(action: HMSAction, deviceInfo: string, description = '') {\n      return new HMSException(\n        ErrorCodes.TracksErrors.DEVICE_LOST_MIDWAY,\n        'DeviceLostMidway',\n        action,\n        `Lost access to capture device midway - ${deviceInfo}`,\n        description,\n      );\n    },\n\n    NothingToReturn(\n      action: HMSAction,\n      description = '',\n      message = `There is no media to return. Please select either video or audio or both.`,\n    ) {\n      return new HMSException(\n        ErrorCodes.TracksErrors.NOTHING_TO_RETURN,\n        'NothingToReturn',\n        action,\n        message,\n        description,\n      );\n    },\n\n    InvalidVideoSettings(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.TracksErrors.INVALID_VIDEO_SETTINGS,\n        'InvalidVideoSettings',\n        action,\n        `Cannot enable simulcast when no video settings are provided`,\n        description,\n      );\n    },\n\n    AutoplayBlocked(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.TracksErrors.AUTOPLAY_ERROR,\n        'AutoplayBlocked',\n        action,\n        \"Autoplay blocked because the user didn't interact with the document first\",\n        description,\n      );\n    },\n\n    CodecChangeNotPermitted(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.TracksErrors.CODEC_CHANGE_NOT_PERMITTED,\n        'CodecChangeNotPermitted',\n        action,\n        `Codec can't be changed mid call.`,\n        description,\n      );\n    },\n\n    OverConstrained(action: HMSAction, deviceInfo: string, description = '') {\n      return new HMSException(\n        ErrorCodes.TracksErrors.OVER_CONSTRAINED,\n        'OverConstrained',\n        action,\n        `[TRACK]: Requested constraints cannot be satisfied with the device hardware - ${deviceInfo}`,\n        description,\n      );\n    },\n\n    NoAudioDetected(action: HMSAction, description = 'Please check the mic or use another audio input') {\n      return new HMSException(\n        ErrorCodes.TracksErrors.NO_AUDIO_DETECTED,\n        'NoAudioDetected',\n        action,\n        'No audio input detected from microphone',\n        description,\n      );\n    },\n\n    SystemDeniedPermission(action: HMSAction, deviceInfo: string, description = '') {\n      return new HMSException(\n        ErrorCodes.TracksErrors.SYSTEM_DENIED_PERMISSION,\n        'SystemDeniedPermission',\n        action,\n        `Operating System denied permission to access capture device - ${deviceInfo}`,\n        description,\n      );\n    },\n\n    CurrentTabNotShared() {\n      return new HMSException(\n        ErrorCodes.TracksErrors.CURRENT_TAB_NOT_SHARED,\n        'CurrentTabNotShared',\n        HMSAction.TRACK,\n        'The app requires you to share the current tab',\n        'You must screen share the current tab in order to proceed',\n      );\n    },\n\n    AudioPlaybackError(description: string) {\n      return new HMSException(\n        ErrorCodes.TracksErrors.AUDIO_PLAYBACK_ERROR,\n        'Audio playback error',\n        HMSAction.TRACK,\n        description,\n        description,\n      );\n    },\n  },\n\n  WebrtcErrors: {\n    CreateOfferFailed(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.WebrtcErrors.CREATE_OFFER_FAILED,\n        'CreateOfferFailed',\n        action,\n        `[${action.toString()}]: Failed to create offer. `,\n        description,\n      );\n    },\n\n    CreateAnswerFailed(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.WebrtcErrors.CREATE_ANSWER_FAILED,\n        'CreateAnswerFailed',\n        action,\n        `[${action.toString()}]: Failed to create answer. `,\n        description,\n      );\n    },\n\n    SetLocalDescriptionFailed(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.WebrtcErrors.SET_LOCAL_DESCRIPTION_FAILED,\n        'SetLocalDescriptionFailed',\n        action,\n        `[${action.toString()}]: Failed to set offer. `,\n        description,\n      );\n    },\n\n    SetRemoteDescriptionFailed(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.WebrtcErrors.SET_REMOTE_DESCRIPTION_FAILED,\n        'SetRemoteDescriptionFailed',\n        action,\n        `[${action.toString()}]: Failed to set answer. `,\n        description,\n        true,\n      );\n    },\n\n    ICEFailure(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.WebrtcErrors.ICE_FAILURE,\n        'ICEFailure',\n        action,\n        `[${action.toString()}]: Ice connection state FAILED`,\n        description,\n      );\n    },\n\n    ICEDisconnected(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.WebrtcErrors.ICE_DISCONNECTED,\n        'ICEDisconnected',\n        action,\n        `[${action.toString()}]: Ice connection state DISCONNECTED`,\n        description,\n      );\n    },\n  },\n\n  WebsocketMethodErrors: {\n    ServerErrors(code: number, action: HMSAction | HMSSignalMethod, description: string) {\n      return new HMSException(code, 'ServerErrors', action, description, description, terminalActions.includes(action));\n    },\n\n    AlreadyJoined(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.WebsocketMethodErrors.ALREADY_JOINED,\n        'AlreadyJoined',\n        action,\n        `[JOIN]: You have already joined this room.`,\n        description,\n      );\n    },\n\n    CannotJoinPreviewInProgress(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.WebsocketMethodErrors.CANNOT_JOIN_PREVIEW_IN_PROGRESS,\n        'CannotJoinPreviewInProgress',\n        action,\n        `[JOIN]: Cannot join if preview is in progress`,\n        description,\n      );\n    },\n  },\n\n  GenericErrors: {\n    NotConnected(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.GenericErrors.NOT_CONNECTED,\n        'NotConnected',\n        action,\n        `Client is not connected`,\n        description,\n      );\n    },\n\n    Signalling(action: HMSAction, description: string) {\n      return new HMSException(\n        ErrorCodes.GenericErrors.SIGNALLING,\n        'Signalling',\n        action,\n        `Unknown signalling error: ${action.toString()} ${description} `,\n        description,\n      );\n    },\n\n    Unknown(action: HMSAction, description: string) {\n      return new HMSException(\n        ErrorCodes.GenericErrors.UNKNOWN,\n        'Unknown',\n        action,\n        `Unknown exception: ${description}`,\n        description,\n      );\n    },\n\n    NotReady(action: HMSAction, description = '') {\n      return new HMSException(ErrorCodes.GenericErrors.NOT_READY, 'NotReady', action, description, description);\n    },\n\n    JsonParsingFailed(action: HMSAction, jsonMessage: string, description = '') {\n      return new HMSException(\n        ErrorCodes.GenericErrors.JSON_PARSING_FAILED,\n        'JsonParsingFailed',\n        action,\n        `Failed to parse JSON message - ${jsonMessage}`,\n        description,\n      );\n    },\n\n    TrackMetadataMissing(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.GenericErrors.TRACK_METADATA_MISSING,\n        'TrackMetadataMissing',\n        action,\n        `Track Metadata Missing`,\n        description,\n      );\n    },\n\n    RTCTrackMissing(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.GenericErrors.RTC_TRACK_MISSING,\n        'RTCTrackMissing',\n        action,\n        `RTC Track missing`,\n        description,\n      );\n    },\n\n    PeerMetadataMissing(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.GenericErrors.PEER_METADATA_MISSING,\n        'PeerMetadataMissing',\n        action,\n        `Peer Metadata Missing`,\n        description,\n      );\n    },\n\n    ValidationFailed(message: string, entity?: any) {\n      return new HMSException(\n        ErrorCodes.GenericErrors.INVALID_ROLE,\n        'ValidationFailed',\n        HMSAction.VALIDATION,\n        message,\n        entity ? JSON.stringify(entity) : '',\n      );\n    },\n\n    InvalidRole(action: HMSAction, description: string) {\n      return new HMSException(\n        ErrorCodes.GenericErrors.INVALID_ROLE,\n        'InvalidRole',\n        action,\n        `Invalid role. Join with valid role`,\n        description,\n        true,\n      );\n    },\n\n    PreviewAlreadyInProgress(action: HMSAction, description = '') {\n      return new HMSException(\n        ErrorCodes.GenericErrors.PREVIEW_IN_PROGRESS,\n        'PreviewAlreadyInProgress',\n        action,\n        `[Preview]: Cannot join if preview is in progress`,\n        description,\n      );\n    },\n\n    MissingMediaDevices() {\n      return new HMSException(\n        ErrorCodes.GenericErrors.MISSING_MEDIADEVICES,\n        'MissingMediaDevices',\n        HMSAction.JOIN,\n        `navigator.mediaDevices is undefined. 100ms SDK won't work on this website as WebRTC is not supported on HTTP endpoints(missing navigator.mediaDevices). Please ensure you're using the SDK either on localhost or a valid HTTPS endpoint.`,\n        '',\n        true,\n      );\n    },\n\n    MissingRTCPeerConnection() {\n      return new HMSException(\n        ErrorCodes.GenericErrors.MISSING_RTCPEERCONNECTION,\n        'MissingRTCPeerConnection',\n        HMSAction.JOIN,\n        `RTCPeerConnection which is a core requirement for WebRTC call was not found, this could be due to an unsupported browser or browser extensions blocking WebRTC`,\n        '',\n        true,\n      );\n    },\n  },\n\n  MediaPluginErrors: {\n    PlatformNotSupported(action: HMSAction, description = '') {\n      return new HMSException(\n        7001,\n        'PlatformNotSupported',\n        action,\n        'Check HMS Docs to see the list of supported platforms',\n        description,\n      );\n    },\n\n    InitFailed(action: HMSAction, description = '') {\n      return new HMSException(7002, 'InitFailed', action, 'Plugin init failed', description);\n    },\n\n    ProcessingFailed(action: HMSAction, description = '') {\n      return new HMSException(7003, 'ProcessingFailed', action, 'Plugin processing failed', description);\n    },\n\n    AddAlreadyInProgress(action: HMSAction, description = '') {\n      return new HMSException(7004, 'AddAlreadyInProgress', action, 'Plugin add already in progress', description);\n    },\n\n    DeviceNotSupported(action: HMSAction, description = '') {\n      return new HMSException(\n        7005,\n        'DeviceNotSupported',\n        action,\n        'Check HMS Docs to see the list of supported devices',\n        description,\n      );\n    },\n  },\n\n  PlaylistErrors: {\n    NoEntryToPlay(action: HMSAction, description: string) {\n      return new HMSException(\n        ErrorCodes.PlaylistErrors.NO_ENTRY_TO_PLAY,\n        'NoEntryToPlay',\n        action,\n        'Reached end of playlist',\n        description,\n      );\n    },\n    NoEntryPlaying(action: HMSAction, description: string) {\n      return new HMSException(\n        ErrorCodes.PlaylistErrors.NO_ENTRY_IS_PLAYING,\n        'NoEntryIsPlaying',\n        action,\n        'No entry is playing at this time',\n        description,\n      );\n    },\n  },\n};\n","import adapter from 'webrtc-adapter';\nimport { ErrorFactory, HMSAction } from './ErrorFactory';\nimport { HMSException } from './HMSException';\n\nexport enum HMSGetMediaActions {\n  UNKNOWN = 'unknown(video or audio)',\n  AUDIO = 'audio',\n  VIDEO = 'video',\n  AV = 'audio, video',\n  SCREEN = 'screen',\n}\n\nfunction getDefaultError(error: string, deviceInfo: string) {\n  const message = error.toLowerCase();\n  if (message.includes('device not found')) {\n    return ErrorFactory.TracksErrors.DeviceNotAvailable(HMSAction.TRACK, deviceInfo, error);\n  } else if (message.includes('permission denied')) {\n    return ErrorFactory.TracksErrors.CantAccessCaptureDevice(HMSAction.TRACK, deviceInfo, error);\n  } else {\n    return ErrorFactory.TracksErrors.GenericTrack(HMSAction.TRACK, error);\n  }\n}\n\n/**\n * # Edge Cases:\n * - Screenshare error: The problem is when block at OS level, chrome throws NotAllowedError(HMS code - 3001) while firefox throws NotFoundError(HMS code - 3002),\n * we will handle this internally and throw error as User block - 3001 and OS block - 3011 for all browsers.\n * Chrome -\n * User blocked - NotAllowedError - Permission denied\n * System blocked - NotAllowedError - Permission denied by system\n */\n// eslint-disable-next-line complexity\nfunction convertMediaErrorToHMSException(err: Error, deviceInfo = ''): HMSException {\n  /**\n   * Note: Adapter detects all chromium browsers as 'chrome'\n   */\n  const chromeSystemDenied =\n    adapter.browserDetails.browser === 'chrome' &&\n    err.name === 'NotAllowedError' &&\n    err.message.includes('denied by system');\n\n  if (chromeSystemDenied) {\n    return ErrorFactory.TracksErrors.SystemDeniedPermission(HMSAction.TRACK, deviceInfo, err.message);\n  }\n\n  if (adapter.browserDetails.browser === 'firefox' && err.name === 'NotFoundError') {\n    const hmsError = ErrorFactory.TracksErrors.SystemDeniedPermission(HMSAction.TRACK, deviceInfo, err.message);\n    hmsError.description = `Capture device is either blocked at Operating System level or not available - ${deviceInfo}`;\n    return hmsError;\n  }\n\n  switch (err.name) {\n    case 'OverconstrainedError':\n      return ErrorFactory.TracksErrors.OverConstrained(\n        HMSAction.TRACK,\n        deviceInfo,\n        (err as OverconstrainedError).constraint,\n      );\n    case 'NotAllowedError':\n      return ErrorFactory.TracksErrors.CantAccessCaptureDevice(HMSAction.TRACK, deviceInfo, err.message);\n    case 'NotFoundError':\n      return ErrorFactory.TracksErrors.DeviceNotAvailable(HMSAction.TRACK, deviceInfo, err.message);\n    case 'NotReadableError':\n      return ErrorFactory.TracksErrors.DeviceInUse(HMSAction.TRACK, deviceInfo, err.message);\n    case 'TypeError':\n      return ErrorFactory.TracksErrors.NothingToReturn(HMSAction.TRACK, err.message);\n    default:\n      return getDefaultError(err.message, deviceInfo);\n  }\n}\n\nexport function BuildGetMediaError(err: Error, deviceInfo: string): HMSException {\n  const exception = convertMediaErrorToHMSException(err, deviceInfo);\n  exception.addNativeError(err);\n  return exception;\n}\n","import { HMSChangeMultiTrackStateRequest, HMSChangeTrackStateRequest } from './change-track-state';\nimport { DeviceChangeListener } from './devices';\nimport { HMSLeaveRoomRequest } from './leave-room-request';\nimport { HMSMessage } from './message';\nimport { HMSConnectionQuality } from './peer';\nimport { HMSRoleChangeRequest } from './role-change-request';\nimport { HMSRoom } from './room';\nimport { SessionStoreUpdate } from './session-store';\nimport { HMSSpeaker } from './speaker';\nimport { HMSException } from '../error/HMSException';\nimport { HMSTrack } from '../media/tracks/HMSTrack';\nimport { HMSPeer } from '../sdk/models/peer';\n\nexport enum HMSRoomUpdate {\n  RECORDING_STATE_UPDATED = 'RECORDING_STATE_UPDATED',\n  BROWSER_RECORDING_STATE_UPDATED = 'BROWSER_RECORDING_STATE_UPDATED',\n  SERVER_RECORDING_STATE_UPDATED = 'SERVER_RECORDING_STATE_UPDATED',\n  RTMP_STREAMING_STATE_UPDATED = 'RTMP_STREAMING_STATE_UPDATED',\n  HLS_STREAMING_STATE_UPDATED = 'HLS_STREAMING_STATE_UPDATED',\n}\n\nexport enum HMSPeerUpdate {\n  PEER_JOINED,\n  PEER_LEFT,\n  AUDIO_TOGGLED,\n  VIDEO_TOGGLED,\n  BECAME_DOMINANT_SPEAKER,\n  RESIGNED_DOMINANT_SPEAKER,\n  STARTED_SPEAKING,\n  STOPPED_SPEAKING,\n  ROLE_UPDATED,\n  PEER_LIST,\n  NAME_UPDATED,\n  METADATA_UPDATED,\n}\n\nexport enum HMSTrackUpdate {\n  TRACK_ADDED,\n  TRACK_REMOVED,\n  TRACK_MUTED,\n  TRACK_UNMUTED,\n  TRACK_DESCRIPTION_CHANGED,\n  TRACK_DEGRADED,\n  TRACK_RESTORED,\n}\n\nexport interface HMSAudioListener {\n  onAudioLevelUpdate(speakers: HMSSpeaker[]): void;\n}\n\nexport interface HMSConnectionQualityListener {\n  onConnectionQualityUpdate(qualityUpdates: HMSConnectionQuality[]): void;\n}\n\nexport interface SessionStoreListener {\n  onSessionStoreUpdate(values: SessionStoreUpdate[]): void;\n}\n\nexport interface HMSUpdateListener extends DeviceChangeListener, SessionStoreListener {\n  onJoin(room: HMSRoom): void;\n  onRoomUpdate(type: HMSRoomUpdate, room: HMSRoom): void;\n  onPeerUpdate(type: HMSPeerUpdate, peer: HMSPeer | HMSPeer[] | null): void;\n  onTrackUpdate(type: HMSTrackUpdate, track: HMSTrack, peer: HMSPeer): void;\n  onMessageReceived(message: HMSMessage): void;\n  onError(error: HMSException): void;\n  onReconnecting(error: HMSException): void;\n  onReconnected(): void;\n  onRoleChangeRequest(request: HMSRoleChangeRequest): void;\n  onRoleUpdate(newRole: string): void;\n  onChangeTrackStateRequest(request: HMSChangeTrackStateRequest): void;\n  onChangeMultiTrackStateRequest(request: HMSChangeMultiTrackStateRequest): void;\n  onRemovedFromRoom(request: HMSLeaveRoomRequest): void;\n  onNetworkQuality?(score: number): void;\n}\n","export enum HMSSimulcastLayer {\n  NONE = 'none',\n  LOW = 'low',\n  MEDIUM = 'medium',\n  HIGH = 'high',\n}\n\nexport interface SimulcastLayer {\n  rid: string;\n  scaleResolutionDownBy: number;\n  maxBitrate: number;\n  maxFramerate: number;\n}\n\nexport interface SimulcastResolution {\n  width: number;\n  height: number;\n}\n\nexport interface SimulcastLayers {\n  layers?: SimulcastLayer[];\n}\n\nexport type HMSPreferredSimulcastLayer = Exclude<HMSSimulcastLayer, HMSSimulcastLayer.NONE>;\nexport interface HMSSimulcastLayerDefinition {\n  layer: HMSPreferredSimulcastLayer;\n  resolution: SimulcastResolution;\n}\n\nexport type RID = 'f' | 'h' | 'q';\n\nexport const simulcastMapping = {\n  f: HMSSimulcastLayer.HIGH,\n  h: HMSSimulcastLayer.MEDIUM,\n  q: HMSSimulcastLayer.LOW,\n};\n","export enum HMSVideoCodec {\n  VP8 = 'vp8',\n  VP9 = 'vp9',\n  H264 = 'h264',\n}\n\nexport enum HMSAudioCodec {\n  OPUS = 'opus',\n}\n\n/**\n * Refer https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints/facingMode\n * for more details.\n */\nexport enum HMSFacingMode {\n  USER = 'user',\n  ENVIRONMENT = 'environment',\n  LEFT = 'left',\n  RIGHT = 'right',\n}\n\nexport interface HMSAudioTrackSettings {\n  volume?: number;\n  codec?: HMSAudioCodec;\n  maxBitrate?: number;\n  deviceId?: string;\n  advanced?: Array<MediaTrackConstraintSet>;\n}\n\nexport interface HMSVideoTrackSettings {\n  width?: number;\n  height?: number;\n  codec?: HMSVideoCodec;\n  maxFramerate?: number;\n  maxBitrate?: number;\n  deviceId?: string;\n  advanced?: Array<MediaTrackConstraintSet>;\n  facingMode?: HMSFacingMode;\n}\n\n/**\n * Config to have control over screenshare being captured. Note that\n * not all fields are supported on all browsers. Even when they're supported\n * the fields acts as hints and the browser can override them.\n */\nexport interface HMSScreenShareConfig {\n  /**\n   * discard the video and only share audio track with others, useful\n   * for sharing music.\n   * @default false\n   */\n  audioOnly?: boolean;\n  /**\n   * do not give an option to share audio while screen sharing.\n   * @default false\n   */\n  videoOnly?: boolean;\n  /**\n   * preselect the relevant tab in screenshare menu\n   * browser - for preferring a browser tab\n   * window - for application window\n   * monitor - for full screen\n   * @default monitor\n   */\n  displaySurface?: 'browser' | 'monitor' | 'window';\n  /**\n   * show the current tab first in supported browser, throws\n   * error if user doesn't select current tab for sharing.\n   * @default false\n   */\n  forceCurrentTab?: boolean;\n  /**\n   * show the current tab first in supported browser, but don't throw error\n   * if user selects something else.\n   * @default false\n   */\n  preferCurrentTab?: boolean;\n  /**\n   * whether to show an option for sharing the current tab in the screen share\n   * prompt. Screen sharing current tab might lead to hall of mirrors effect.\n   * Default is exclude, if either of forceCurrentTab or preferCurrentTab are true,\n   * this is set to include.\n   * @default exclude\n   */\n  selfBrowserSurface?: 'include' | 'exclude';\n  /**\n   * whether to hint browser to show a \"share this tab instead\" option when\n   * tab is shared.\n   * Default is include, set to exclude if forceCurrentTab is true\n   * @default include\n   */\n  surfaceSwitching?: 'include' | 'exclude';\n  /**\n   * whether to show option for sharing system level audio if full screen\n   * is being shared. Not applicable if isVideoOnly is true.\n   * Note that sharing system audio will cause echo if mic is on.\n   * @default exclude\n   */\n  systemAudio?: 'include' | 'exclude';\n  /**\n   * used for region capture in screenshare, if the current tab is being screenshared\n   * the screenshare video track will be cropped to only this element. Will throw\n   * error if the element is not present in DOM.\n   */\n  cropElement?: HTMLDivElement;\n  /**\n   * used for region capture in screenshare, the screenshare video track will be\n   * cropped to only the passed in cropTarget. This cropTarget must come from\n   * the tab which is being shared\n   */\n  cropTarget?: object;\n}\n\nexport interface ScreenCaptureHandle {\n  handle: string;\n  exposeOrigin: boolean;\n}\n\nexport interface ScreenCaptureHandleConfig extends ScreenCaptureHandle {\n  permittedOrigins: string[];\n}\n","import { HMSException } from '../error/HMSException';\n\nexport interface HMSDeviceChangeEvent {\n  error?: HMSException;\n  devices: DeviceMap;\n  selection?: MediaDeviceInfo;\n  type: 'audioOutput' | 'audioInput' | 'video';\n}\n\nexport enum DeviceType {\n  videoInput = 'videoInput',\n  audioInput = 'audioInput',\n  audioOutput = 'audioOutput',\n}\n\nexport interface DeviceMap {\n  [DeviceType.audioInput]: MediaDeviceInfo[];\n  [DeviceType.audioOutput]: MediaDeviceInfo[];\n  [DeviceType.videoInput]: MediaDeviceInfo[];\n}\n\nexport interface DeviceChangeListener {\n  onDeviceChange?(event: HMSDeviceChangeEvent): void;\n}\n","export enum HMSPlaylistType {\n  audio = 'audio',\n  video = 'video',\n}\n\nexport interface HMSPlaylistItem<T> {\n  /**\n   * uniquely identifies a playlist item\n   */\n  id: string;\n  name: string;\n  type: HMSPlaylistType;\n  /**\n   * the url to play from, local files are not supported currently.\n   */\n  url: string;\n  /**\n   * any additional info, for eg. composer, musician etc.\n   */\n  metadata?: T;\n  /**\n   * duration in seconds\n   */\n  duration?: number;\n}\n\nexport interface HMSPlaylistProgressEvent {\n  type: HMSPlaylistType;\n  progress: number;\n}\n\nexport interface HMSPlaylistManager {\n  getList<T>(type: HMSPlaylistType): HMSPlaylistItem<T>[];\n  setList<T>(list: HMSPlaylistItem<T>[]): void;\n  clearList(type: HMSPlaylistType): Promise<void>;\n  playNext(type: HMSPlaylistType): Promise<void>;\n  playPrevious(type: HMSPlaylistType): Promise<void>;\n  removeItem(id: string, type: HMSPlaylistType): Promise<boolean>;\n  /**\n   * Seek forward/backward on selected type relative to currentTime\n   * @param value - number in seconds to go forward(if negative, it goes backwards)\n   * @param {HMSPlaylistType} type\n   */\n  seek(value: number, type: HMSPlaylistType): void;\n  /**\n   * Seek forward/backward on selected type - absolute value\n   * @param value - point in playlist item to go to\n   * @param {HMSPlaylistType} type\n   */\n  seekTo(value: number, type: HMSPlaylistType): void;\n  /**\n   * set volume on the selected type\n   * @param value - number between 0-100\n   * @param type\n   */\n  setVolume(value: number, type: HMSPlaylistType): void;\n  /**\n   * Get volume of selected type, between 0-100\n   * @param type\n   */\n  getVolume(type: HMSPlaylistType): number;\n  isPlaying(type: HMSPlaylistType): boolean;\n  getCurrentIndex(type: HMSPlaylistType): number;\n  getCurrentSelection<T>(type: HMSPlaylistType): HMSPlaylistItem<T> | undefined;\n  /**\n   * Returns a value between 0-100\n   * @param {HMSPlaylistType} type\n   */\n  getCurrentProgress(type: HMSPlaylistType): number;\n  /**\n   * Get the currentTime of audio/video based on type\n   * @param {HMSPlaylistType} type\n   */\n  getCurrentTime(type: HMSPlaylistType): number;\n  setEnabled(enabled: boolean, info: { id: string; type: HMSPlaylistType }): Promise<void>;\n  stop(type: HMSPlaylistType): Promise<void>;\n  /**\n   * Subscriber to progress event with a callback\n   * @param fn\n   */\n  onProgress(fn: (event: HMSPlaylistProgressEvent) => void): void;\n  /**\n   * This will be called when a new track is played\n   * @param fn\n   */\n  onNewTrackStart<T>(fn: (item: HMSPlaylistItem<T>) => void): void;\n\n  onPlaylistEnded(fn: (type: HMSPlaylistType) => void): void;\n  onCurrentTrackEnded<T>(fn: (item: HMSPlaylistItem<T>) => void): void;\n  /**\n   * Function to autoplay status i.e. whether next item in playlist after the current one ends\n   * @param {HMSPlaylistType} type\n   * @param {boolean} autoplay\n   */\n  setIsAutoplayOn(type: HMSPlaylistType, autoplay: boolean): void;\n  /**\n   * Get the current playback rate of audio/video playlist\n   * @param {HMSPlaylistType} type\n   */\n  getPlaybackRate(type: HMSPlaylistType): number;\n  /**\n   * set the current playback rate of audio/video playlist\n   * @param {HMSPlaylistType}type\n   * @param {number}value - number between 0.25 and 2.0\n   */\n  setPlaybackRate(type: HMSPlaylistType, value: number): void;\n}\n","import { IAnalyticsPropertiesProvider } from '../../analytics/IAnalyticsPropertiesProvider';\nimport { HMSAudioCodec, HMSAudioTrackSettings as IHMSAudioTrackSettings } from '../../interfaces';\n\nexport class HMSAudioTrackSettingsBuilder {\n  private _volume = 1.0;\n  private _codec?: HMSAudioCodec = HMSAudioCodec.OPUS;\n  private _maxBitrate?: number = 32;\n  private _deviceId = 'default';\n  private _advanced: Array<MediaTrackConstraintSet> = [\n    // @ts-ignore\n    { googEchoCancellation: { exact: true } },\n    // @ts-ignore\n    { googExperimentalEchoCancellation: { exact: true } },\n    // @ts-ignore\n    { autoGainControl: { exact: true } },\n    // @ts-ignore\n    { noiseSuppression: { exact: true } },\n    // @ts-ignore\n    { googHighpassFilter: { exact: true } },\n    // @ts-ignore\n    { googAudioMirroring: { exact: true } },\n  ];\n\n  volume(volume: number) {\n    if (!(0.0 <= volume && volume <= 1.0)) {\n      throw Error('volume can only be in range [0.0, 1.0]');\n    }\n    this._volume = volume;\n    return this;\n  }\n\n  codec(codec?: HMSAudioCodec) {\n    this._codec = codec;\n    return this;\n  }\n\n  maxBitrate(maxBitrate?: number) {\n    if (maxBitrate && maxBitrate <= 0) {\n      throw Error('maxBitrate should be >= 1');\n    }\n    this._maxBitrate = maxBitrate;\n    return this;\n  }\n\n  deviceId(deviceId: string) {\n    // TODO: Validate if device-id is OK\n    this._deviceId = deviceId;\n    return this;\n  }\n\n  advanced(advanced: Array<MediaTrackConstraintSet>) {\n    this._advanced = advanced;\n    return this;\n  }\n\n  build() {\n    return new HMSAudioTrackSettings(this._volume, this._codec, this._maxBitrate, this._deviceId, this._advanced);\n  }\n}\n\nexport class HMSAudioTrackSettings implements IHMSAudioTrackSettings, IAnalyticsPropertiesProvider {\n  readonly volume?: number;\n  readonly codec?: HMSAudioCodec;\n  readonly maxBitrate?: number;\n  readonly deviceId?: string;\n  readonly advanced?: Array<MediaTrackConstraintSet>;\n\n  constructor(\n    volume?: number,\n    codec?: HMSAudioCodec,\n    maxBitrate?: number,\n    deviceId?: string,\n    advanced?: Array<MediaTrackConstraintSet>,\n  ) {\n    this.volume = volume;\n    this.codec = codec;\n    this.maxBitrate = maxBitrate;\n    this.deviceId = deviceId;\n    this.advanced = advanced;\n  }\n\n  toConstraints(): MediaTrackConstraints {\n    return {\n      deviceId: this.deviceId,\n      advanced: this.advanced,\n    };\n  }\n\n  toAnalyticsProperties() {\n    return {\n      audio_bitrate: this.maxBitrate,\n      audio_codec: this.codec,\n    };\n  }\n}\n","import { IAnalyticsPropertiesProvider } from '../../analytics/IAnalyticsPropertiesProvider';\nimport { HMSFacingMode, HMSVideoCodec, HMSVideoTrackSettings as IHMSVideoTrackSettings } from '../../interfaces';\n\nexport class HMSVideoTrackSettingsBuilder {\n  private _width?: number = 320;\n  private _height?: number = 180;\n  private _codec?: HMSVideoCodec = HMSVideoCodec.VP8;\n  private _maxFramerate?: number = 30;\n  private _maxBitrate?: number = 150;\n  private _deviceId?: string;\n  private _facingMode?: HMSFacingMode;\n  private _advanced: Array<MediaTrackConstraintSet> = [];\n\n  setWidth(width?: number) {\n    this._width = width;\n    return this;\n  }\n\n  setHeight(height?: number) {\n    this._height = height;\n    return this;\n  }\n\n  codec(codec?: HMSVideoCodec) {\n    this._codec = codec;\n    return this;\n  }\n\n  maxFramerate(maxFramerate?: number) {\n    if (maxFramerate && maxFramerate <= 0) {\n      throw Error('maxFramerate should be >= 1');\n    }\n    this._maxFramerate = maxFramerate;\n    return this;\n  }\n\n  /**\n   * @param useDefault Ignored if maxBitrate is valid.\n   * If true and maxBitrate is undefined - sets a default value.\n   * If false and maxBitrate is undefined - sets undefined.\n   */\n  maxBitrate(maxBitrate?: number, useDefault = true) {\n    if (typeof maxBitrate === 'number' && maxBitrate <= 0) {\n      throw Error('maxBitrate should be >= 1');\n    }\n    this._maxBitrate = maxBitrate;\n    if (!this._maxBitrate && useDefault) {\n      this._maxBitrate = 150_000;\n    }\n    return this;\n  }\n\n  deviceId(deviceId: string) {\n    // TODO: Validate if device-id is OK\n    this._deviceId = deviceId;\n    return this;\n  }\n\n  advanced(advanced: Array<MediaTrackConstraintSet>) {\n    this._advanced = advanced;\n    return this;\n  }\n\n  facingMode(mode: HMSFacingMode) {\n    this._facingMode = mode;\n    return this;\n  }\n\n  build() {\n    return new HMSVideoTrackSettings(\n      this._width,\n      this._height,\n      this._codec,\n      this._maxFramerate,\n      this._deviceId,\n      this._advanced,\n      this._maxBitrate,\n      this._facingMode,\n    );\n  }\n}\n\nexport class HMSVideoTrackSettings implements IHMSVideoTrackSettings, IAnalyticsPropertiesProvider {\n  readonly width?: number;\n  readonly height?: number;\n  readonly codec?: HMSVideoCodec;\n  readonly maxFramerate?: number;\n  readonly maxBitrate?: number;\n  readonly deviceId?: string;\n  readonly advanced?: Array<MediaTrackConstraintSet>;\n  facingMode?: HMSFacingMode;\n\n  constructor(\n    width?: number,\n    height?: number,\n    codec?: HMSVideoCodec,\n    maxFramerate?: number,\n    deviceId?: string | undefined,\n    advanced?: Array<MediaTrackConstraintSet>,\n    maxBitrate?: number,\n    facingMode?: HMSFacingMode,\n  ) {\n    this.width = width;\n    this.height = height;\n    this.codec = codec;\n    this.maxFramerate = maxFramerate;\n    this.maxBitrate = maxBitrate;\n    this.deviceId = deviceId;\n    this.advanced = advanced;\n    this.facingMode = facingMode;\n  }\n\n  toConstraints(isScreenShare?: boolean): MediaTrackConstraints {\n    let dimensionConstraintKey = 'ideal';\n    if (isScreenShare) {\n      dimensionConstraintKey = 'max';\n    }\n    return {\n      width: { [dimensionConstraintKey]: this.width },\n      height: { [dimensionConstraintKey]: this.height },\n      frameRate: this.maxFramerate,\n      deviceId: this.deviceId,\n      facingMode: this.facingMode,\n    };\n  }\n\n  toAnalyticsProperties() {\n    return {\n      width: this.width,\n      height: this.height,\n      video_bitrate: this.maxBitrate,\n      framerate: this.maxFramerate,\n      video_codec: this.codec,\n      facingMode: this.facingMode,\n    };\n  }\n}\n","import { HMSAudioTrackSettings, HMSAudioTrackSettingsBuilder } from './HMSAudioTrackSettings';\nimport { HMSVideoTrackSettings, HMSVideoTrackSettingsBuilder } from './HMSVideoTrackSettings';\nimport { IAnalyticsPropertiesProvider } from '../../analytics/IAnalyticsPropertiesProvider';\nimport { ErrorFactory, HMSAction } from '../../error/ErrorFactory';\n\nexport class HMSTrackSettingsBuilder {\n  private _video: HMSVideoTrackSettings | null = new HMSVideoTrackSettingsBuilder().build();\n  private _audio: HMSAudioTrackSettings | null = new HMSAudioTrackSettingsBuilder().build();\n  private _screen: HMSVideoTrackSettings | null = new HMSVideoTrackSettingsBuilder().build();\n  private _simulcast = false;\n\n  video(video: HMSVideoTrackSettings | null) {\n    this._video = video;\n    return this;\n  }\n\n  audio(audio: HMSAudioTrackSettings | null) {\n    this._audio = audio;\n    return this;\n  }\n\n  screen(screen: HMSVideoTrackSettings | null) {\n    this._screen = screen;\n    return this;\n  }\n\n  simulcast(enabled: boolean) {\n    this._simulcast = enabled;\n    return this;\n  }\n\n  build() {\n    if (this._audio === null && this._video === null) {\n      throw ErrorFactory.TracksErrors.NothingToReturn(HMSAction.TRACK);\n    }\n\n    if (this._video === null && this._simulcast) {\n      throw ErrorFactory.TracksErrors.InvalidVideoSettings(\n        HMSAction.TRACK,\n        'Cannot enable simulcast when no video settings are provided',\n      );\n    }\n\n    return new HMSTrackSettings(this._video, this._audio, this._simulcast, this._screen || undefined);\n  }\n}\n\nexport class HMSTrackSettings implements IAnalyticsPropertiesProvider {\n  readonly video: HMSVideoTrackSettings | null | undefined;\n  readonly audio: HMSAudioTrackSettings | null | undefined;\n  readonly screen: HMSVideoTrackSettings | null;\n  readonly simulcast: boolean;\n\n  constructor(\n    video: HMSVideoTrackSettings | null | undefined,\n    audio: HMSAudioTrackSettings | null | undefined,\n    simulcast: boolean,\n    screen: HMSVideoTrackSettings | null = null,\n  ) {\n    this.video = video;\n    this.audio = audio;\n    this.simulcast = simulcast;\n    this.screen = screen;\n  }\n\n  toAnalyticsProperties() {\n    let properties = {\n      audio_enabled: this.audio !== null,\n      video_enabled: this.video !== null,\n    };\n\n    if (this.audio) {\n      properties = { ...this.audio.toAnalyticsProperties(), ...properties };\n    }\n\n    if (this.video) {\n      properties = { ...this.video.toAnalyticsProperties(), ...properties };\n    }\n\n    return properties;\n  }\n}\n","import { HMSTrack } from '../tracks/HMSTrack';\n\nexport default class HMSMediaStream {\n  readonly nativeStream: MediaStream;\n  readonly id: string;\n\n  readonly tracks = new Array<HMSTrack>();\n\n  constructor(nativeStream: MediaStream) {\n    this.nativeStream = nativeStream;\n    this.id = nativeStream.id;\n  }\n}\n","export const stringifyMediaStreamTrack = (track: MediaStreamTrack) => {\n  if (!track) {\n    return '';\n  }\n  return `{\n    trackId: ${track.id};\n    kind: ${track.kind};\n    enabled: ${track.enabled};\n    muted: ${track.muted};\n    readyState: ${track.readyState};\n  }`;\n};\n","import { HMSTrackType } from './HMSTrackType';\nimport { stringifyMediaStreamTrack } from '../../utils/json';\nimport HMSLogger from '../../utils/logger';\nimport HMSMediaStream from '../streams/HMSMediaStream';\n\nexport type HMSTrackSource = 'regular' | 'screen' | 'plugin' | 'audioplaylist' | 'videoplaylist' | string;\n\nexport abstract class HMSTrack {\n  /**\n   * @internal\n   */\n  readonly stream: HMSMediaStream;\n  source?: HMSTrackSource;\n  peerId?: string;\n  transceiver?: RTCRtpTransceiver;\n\n  /**\n   * @internal to print as a helpful identifier alongside logs\n   */\n  logIdentifier = '';\n\n  /** The native mediastream track, for local, this changes on mute/unmute(for video),\n   * and on device change.\n   * @internal */\n  nativeTrack: MediaStreamTrack;\n\n  /**\n   * Firefox doesn't respect the track id as sent from the backend when calling peerconnection.ontrack callback. This\n   * breaks correlation of future track updates from backend. So we're storing the sdp track id as present in the\n   * original offer along with the track as well and will let this override the native track id for any correlation\n   * purpose.\n   * This applies for remote tracks only.\n   * @internal */\n  private sdpTrackId?: string;\n\n  /**\n   * @internal\n   * The local track id is changed on mute/unmute or when device id changes, this is abstracted as an internal\n   * detail of HMSTrack and the variable is used for this enacapsulation where the first track id is remembered\n   * and treated as the fixed track id for this HMSTrack. This simplifies things for the user of the sdk who\n   * do not have to worry about changing track IDs.\n   * This applies for local tracks only.\n   */\n  private firstTrackId?: string;\n\n  abstract readonly type: HMSTrackType;\n\n  public get enabled(): boolean {\n    return this.nativeTrack.enabled;\n  }\n\n  /**\n   * firstTrackId => encapsulates change in local track ids\n   * sdpTrackId => fixes remote track updates correlation on firefox\n   */\n  public get trackId(): string {\n    return this.firstTrackId || this.sdpTrackId || this.nativeTrack.id;\n  }\n\n  getMediaTrackSettings(): MediaTrackSettings {\n    return this.nativeTrack.getSettings();\n  }\n\n  async setEnabled(value: boolean): Promise<void> {\n    this.nativeTrack.enabled = value;\n  }\n\n  protected constructor(stream: HMSMediaStream, track: MediaStreamTrack, source?: HMSTrackSource) {\n    this.stream = stream;\n    this.nativeTrack = track;\n    this.source = source;\n  }\n\n  /**\n   * @internal\n   */\n  setSdpTrackId(sdpTrackId: string) {\n    this.sdpTrackId = sdpTrackId;\n  }\n\n  /**\n   * @internal\n   */\n  protected setFirstTrackId(trackId: string) {\n    this.firstTrackId = trackId;\n  }\n\n  /**\n   * @internal\n   * take care of -\n   * 1. https://bugs.chromium.org/p/chromium/issues/detail?id=1232649\n   * 2. stopping any tracks\n   * 3. plugins related cleanups and stopping\n   */\n  cleanup() {\n    HMSLogger.d('[HMSTrack]', 'Stopping track', this.toString());\n    this.nativeTrack?.stop();\n  }\n\n  toString() {\n    return `{\n      streamId: ${this.stream.id};\n      peerId: ${this.peerId};\n      trackId: ${this.trackId};\n      mid: ${this.transceiver?.mid || '-'};\n      logIdentifier: ${this.logIdentifier};\n      source: ${this.source};\n      enabled: ${this.enabled};\n      nativeTrack: ${stringifyMediaStreamTrack(this.nativeTrack)};\n    }`;\n  }\n}\n","export enum HMSTrackType {\n  AUDIO = 'audio',\n  VIDEO = 'video',\n}\n","import HMSMediaStream from './HMSMediaStream';\nimport HMSSubscribeConnection from '../../connection/subscribe/subscribeConnection';\nimport { HMSSimulcastLayer } from '../../interfaces';\nimport HMSLogger from '../../utils/logger';\n\n/** @internal */\nexport default class HMSRemoteStream extends HMSMediaStream {\n  private readonly connection: HMSSubscribeConnection;\n  private audio = true;\n  private video = HMSSimulcastLayer.NONE;\n\n  constructor(nativeStream: MediaStream, connection: HMSSubscribeConnection) {\n    super(nativeStream);\n    this.connection = connection;\n  }\n\n  async setAudio(enabled: boolean, trackId: string, identifier?: string) {\n    if (this.audio === enabled) {\n      return;\n    }\n\n    this.audio = enabled;\n    HMSLogger.d(\n      `[Remote stream] ${identifier || ''} \n    streamId=${this.id}\n    trackId=${trackId}\n    subscribing audio - ${this.audio}`,\n    );\n    await this.connection.sendOverApiDataChannelWithResponse({\n      params: {\n        subscribed: this.audio,\n        track_id: trackId,\n      },\n      method: 'prefer-audio-track-state',\n    });\n  }\n\n  /**\n   * Sets the video layer after receiving new state from SFU. This is used when server side subscribe\n   * degradation is ON.\n   * @param layer is simulcast layer to be set\n   * @param identifier is stream identifier to be printed in logs\n   */\n  setVideoLayerLocally(layer: HMSSimulcastLayer, identifier: string, source: string) {\n    this.video = layer;\n    HMSLogger.d(`[Remote stream] ${identifier}\n    streamId=${this.id}\n    source: ${source}\n    Setting layer field to=${layer}`);\n  }\n\n  /**\n   * Sets the video layer and updates the track state to SFU via api datachannel. This is used when client\n   * side subscribe degradation is ON or client unsubscribes the current track.\n   * @param layer is simulcast layer to be set\n   * @param identifier is stream identifier to be printed in logs\n   */\n  setVideoLayer(layer: HMSSimulcastLayer, trackId: string, identifier: string, source: string) {\n    HMSLogger.d(\n      `[Remote stream] ${identifier} \n      streamId=${this.id}\n      trackId=${trackId} \n      source: ${source} request ${layer} layer`,\n    );\n    this.setVideoLayerLocally(layer, identifier, source);\n    return this.connection.sendOverApiDataChannelWithResponse({\n      params: {\n        max_spatial_layer: this.video,\n        track_id: trackId,\n      },\n      method: 'prefer-video-track-state',\n    });\n  }\n\n  /**\n   * @deprecated\n   * @returns {HMSSimulcastLayer}\n   */\n  getSimulcastLayer() {\n    return this.video;\n  }\n\n  getVideoLayer() {\n    return this.video;\n  }\n\n  isAudioSubscribed() {\n    return this.audio;\n  }\n}\n","import { HMSTrack, HMSTrackSource } from './HMSTrack';\nimport { HMSTrackType } from './HMSTrackType';\nimport HMSLogger from '../../utils/logger';\nimport HMSMediaStream from '../streams/HMSMediaStream';\nimport HMSRemoteStream from '../streams/HMSRemoteStream';\n\nexport class HMSAudioTrack extends HMSTrack {\n  readonly type: HMSTrackType = HMSTrackType.AUDIO;\n  private audioElement: HTMLAudioElement | null = null;\n  private outputDevice?: MediaDeviceInfo;\n\n  constructor(stream: HMSMediaStream, track: MediaStreamTrack, source?: string) {\n    super(stream, track, source as HMSTrackSource);\n    if (track.kind !== 'audio') {\n      throw new Error(\"Expected 'track' kind = 'audio'\");\n    }\n  }\n\n  getVolume() {\n    return this.audioElement ? this.audioElement.volume * 100 : null;\n  }\n\n  async setVolume(value: number) {\n    if (value < 0 || value > 100) {\n      throw Error('Please pass a valid number between 0-100');\n    }\n    // Don't subscribe to audio when volume is 0\n    await this.subscribeToAudio(value === 0 ? false : this.enabled);\n    if (this.audioElement) {\n      this.audioElement.volume = value / 100;\n    }\n  }\n\n  setAudioElement(element: HTMLAudioElement | null) {\n    HMSLogger.d('[HMSAudioTrack]', this.logIdentifier, 'adding audio element', `${this}`, element);\n    this.audioElement = element;\n  }\n\n  /**\n   * @internal\n   * @returns {HTMLAudioElement | null}\n   */\n  getAudioElement(): HTMLAudioElement | null {\n    return this.audioElement;\n  }\n\n  getOutputDevice() {\n    return this.outputDevice;\n  }\n\n  cleanup() {\n    super.cleanup();\n    if (this.audioElement) {\n      this.audioElement.srcObject = null;\n      this.audioElement.remove();\n      this.audioElement = null;\n    }\n  }\n\n  async setOutputDevice(device?: MediaDeviceInfo) {\n    if (!device) {\n      HMSLogger.d('[HMSAudioTrack]', this.logIdentifier, 'device is null', `${this}`);\n      return;\n    }\n    if (!this.audioElement) {\n      HMSLogger.d('[HMSAudioTrack]', this.logIdentifier, 'no audio element to set output', `${this}`);\n      this.outputDevice = device;\n      return;\n    }\n    try {\n      // @ts-ignore\n      if (typeof this.audioElement.setSinkId === 'function') {\n        // @ts-ignore\n        await this.audioElement?.setSinkId(device.deviceId);\n        this.outputDevice = device;\n      }\n    } catch (error) {\n      HMSLogger.d('[HMSAudioTrack]', 'error in setSinkId', error);\n    }\n  }\n\n  protected async subscribeToAudio(value: boolean) {\n    if (this.stream instanceof HMSRemoteStream) {\n      await this.stream.setAudio(value, this.trackId, this.logIdentifier);\n    }\n  }\n}\n","import { SelectedDevices } from './DeviceManager';\nimport { DeviceMap } from '../interfaces';\nimport { LocalStorage } from '../utils/local-storage';\nimport HMSLogger from '../utils/logger';\n\ntype DeviceInfo = { deviceId?: string; groupId?: string };\n/**\n * This class is to manage storing and retrieving selected devices\n * from localstorage\n * @internal\n */\nclass DeviceStorage {\n  private storage = new LocalStorage<SelectedDevices>('hms-device-selection');\n  private remember = false;\n  private devices?: DeviceMap;\n  private readonly TAG = '[HMSDeviceStorage]';\n\n  setDevices(devices: DeviceMap) {\n    this.devices = devices;\n  }\n\n  rememberDevices(value: boolean) {\n    this.remember = value;\n  }\n\n  /**\n   * This will update the passed in type value in storage\n   * @param {string} type - One of audioInput | videoInput | audioOutput\n   * @param {DeviceInfo} param\n   * @returns {void}\n   */\n  updateSelection(type: 'audioInput' | 'videoInput' | 'audioOutput', { deviceId, groupId }: DeviceInfo) {\n    if (!this.devices || !this.remember) {\n      return;\n    }\n    const newSelection = this.devices[type].find(device => this.isSame({ deviceId, groupId }, device));\n    if (!newSelection) {\n      HMSLogger.w(this.TAG, `Could not find device with deviceId: ${deviceId}, groupId: ${groupId}`);\n      return;\n    }\n    const selectedDevices = this.storage.get() || {};\n    if (type === 'audioOutput') {\n      selectedDevices[type] = newSelection as MediaDeviceInfo;\n    } else {\n      selectedDevices[type] = newSelection as MediaDeviceInfo;\n    }\n    this.storage.set(selectedDevices);\n  }\n\n  getSelection() {\n    if (!this.remember) {\n      return undefined;\n    }\n    return this.storage.get();\n  }\n\n  cleanup() {\n    this.remember = false;\n    this.devices = undefined;\n  }\n\n  private isSame(current: DeviceInfo, device: DeviceInfo) {\n    // Safari doesn't give groupId from nativeTrack. Check if groupId's match or current groupId is not present\n    return current.deviceId === device.deviceId && (current.groupId === device.groupId || !current.groupId);\n  }\n}\n\nexport const DeviceStorageManager = new DeviceStorage();\n","/**\n * A plugin implementing this interface can be registered with HMSLocalAudioTrack to transform, process or\n * analyze the local audio track.These can include applications like background noise removal, speech commands, live\n * analysis of audio etc. The below functions are required for the sdk to properly use the plugin, usually\n * the plugin would also be exposing some public functions of its own for the UI to control its working.\n */\n\nexport interface HMSAudioPlugin {\n  /**\n   * This function will be called by the SDK for audio track which the plugin needs to process.\n   * The reason audio context is also part of the interface is that it's recommeneded to reuse on audio context\n   * instead of creating new for every use - https://developer.mozilla.org/en-US/docs/Web/API/AudioContext\n   */\n  processAudioTrack(ctx: AudioContext, source: AudioNode): Promise<AudioNode>;\n\n  /**\n   * This function will be called before the call to init, it is used to check whether the plugin supports current\n   * OS, browser and audio device or not. An error object will be thrown back to the user if they try to use an unsupported plugin.\n   */\n  checkSupport(ctx?: AudioContext): HMSPluginSupportResult;\n\n  /**\n   * @deprecated. Will be deleted in future updates. Use checkSupport instead.\n   */\n  isSupported(): boolean;\n\n  /**\n   * This function will be called in the beginning for initialization which may include tasks like setting up\n   * variables, loading ML models etc. This can be used by a plugin to ensure it's prepared at the time\n   * processAudio is called.\n   */\n  init(): Promise<void> | void;\n\n  /**\n   * The name is meant to uniquely specify a plugin instance. This will be used to track number of plugins\n   * added to the track, and same name won't be allowed twice.\n   */\n  getName(): string;\n\n  /**\n   This sets the Plugin type @see HMSAudioPluginType, processing will happen\n   based on the type of plugin\n   */\n  getPluginType(): HMSAudioPluginType;\n  /*\n   * the plugin can use this function to dispose off its resources. It'll be called when the plugin instance is\n   * no longer needed at the end.\n   */\n  stop(): void;\n}\n\n/**\n * Specifies the type of the plugin a transforming plugin will get an output audio node to give the resulting\n * transformation. While an analyzing plugin will only be passed the input node.\n * For analyse plugins, you can return the source node passed to plugin.processTrack to not modify anything\n */\nexport enum HMSAudioPluginType {\n  TRANSFORM = 'TRANSFORM',\n  ANALYZE = 'ANALYZE',\n}\n\nexport interface HMSPluginSupportResult {\n  isSupported: boolean;\n  errType?: HMSPluginUnsupportedTypes;\n  errMsg?: string;\n}\n\nexport enum HMSPluginUnsupportedTypes {\n  PLATFORM_NOT_SUPPORTED = 'PLATFORM_NOT_SUPPORTED',\n  DEVICE_NOT_SUPPORTED = 'DEVICE_NOT_SUPPORTED',\n}\n","import AnalyticsEvent from './AnalyticsEvent';\nimport { AnalyticsEventLevel } from './AnalyticsEventLevel';\nimport { HMSException } from '../error/HMSException';\n\nexport default class MediaPluginsAnalyticsFactory {\n  static failure(pluginName: string, error: HMSException) {\n    const name = 'mediaPlugin.failed';\n    const level = AnalyticsEventLevel.ERROR;\n    const properties = { plugin_name: pluginName, ...error.toAnalyticsProperties() };\n\n    return new AnalyticsEvent({ name, level, properties });\n  }\n\n  static audioPluginFailure(pluginName: string, sampleRate: number, error: HMSException) {\n    const name = 'mediaPlugin.failed';\n    const level = AnalyticsEventLevel.ERROR;\n    const properties = { plugin_name: pluginName, sampleRate: sampleRate, ...error.toAnalyticsProperties() };\n\n    return new AnalyticsEvent({ name, level, properties });\n  }\n\n  static audioPluginStats({\n    pluginName,\n    duration,\n    loadTime,\n    sampleRate,\n  }: {\n    pluginName: string;\n    duration: number;\n    loadTime: number;\n    sampleRate: number;\n  }) {\n    const name = 'mediaPlugin.stats';\n    const level = AnalyticsEventLevel.INFO;\n    const properties = {\n      plugin_name: pluginName,\n      duration: duration,\n      load_time: loadTime,\n      sampleRate: sampleRate,\n    };\n    return new AnalyticsEvent({ name, level, properties });\n  }\n\n  static stats({\n    pluginName,\n    duration,\n    loadTime,\n    avgPreProcessingTime,\n    avgProcessingTime,\n    inputFrameRate,\n    pluginFrameRate,\n  }: {\n    pluginName: string;\n    duration: number;\n    loadTime: number;\n    avgPreProcessingTime: number;\n    avgProcessingTime: number;\n    inputFrameRate: number;\n    pluginFrameRate: number;\n  }) {\n    const name = 'mediaPlugin.stats';\n    const level = AnalyticsEventLevel.INFO;\n    const properties = {\n      plugin_name: pluginName,\n      duration: duration,\n      load_time: loadTime,\n      avg_preprocessing_time: avgPreProcessingTime,\n      avg_processing_time: avgProcessingTime,\n      input_frame_rate: inputFrameRate,\n      plugin_frame_rate: pluginFrameRate,\n    };\n    return new AnalyticsEvent({ name, level, properties });\n  }\n}\n","import MediaPluginsAnalyticsFactory from '../../analytics/MediaPluginsAnalyticsFactory';\nimport { ErrorFactory, HMSAction } from '../../error/ErrorFactory';\nimport { HMSException } from '../../error/HMSException';\nimport { EventBus } from '../../events/EventBus';\nimport HMSLogger from '../../utils/logger';\n\nexport class AudioPluginsAnalytics {\n  private readonly TAG = '[AudioPluginsAnalytics]';\n  private readonly initTime: Record<string, number>;\n  private readonly addedTimestamps: Record<string, number>;\n  private readonly pluginAdded: Record<string, boolean>;\n  private readonly pluginSampleRate: Record<string, number>;\n\n  constructor(private eventBus: EventBus) {\n    this.initTime = {};\n    this.addedTimestamps = {};\n    this.pluginAdded = {};\n    this.pluginSampleRate = {};\n  }\n\n  added(name: string, sampleRate: number) {\n    this.pluginAdded[name] = true;\n    this.addedTimestamps[name] = Date.now();\n    this.initTime[name] = 0;\n    this.pluginSampleRate[name] = sampleRate;\n  }\n\n  removed(name: string) {\n    //send stats\n    if (this.pluginAdded[name]) {\n      const stats = {\n        pluginName: name,\n        // duration in seconds\n        duration: Math.floor((Date.now() - this.addedTimestamps[name]) / 1000),\n        loadTime: this.initTime[name],\n        sampleRate: this.pluginSampleRate[name],\n      };\n      //send stats\n      this.eventBus.analytics.publish(MediaPluginsAnalyticsFactory.audioPluginStats(stats));\n      //clean the plugin details\n      this.clean(name);\n    }\n  }\n\n  failure(name: string, error: HMSException) {\n    // send failure event\n    if (this.pluginAdded[name]) {\n      this.eventBus.analytics.publish(\n        MediaPluginsAnalyticsFactory.audioPluginFailure(name, this.pluginSampleRate[name], error),\n      );\n      //clean the plugin details\n      this.clean(name);\n    }\n  }\n\n  async initWithTime<T>(name: string, initFn: () => Promise<T>) {\n    if (this.initTime[name]) {\n      HMSLogger.i(this.TAG, `Plugin Already loaded ${name}, time it took: ${this.initTime[name]}`);\n      return;\n    }\n    let time: number | undefined = undefined;\n    try {\n      time = await this.timeInMs(initFn);\n      HMSLogger.i(this.TAG, `Time taken for Plugin ${name} initialization : ${time}`);\n    } catch (e) {\n      //Failed during initialization of plugin(model loading etc...)\n      const err = ErrorFactory.MediaPluginErrors.InitFailed(\n        HMSAction.AUDIO_PLUGINS,\n        `failed during initialization of plugin${(e as Error).message || e}`,\n      );\n      HMSLogger.e(this.TAG, err);\n      this.failure(name, err);\n      throw err;\n    }\n    if (time) {\n      this.initTime[name] = time;\n    }\n  }\n\n  private async timeInMs<T>(fn: () => Promise<T>): Promise<number> {\n    const start = Date.now();\n    await fn();\n    return Math.floor(Date.now() - start);\n  }\n\n  private clean(name: string) {\n    delete this.addedTimestamps[name];\n    delete this.initTime[name];\n    delete this.pluginAdded[name];\n    delete this.pluginSampleRate[name];\n  }\n}\n","import { AudioPluginsAnalytics } from './AudioPluginsAnalytics';\nimport { HMSAudioPlugin, HMSPluginUnsupportedTypes } from './HMSAudioPlugin'; //HMSAudioPluginType\nimport { ErrorFactory, HMSAction } from '../../error/ErrorFactory';\nimport { EventBus } from '../../events/EventBus';\nimport { HMSLocalAudioTrack } from '../../media/tracks';\nimport HMSLogger from '../../utils/logger';\n\nconst DEFAULT_SAMPLE_RATE = 48000;\n\n//Handling sample rate error in case of firefox\nconst checkBrowserSupport = () => {\n  return navigator.userAgent.indexOf('Firefox') !== -1;\n};\n\n/**\n * This class manages applying different plugins on a local audio track. Plugins which need to modify the audio\n * are called in the order they were added. Plugins which do not need to modify the audio are called\n * with the original input.\n *\n * Concepts -\n * Audio Plugin - A module which can take in input audio, do some processing on it and return an AudioNode\n *\n * For Each Plugin, an AudioNode will be created and the source will be created from local audio track.\n * Each Audio node will be connected in the following order\n * source -> first plugin -> second plugin -> third plugin .. so on\n * @see HMSAudioPlugin\n */\nexport class HMSAudioPluginsManager {\n  private readonly TAG = '[AudioPluginsManager]';\n  private readonly hmsTrack: HMSLocalAudioTrack;\n  // Map maintains the insertion order\n  private readonly pluginsMap: Map<string, HMSAudioPlugin>;\n  private audioContext?: AudioContext;\n\n  private sourceNode?: MediaStreamAudioSourceNode;\n  private destinationNode?: MediaStreamAudioDestinationNode;\n  private prevAudioNode?: any;\n  private analytics: AudioPluginsAnalytics;\n  // This will replace the native track in peer connection when plugins are enabled\n  private outputTrack?: MediaStreamTrack;\n  private pluginAddInProgress = false;\n\n  constructor(track: HMSLocalAudioTrack, eventBus: EventBus) {\n    this.hmsTrack = track;\n    this.pluginsMap = new Map();\n    this.analytics = new AudioPluginsAnalytics(eventBus);\n    this.createAudioContext();\n  }\n\n  getPlugins(): string[] {\n    return Array.from(this.pluginsMap.keys());\n  }\n\n  async addPlugin(plugin: HMSAudioPlugin) {\n    const name = plugin.getName?.();\n    if (!name) {\n      HMSLogger.w('no name provided by the plugin');\n      return;\n    }\n    if (this.pluginAddInProgress) {\n      const err = ErrorFactory.MediaPluginErrors.AddAlreadyInProgress(\n        HMSAction.AUDIO_PLUGINS,\n        'Add Plugin is already in Progress',\n      );\n      this.analytics.added(name, this.audioContext!.sampleRate);\n      this.analytics.failure(name, err);\n      HMSLogger.w(\"can't add another plugin when previous add is in progress\");\n      throw err;\n    }\n\n    this.pluginAddInProgress = true;\n\n    try {\n      await this.addPluginInternal(plugin);\n    } finally {\n      this.pluginAddInProgress = false;\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  private async addPluginInternal(plugin: HMSAudioPlugin) {\n    const name = plugin.getName?.();\n    if (this.pluginsMap.get(name)) {\n      HMSLogger.w(this.TAG, `plugin - ${name} already added.`);\n      return;\n    }\n\n    await this.validateAndThrow(name, plugin);\n\n    try {\n      if (this.pluginsMap.size === 0) {\n        await this.initAudioNodes();\n      } else if (this.prevAudioNode) {\n        // Previous node will be connected to destination. Disconnect that\n        this.prevAudioNode.disconnect();\n      }\n      this.analytics.added(name, this.audioContext!.sampleRate);\n      await this.analytics.initWithTime(name, async () => plugin.init());\n      this.pluginsMap.set(name, plugin);\n      await this.processPlugin(plugin);\n      await this.connectToDestination();\n    } catch (err) {\n      HMSLogger.e(this.TAG, 'failed to add plugin', err);\n      throw err;\n    }\n  }\n\n  validatePlugin(plugin: HMSAudioPlugin) {\n    return plugin.checkSupport(this.audioContext);\n  }\n\n  async validateAndThrow(name: string, plugin: HMSAudioPlugin) {\n    const result = this.validatePlugin(plugin);\n    if (result.isSupported) {\n      HMSLogger.i(this.TAG, `plugin is supported,- ${plugin.getName()}`);\n    } else {\n      //Needed to re-add in the reprocess case, to send error message in case of failure\n      this.analytics.added(name, this.audioContext!.sampleRate);\n      if (result.errType === HMSPluginUnsupportedTypes.PLATFORM_NOT_SUPPORTED) {\n        const err = ErrorFactory.MediaPluginErrors.PlatformNotSupported(\n          HMSAction.AUDIO_PLUGINS,\n          'platform not supported, see docs',\n        );\n        this.analytics.failure(name, err);\n        await this.cleanup();\n        throw err;\n      } else if (result.errType === HMSPluginUnsupportedTypes.DEVICE_NOT_SUPPORTED) {\n        const err = ErrorFactory.MediaPluginErrors.DeviceNotSupported(\n          HMSAction.AUDIO_PLUGINS,\n          'audio device not supported, see docs',\n        );\n        this.analytics.failure(name, err);\n        await this.cleanup();\n        throw err;\n      }\n    }\n  }\n\n  async removePlugin(plugin: HMSAudioPlugin) {\n    await this.removePluginInternal(plugin);\n    if (this.pluginsMap.size === 0) {\n      // remove all previous nodes\n      await this.cleanup();\n      HMSLogger.i(this.TAG, `No plugins left, stopping plugins loop`);\n      await this.hmsTrack.setProcessedTrack(undefined);\n    } else {\n      // Reprocess the remaining plugins again because there is no way to connect\n      // the source of the removed plugin to destination of removed plugin\n      await this.reprocessPlugins();\n    }\n  }\n\n  async cleanup() {\n    for (const plugin of this.pluginsMap.values()) {\n      await this.removePluginInternal(plugin);\n    }\n    await this.hmsTrack.setProcessedTrack(undefined);\n    //disconnect nodes, stop track\n    this.sourceNode?.disconnect();\n    this.prevAudioNode?.disconnect();\n    this.outputTrack?.stop();\n\n    // reset all variables\n    this.sourceNode = undefined;\n    this.destinationNode = undefined;\n    this.prevAudioNode = undefined;\n    this.outputTrack = undefined;\n  }\n\n  //Keeping it separate since we are initializing context only once\n  async closeContext() {\n    this.audioContext?.close();\n    this.audioContext = undefined;\n  }\n\n  async reprocessPlugins() {\n    if (this.pluginsMap.size === 0 || !this.sourceNode) {\n      return;\n    }\n    const plugins = Array.from(this.pluginsMap.values()); // make a copy of plugins\n    await this.cleanup();\n    await this.initAudioNodes();\n    for (const plugin of plugins) {\n      await this.addPlugin(plugin);\n    }\n  }\n\n  private async initAudioNodes() {\n    if (this.audioContext) {\n      if (!this.sourceNode) {\n        const audioStream = new MediaStream([this.hmsTrack.nativeTrack]);\n        this.sourceNode = this.audioContext.createMediaStreamSource(audioStream);\n      }\n      if (!this.destinationNode) {\n        this.destinationNode = this.audioContext.createMediaStreamDestination();\n        this.outputTrack = this.destinationNode.stream.getAudioTracks()[0];\n        try {\n          await this.hmsTrack.setProcessedTrack(this.outputTrack);\n        } catch (err) {\n          HMSLogger.e(this.TAG, 'error in setting processed track', err);\n          throw err;\n        }\n      }\n    }\n  }\n\n  private async processPlugin(plugin: HMSAudioPlugin) {\n    try {\n      const currentNode = await plugin.processAudioTrack(\n        this.audioContext!, // it is always present at this point\n        this.prevAudioNode || this.sourceNode,\n      );\n      if (this.prevAudioNode) {\n        // if previous node was present while adding this plugin\n        // it is disconnected from destination, connect the previous node to\n        // to the current node\n        this.prevAudioNode.connect(currentNode);\n      }\n      this.prevAudioNode = currentNode;\n    } catch (err) {\n      const name = plugin.getName();\n      //TODO error happened on processing of plugin notify UI\n      HMSLogger.e(this.TAG, `error in processing plugin ${name}`, err);\n      //remove plugin from loop and stop analytics for it\n      await this.removePluginInternal(plugin);\n    }\n  }\n\n  private async connectToDestination() {\n    try {\n      if (this.prevAudioNode && this.destinationNode && this.prevAudioNode.context === this.destinationNode.context) {\n        this.prevAudioNode.connect(this.destinationNode);\n      }\n    } catch (err) {\n      HMSLogger.e(this.TAG, 'error in connecting to destination node', err);\n    }\n  }\n\n  private async removePluginInternal(plugin: HMSAudioPlugin) {\n    const name = plugin.getName?.();\n    if (!this.pluginsMap.get(name)) {\n      HMSLogger.w(this.TAG, `plugin - ${name} not found to remove.`);\n      return;\n    }\n    HMSLogger.i(this.TAG, `removing plugin ${name}`);\n    this.pluginsMap.delete(name);\n    plugin.stop();\n    this.analytics.removed(name);\n  }\n\n  private createAudioContext() {\n    if (!this.audioContext) {\n      if (checkBrowserSupport()) {\n        /**\n        Not setting default sample rate for firefox since connecting\n        audio nodes from context with different sample rate is not\n        supported in firefox\n */\n        this.audioContext = new AudioContext();\n      } else {\n        this.audioContext = new AudioContext({ sampleRate: DEFAULT_SAMPLE_RATE });\n      }\n    }\n  }\n}\n","import { BuildGetMediaError, HMSGetMediaActions } from '../error/utils';\nimport { HMSAudioTrackSettings, HMSVideoTrackSettings } from '../media/settings';\n\nexport async function getAudioTrack(settings: HMSAudioTrackSettings): Promise<MediaStreamTrack> {\n  try {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      audio: settings ? settings.toConstraints() : false,\n    });\n    return stream.getAudioTracks()[0];\n  } catch (err) {\n    throw BuildGetMediaError(err as Error, HMSGetMediaActions.AUDIO);\n  }\n}\n\nexport async function getVideoTrack(settings: HMSVideoTrackSettings): Promise<MediaStreamTrack> {\n  try {\n    const stream = await navigator.mediaDevices.getUserMedia({\n      video: settings ? settings.toConstraints() : false,\n    });\n    return stream.getVideoTracks()[0];\n  } catch (err) {\n    throw BuildGetMediaError(err as Error, HMSGetMediaActions.VIDEO);\n  }\n}\n\n// To differentiate between normal track and empty track.\nexport function isEmptyTrack(track: MediaStreamTrack) {\n  // Firefox gives '' as label for empty track(created from audio context)\n  return 'canvas' in track || track.label === 'MediaStreamAudioDestinationNode' || track.label === '';\n}\n","import HMSLogger from './logger';\nimport { BuildGetMediaError, HMSGetMediaActions } from '../error/utils';\n\nexport async function getLocalStream(constraints: MediaStreamConstraints): Promise<MediaStream> {\n  try {\n    const stream = await navigator.mediaDevices.getUserMedia(constraints);\n    return stream;\n  } catch (err) {\n    throw BuildGetMediaError(err as Error, HMSGetMediaActions.AV);\n  }\n}\n\nexport async function getLocalScreen(constraints: MediaStreamConstraints['video']): Promise<MediaStream> {\n  try {\n    // @ts-ignore [https://github.com/microsoft/TypeScript/issues/33232]\n    const stream = await navigator.mediaDevices.getDisplayMedia({ video: constraints, audio: false });\n    return stream;\n  } catch (err) {\n    throw BuildGetMediaError(err as Error, HMSGetMediaActions.SCREEN);\n  }\n}\n\ninterface MediaDeviceGroups {\n  audioinput: MediaDeviceInfo[];\n  audiooutput: MediaDeviceInfo[];\n  videoinput: MediaDeviceInfo[];\n}\n\nexport async function getLocalDevices(): Promise<MediaDeviceGroups> {\n  try {\n    const devices = await navigator.mediaDevices.enumerateDevices();\n    const deviceGroups: MediaDeviceGroups = {\n      audioinput: [],\n      audiooutput: [],\n      videoinput: [],\n    };\n    devices.forEach(device => deviceGroups[device.kind].push(device));\n    return deviceGroups;\n  } catch (err) {\n    throw BuildGetMediaError(err as Error, HMSGetMediaActions.AV);\n  }\n}\n\nexport interface HMSAudioContext {\n  audioContext: AudioContext | null;\n  getAudioContext: () => AudioContext;\n  resumeContext: () => Promise<void>;\n}\n\nexport const HMSAudioContextHandler: HMSAudioContext = {\n  audioContext: null,\n  getAudioContext() {\n    if (!this.audioContext) {\n      this.audioContext = new AudioContext();\n    }\n    return this.audioContext;\n  },\n  async resumeContext() {\n    try {\n      return await this.getAudioContext().resume();\n    } catch (error) {\n      HMSLogger.e('AudioContext', error);\n    }\n  },\n};\n","export interface IQueue<T> {\n  size(): number;\n  enqueue(item: T): void;\n  dequeue(): T | undefined;\n}\n\nexport class Queue<T> implements IQueue<T> {\n  protected storage: T[] = [];\n\n  constructor(private capacity: number = Infinity) {}\n\n  size() {\n    return this.storage.length;\n  }\n\n  toList() {\n    return this.storage.slice(0);\n  }\n\n  enqueue(item: T) {\n    if (this.size() === this.capacity) {\n      this.dequeue();\n    }\n    this.storage.push(item);\n  }\n\n  dequeue() {\n    return this.storage.shift();\n  }\n\n  aggregate<R>(aggregationFn: (values: T[]) => R): R {\n    return aggregationFn(this.storage);\n  }\n}\n","/**\n * Delay for a @see ms amount of time\n * @param ms -- time in milliseconds\n */\nexport function sleep(ms: number): Promise<void> {\n  if (ms < 0) {\n    throw Error('`ms` should be a positive integer');\n  }\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n/**\n * Debounce Fn - Function to limit the number of executions of the passed in\n * function in a given time duration\n * @param fn Function to be called\n * @param delay time by which the function execution has to be delayed\n * @returns {void}\n */\nexport function debounce<T extends (...args: any) => any>(fn: T, delay = 300) {\n  let timer: any | undefined;\n  return function (...args: []) {\n    clearTimeout(timer);\n    timer = undefined;\n    //@ts-ignore\n    //eslint-disable-next-line\n    const context = this;\n    timer = setTimeout(() => {\n      fn.apply(context, args);\n    }, delay);\n  };\n}\n","import HMSLogger from './logger';\nimport { HMSAudioContextHandler } from './media';\nimport { Queue } from './queue';\nimport { sleep } from './timer-utils';\nimport { HMSInternalEvent } from '../events/HMSInternalEvent';\nimport { HMSLocalAudioTrack } from '../media/tracks';\n\n/** Send update only if audio level is above THRESHOLD */\nconst THRESHOLD = 35;\n\n/** Send update only if audio level is changed by UPDATE_THRESHOLD */\nconst UPDATE_THRESHOLD = 5;\n\nexport interface ITrackAudioLevelUpdate {\n  track: HMSLocalAudioTrack;\n  audioLevel: number;\n}\n\nexport class TrackAudioLevelMonitor {\n  private readonly TAG = '[TrackAudioLevelMonitor]';\n  private audioLevel = 0;\n  private analyserNode?: AnalyserNode;\n  private isMonitored = false;\n  /** Frequency of polling audio level from track */\n  private interval = 100;\n  /** Store past audio levels for this duration */\n  private historyInterval = 700;\n  private history = new Queue<number>(this.historyInterval / this.interval);\n\n  constructor(\n    private track: HMSLocalAudioTrack,\n    private audioLevelEvent: HMSInternalEvent<ITrackAudioLevelUpdate>,\n    private silenceEvent: HMSInternalEvent<{ track: HMSLocalAudioTrack }>,\n  ) {\n    try {\n      const stream = new MediaStream([this.track.nativeTrack]);\n      this.analyserNode = this.createAnalyserNodeForStream(stream);\n    } catch (ex) {\n      HMSLogger.w(this.TAG, 'Unable to initialize AudioContext', ex);\n    }\n  }\n\n  /**\n   * To detect silence we check if the track is unmuted and silent in the current moment\n   * periodically. If the track is found to be silent more than a threshold number of times\n   * we send the event. The threshold number of time is there to reduce the chance of false\n   * positives.\n   */\n  detectSilence = async () => {\n    const tickInterval = 20;\n    const tickThreshold = 50;\n    let silenceCounter = 0;\n\n    while (this.isMonitored) {\n      if (this.track.enabled) {\n        if (this.isSilentThisInstant()) {\n          silenceCounter++;\n          if (silenceCounter > tickThreshold) {\n            this.silenceEvent.publish({ track: this.track });\n            break;\n          }\n        } else {\n          // bail out immediately if sound is found\n          break;\n        }\n      }\n      await sleep(tickInterval);\n    }\n  };\n\n  start() {\n    this.stop();\n    this.isMonitored = true;\n    HMSLogger.d(this.TAG, 'Starting track Monitor', `${this.track}`);\n    this.loop().then(() => HMSLogger.d(this.TAG, 'Stopping track Monitor', `${this.track}`));\n  }\n\n  stop() {\n    if (!this.analyserNode) {\n      HMSLogger.d(this.TAG, 'AudioContext not initialized');\n      return;\n    }\n\n    this.sendAudioLevel(0);\n    this.isMonitored = false;\n  }\n\n  private async loop() {\n    while (this.isMonitored) {\n      this.sendAudioLevel(this.getMaxAudioLevelOverPeriod());\n      await sleep(this.interval);\n    }\n  }\n\n  private sendAudioLevel(audioLevel = 0) {\n    audioLevel = audioLevel > THRESHOLD ? audioLevel : 0;\n    const isSignificantChange = Math.abs(this.audioLevel - audioLevel) > UPDATE_THRESHOLD;\n    if (isSignificantChange) {\n      this.audioLevel = audioLevel;\n      const audioLevelUpdate: ITrackAudioLevelUpdate = { track: this.track, audioLevel: this.audioLevel };\n      this.audioLevelEvent.publish(audioLevelUpdate);\n    }\n  }\n\n  private getMaxAudioLevelOverPeriod() {\n    if (!this.analyserNode) {\n      HMSLogger.d(this.TAG, 'AudioContext not initialized');\n      return;\n    }\n    const newLevel = this.calculateAudioLevel();\n    newLevel !== undefined && this.history.enqueue(newLevel);\n    return this.history.aggregate(values => Math.max(...values));\n  }\n\n  private calculateAudioLevel() {\n    if (!this.analyserNode) {\n      HMSLogger.d(this.TAG, 'AudioContext not initialized');\n      return;\n    }\n\n    const data = new Uint8Array(this.analyserNode.fftSize);\n    this.analyserNode.getByteTimeDomainData(data);\n    const lowest = 0.009;\n    let max = lowest;\n    for (const frequency of data) {\n      max = Math.max(max, (frequency - 128) / 128);\n    }\n    const normalized = (Math.log(lowest) - Math.log(max)) / Math.log(lowest);\n    const percent = Math.ceil(Math.min(Math.max(normalized * 100, 0), 100));\n    return percent;\n  }\n\n  private isSilentThisInstant() {\n    if (!this.analyserNode) {\n      HMSLogger.d(this.TAG, 'AudioContext not initialized');\n      return;\n    }\n\n    const data = new Uint8Array(this.analyserNode.fftSize);\n    this.analyserNode.getByteTimeDomainData(data);\n\n    // For absolute silence(in case of mic/software failures), all frequencies are 128 or 0.\n    return !data.some(frequency => frequency !== 128 && frequency !== 0);\n  }\n\n  private createAnalyserNodeForStream(stream: MediaStream): AnalyserNode {\n    const audioContext = HMSAudioContextHandler.getAudioContext();\n    const analyser = audioContext.createAnalyser();\n    const source = audioContext.createMediaStreamSource(stream);\n    source.connect(analyser);\n    return analyser;\n  }\n}\n","import { HMSAudioTrack } from './HMSAudioTrack';\nimport { DeviceStorageManager } from '../../device-manager/DeviceStorage';\nimport { HMSException } from '../../error/HMSException';\nimport { EventBus } from '../../events/EventBus';\nimport { HMSAudioTrackSettings as IHMSAudioTrackSettings } from '../../interfaces';\nimport { HMSAudioPlugin, HMSPluginSupportResult } from '../../plugins';\nimport { HMSAudioPluginsManager } from '../../plugins/audio';\nimport HMSLogger from '../../utils/logger';\nimport { isBrowser, isIOS } from '../../utils/support';\nimport { getAudioTrack, isEmptyTrack } from '../../utils/track';\nimport { TrackAudioLevelMonitor } from '../../utils/track-audio-level-monitor';\nimport { HMSAudioTrackSettings, HMSAudioTrackSettingsBuilder } from '../settings';\nimport HMSLocalStream from '../streams/HMSLocalStream';\n\nfunction generateHasPropertyChanged(newSettings: Partial<HMSAudioTrackSettings>, oldSettings: HMSAudioTrackSettings) {\n  return function hasChanged(prop: 'codec' | 'volume' | 'maxBitrate' | 'deviceId' | 'advanced') {\n    return prop in newSettings && newSettings[prop] !== oldSettings[prop];\n  };\n}\n\nexport class HMSLocalAudioTrack extends HMSAudioTrack {\n  private readonly TAG = '[HMSLocalAudioTrack]';\n  settings: HMSAudioTrackSettings;\n  private pluginsManager: HMSAudioPluginsManager;\n  private processedTrack?: MediaStreamTrack;\n\n  audioLevelMonitor?: TrackAudioLevelMonitor;\n\n  /**\n   * see the doc in HMSLocalVideoTrack\n   * @internal\n   */\n  publishedTrackId?: string;\n\n  /**\n   * will be false for preview tracks\n   */\n  isPublished = false;\n\n  constructor(\n    stream: HMSLocalStream,\n    track: MediaStreamTrack,\n    source: string,\n    private eventBus: EventBus,\n    settings: HMSAudioTrackSettings = new HMSAudioTrackSettingsBuilder().build(),\n  ) {\n    super(stream, track, source);\n    stream.tracks.push(this);\n\n    this.settings = settings;\n    // Replace the 'default' or invalid deviceId with the actual deviceId\n    // This is to maintain consistency with selected devices as in some cases there will be no 'default' device\n    if (settings.deviceId !== track.getSettings().deviceId && !isEmptyTrack(track)) {\n      this.settings = this.buildNewSettings({ deviceId: track.getSettings().deviceId });\n    }\n    this.pluginsManager = new HMSAudioPluginsManager(this, eventBus);\n    this.setFirstTrackId(track.id);\n    if (isIOS() && isBrowser) {\n      document.addEventListener('visibilitychange', this.handleVisibilityChange);\n    }\n  }\n\n  private handleVisibilityChange = async () => {\n    if (document.visibilityState === 'visible') {\n      await this.replaceTrackWith(this.settings);\n    }\n  };\n\n  private async replaceTrackWith(settings: HMSAudioTrackSettings) {\n    const prevTrack = this.nativeTrack;\n    /*\n     * Note: Do not change the order of this.\n     * stop the previous before acquiring the new track otherwise this can lead to\n     * no audio when the above getAudioTrack throws an error. ex: DeviceInUse error\n     */\n    prevTrack?.stop();\n    const isLevelMonitored = Boolean(this.audioLevelMonitor);\n    const newTrack = await getAudioTrack(settings);\n    newTrack.enabled = this.enabled;\n    HMSLogger.d(this.TAG, 'replaceTrack, Previous track stopped', prevTrack, 'newTrack', newTrack);\n\n    const localStream = this.stream as HMSLocalStream;\n    // change nativeTrack so plugin can start its work\n    await localStream.replaceSenderTrack(prevTrack, this.processedTrack || newTrack);\n    await localStream.replaceStreamTrack(prevTrack, newTrack);\n    this.nativeTrack = newTrack;\n    isLevelMonitored && this.initAudioLevelMonitor();\n    try {\n      await this.pluginsManager.reprocessPlugins();\n    } catch (e) {\n      this.eventBus.audioPluginFailed.publish(e as HMSException);\n    }\n  }\n\n  async setEnabled(value: boolean) {\n    if (value === this.enabled) {\n      return;\n    }\n\n    // Replace silent empty track with an actual audio track, if enabled.\n    if (value && isEmptyTrack(this.nativeTrack)) {\n      await this.replaceTrackWith(this.settings);\n    }\n    await super.setEnabled(value);\n    if (value) {\n      this.settings = this.buildNewSettings({ deviceId: this.nativeTrack.getSettings().deviceId });\n    }\n    this.eventBus.localAudioEnabled.publish({ enabled: value, track: this });\n  }\n\n  /**\n   * verify if the track id being passed is of this track for correlating server messages like audio level\n   */\n  isPublishedTrackId(trackId: string) {\n    return this.publishedTrackId === trackId;\n  }\n\n  async setSettings(settings: Partial<IHMSAudioTrackSettings>, internal = false) {\n    const newSettings = this.buildNewSettings(settings);\n\n    if (isEmptyTrack(this.nativeTrack)) {\n      // if it is an empty track, cache the settings for when it is unmuted\n      this.settings = newSettings;\n      return;\n    }\n    await this.handleDeviceChange(newSettings, internal);\n    await this.handleSettingsChange(newSettings);\n    this.settings = newSettings;\n  }\n\n  /**\n   * @see HMSAudioPlugin\n   */\n  getPlugins(): string[] {\n    return this.pluginsManager.getPlugins();\n  }\n\n  /**\n   * @see HMSAudioPlugin\n   */\n  async addPlugin(plugin: HMSAudioPlugin): Promise<void> {\n    return this.pluginsManager.addPlugin(plugin);\n  }\n\n  /**\n   * @see HMSAudioPlugin\n   */\n  async removePlugin(plugin: HMSAudioPlugin): Promise<void> {\n    return this.pluginsManager.removePlugin(plugin);\n  }\n\n  /**\n   * @see HMSAudioPlugin\n   */\n  validatePlugin(plugin: HMSAudioPlugin): HMSPluginSupportResult {\n    return this.pluginsManager.validatePlugin(plugin);\n  }\n\n  /**\n   * @internal\n   */\n  async setProcessedTrack(processedTrack?: MediaStreamTrack) {\n    // if all plugins are removed reset everything back to native track\n    if (!processedTrack) {\n      if (this.processedTrack) {\n        // remove, reset back to the native track\n        await (this.stream as HMSLocalStream).replaceSenderTrack(this.processedTrack, this.nativeTrack);\n      }\n      this.processedTrack = undefined;\n      return;\n    }\n    if (processedTrack !== this.processedTrack) {\n      if (this.processedTrack) {\n        // replace previous processed track with new one\n        await (this.stream as HMSLocalStream).replaceSenderTrack(this.processedTrack, processedTrack);\n      } else {\n        // there is no prev processed track, replace native with new one\n        await (this.stream as HMSLocalStream).replaceSenderTrack(this.nativeTrack, processedTrack);\n      }\n      this.processedTrack = processedTrack;\n    }\n  }\n\n  initAudioLevelMonitor() {\n    if (this.audioLevelMonitor) {\n      this.destroyAudioLevelMonitor();\n    }\n    HMSLogger.d(this.TAG, 'Monitor Audio Level for', this, this.getMediaTrackSettings().deviceId);\n    this.audioLevelMonitor = new TrackAudioLevelMonitor(\n      this,\n      this.eventBus.trackAudioLevelUpdate,\n      this.eventBus.localAudioSilence,\n    );\n    this.audioLevelMonitor.start();\n    this.audioLevelMonitor.detectSilence();\n  }\n\n  destroyAudioLevelMonitor() {\n    this.audioLevelMonitor?.stop();\n    this.audioLevelMonitor = undefined;\n  }\n\n  async cleanup() {\n    super.cleanup();\n    await this.pluginsManager.cleanup();\n    await this.pluginsManager.closeContext();\n    this.transceiver = undefined;\n    this.processedTrack?.stop();\n    this.isPublished = false;\n    this.destroyAudioLevelMonitor();\n    if (isIOS() && isBrowser) {\n      document.removeEventListener('visibilitychange', this.handleVisibilityChange);\n    }\n  }\n\n  /**\n   * @internal\n   * published track id will be different in case there was some processing done using plugins.\n   */\n  getTrackIDBeingSent() {\n    return this.processedTrack ? this.processedTrack.id : this.nativeTrack.id;\n  }\n\n  /**\n   * @internal\n   */\n  getTrackBeingSent() {\n    return this.processedTrack || this.nativeTrack;\n  }\n\n  private buildNewSettings(settings: Partial<HMSAudioTrackSettings>) {\n    const { volume, codec, maxBitrate, deviceId, advanced } = { ...this.settings, ...settings };\n    const newSettings = new HMSAudioTrackSettings(volume, codec, maxBitrate, deviceId, advanced);\n    return newSettings;\n  }\n\n  private handleSettingsChange = async (settings: HMSAudioTrackSettings) => {\n    const stream = this.stream as HMSLocalStream;\n    const hasPropertyChanged = generateHasPropertyChanged(settings, this.settings);\n    if (hasPropertyChanged('maxBitrate') && settings.maxBitrate) {\n      await stream.setMaxBitrateAndFramerate(this);\n    }\n\n    if (hasPropertyChanged('advanced')) {\n      await this.replaceTrackWith(settings);\n    }\n  };\n\n  /**\n   * Replace audio track with new track on device change if enabled\n   * @param settings - AudioSettings Object constructed with new settings\n   * @param internal - whether the change was because of internal sdk call or external client call\n   */\n  private handleDeviceChange = async (settings: HMSAudioTrackSettings, internal = false) => {\n    const hasPropertyChanged = generateHasPropertyChanged(settings, this.settings);\n    if (hasPropertyChanged('deviceId')) {\n      await this.replaceTrackWith(settings);\n      if (!internal) {\n        DeviceStorageManager.updateSelection('audioInput', {\n          deviceId: settings.deviceId,\n          groupId: this.nativeTrack.getSettings().groupId,\n        });\n      }\n    }\n  };\n}\n","import { HMSAudioTrack } from './HMSAudioTrack';\n\nexport class HMSRemoteAudioTrack extends HMSAudioTrack {\n  async setEnabled(value: boolean): Promise<void> {\n    if (value === this.enabled) {\n      return;\n    }\n    await super.setEnabled(value);\n    await this.subscribeToAudio(value);\n  }\n}\n","import { HMSTrack, HMSTrackSource } from './HMSTrack';\nimport { HMSTrackType } from './HMSTrackType';\nimport { VideoElementManager } from './VideoElementManager';\nimport HMSMediaStream from '../streams/HMSMediaStream';\n\nexport class HMSVideoTrack extends HMSTrack {\n  readonly type: HMSTrackType = HMSTrackType.VIDEO;\n  private sinkCount = 0;\n  videoHandler!: VideoElementManager;\n\n  constructor(stream: HMSMediaStream, track: MediaStreamTrack, source?: string) {\n    super(stream, track, source as HMSTrackSource);\n    if (track.kind !== 'video') {\n      throw new Error(\"Expected 'track' kind = 'video'\");\n    }\n  }\n\n  setVideoHandler(videoHandler: VideoElementManager) {\n    this.videoHandler = videoHandler;\n  }\n\n  /**\n   * sink=video element rendering the video\n   */\n  hasSinks() {\n    return this.sinkCount > 0;\n  }\n\n  getSinks() {\n    return this.videoHandler.getVideoElements() || [];\n  }\n\n  attach(videoElement: HTMLVideoElement) {\n    this.videoHandler.addVideoElement(videoElement);\n  }\n\n  detach(videoElement: HTMLVideoElement) {\n    this.videoHandler.removeVideoElement(videoElement);\n  }\n\n  /**\n   * attaches the track to the passed in video element\n   * @param videoElement\n   */\n  addSink(videoElement: HTMLVideoElement) {\n    this.addSinkInternal(videoElement, this.nativeTrack);\n  }\n\n  /**\n   * removes the track from the passed in video element\n   * @param videoElement\n   */\n  removeSink(videoElement: HTMLVideoElement) {\n    if (videoElement.srcObject !== null) {\n      videoElement.srcObject = null;\n      if (this.sinkCount > 0) {\n        this.sinkCount--;\n      }\n    }\n  }\n\n  cleanup(): void {\n    super.cleanup();\n    this.videoHandler.cleanup();\n  }\n\n  protected addSinkInternal(videoElement: HTMLVideoElement, track: MediaStreamTrack) {\n    const srcObject = videoElement.srcObject;\n    if (srcObject !== null && srcObject instanceof MediaStream) {\n      const existingTrackID = srcObject.getVideoTracks()[0]?.id;\n      if (existingTrackID === track.id) {\n        // it's already attached, attaching again would just cause flickering\n        return;\n      }\n    }\n    videoElement.srcObject = new MediaStream([track]);\n    this.sinkCount++;\n  }\n}\n","import { v4 as uuid } from 'uuid';\nimport { getClosestLayer, layerToIntMapping } from './trackUtils';\nimport { HMSLocalVideoTrack, HMSRemoteVideoTrack } from '.';\nimport { HMSPreferredSimulcastLayer } from '../../interfaces/simulcast-layers';\nimport { HMSIntersectionObserver } from '../../utils/intersection-observer';\nimport HMSLogger from '../../utils/logger';\nimport { HMSResizeObserver } from '../../utils/resize-observer';\nimport { isBrowser } from '../../utils/support';\n\n/**\n * This class is to manager video elements for video tracks.\n * This will handle attaching/detaching when element is in view or out of view.\n * This will also handle selecting appropriate layer when element size changesx\n */\nexport class VideoElementManager {\n  private readonly TAG = '[VideoElementManager]';\n  private resizeObserver?: typeof HMSResizeObserver;\n  private intersectionObserver?: typeof HMSIntersectionObserver;\n  private videoElements = new Set<HTMLVideoElement>();\n  private entries = new Map<HTMLVideoElement, DOMRectReadOnly>();\n  private id: string;\n\n  constructor(private track: HMSLocalVideoTrack | HMSRemoteVideoTrack) {\n    this.init();\n    this.id = uuid();\n  }\n\n  updateSinks() {\n    for (const videoElement of this.videoElements) {\n      if (this.track.enabled) {\n        this.track.addSink(videoElement);\n      } else {\n        this.track.removeSink(videoElement);\n      }\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  async addVideoElement(videoElement: HTMLVideoElement) {\n    if (this.videoElements.has(videoElement)) {\n      return;\n    }\n    // Call init again, to initialize again if for some reason it failed in constructor\n    // it will be a no-op if initialize already\n    this.init();\n    HMSLogger.d(this.TAG, `Adding video element: ${videoElement} for ${this.track}`, this.id);\n    this.videoElements.add(videoElement);\n    if (this.videoElements.size >= 10) {\n      HMSLogger.w(\n        this.TAG,\n        `${this.track}`,\n        `the track is added to ${this.videoElements.size} video elements, while this may be intentional, it's likely that there is a bug leading to unnecessary creation of video elements in the UI`,\n      );\n    }\n\n    if (this.intersectionObserver?.isSupported()) {\n      this.intersectionObserver.observe(videoElement, this.handleIntersection);\n    } else if (isBrowser) {\n      if (this.isElementInViewport(videoElement)) {\n        this.track.addSink(videoElement);\n      } else {\n        this.track.removeSink(videoElement);\n      }\n    }\n    if (this.resizeObserver) {\n      this.resizeObserver.observe(videoElement, this.handleResize);\n    } else if (this.track instanceof HMSRemoteVideoTrack) {\n      await this.track.setPreferredLayer(this.track.getPreferredLayer());\n    }\n  }\n\n  removeVideoElement(videoElement: HTMLVideoElement): void {\n    this.track.removeSink(videoElement);\n    this.videoElements.delete(videoElement);\n    this.entries.delete(videoElement);\n    this.resizeObserver?.unobserve(videoElement);\n    this.intersectionObserver?.unobserve(videoElement);\n    HMSLogger.d(this.TAG, `Removing video element: ${videoElement} for ${this.track}`);\n  }\n\n  getVideoElements(): HTMLVideoElement[] {\n    return Array.from(this.videoElements);\n  }\n\n  private init() {\n    if (isBrowser) {\n      this.resizeObserver = HMSResizeObserver;\n      this.intersectionObserver = HMSIntersectionObserver;\n    }\n  }\n\n  private handleIntersection = async (entry: IntersectionObserverEntry) => {\n    const isVisibile = getComputedStyle(entry.target).visibility === 'visible';\n    // .contains check is needed for pip component as the video tiles are not mounted to dom element\n    if (this.track.enabled && ((entry.isIntersecting && isVisibile) || !document.contains(entry.target))) {\n      HMSLogger.d(this.TAG, 'add sink intersection', this.track, this.id);\n      await this.track.addSink(entry.target as HTMLVideoElement);\n    } else {\n      HMSLogger.d(this.TAG, 'remove sink intersection', this.track, this.id);\n      await this.track.removeSink(entry.target as HTMLVideoElement);\n    }\n    this.entries.set(entry.target as HTMLVideoElement, entry.boundingClientRect);\n    await this.selectMaxLayer();\n  };\n\n  private handleResize = async (entry: ResizeObserverEntry) => {\n    if (!this.track.enabled || !(this.track instanceof HMSRemoteVideoTrack)) {\n      return;\n    }\n    this.entries.set(entry.target as HTMLVideoElement, entry.contentRect);\n    await this.selectMaxLayer();\n  };\n\n  /**\n   *  Taken from\n   *  https://stackoverflow.com/a/125106/4321808\n   */\n  // eslint-disable-next-line complexity\n  private isElementInViewport(el: HTMLElement) {\n    let top = el.offsetTop;\n    let left = el.offsetLeft;\n    const width = el.offsetWidth;\n    const height = el.offsetHeight;\n    const { hidden } = el;\n    const { opacity, display } = getComputedStyle(el);\n\n    while (el.offsetParent) {\n      el = el.offsetParent as HTMLElement;\n      top += el.offsetTop;\n      left += el.offsetLeft;\n    }\n\n    return (\n      top < window.pageYOffset + window.innerHeight &&\n      left < window.pageXOffset + window.innerWidth &&\n      top + height > window.pageYOffset &&\n      left + width > window.pageXOffset &&\n      !hidden &&\n      (opacity !== '' ? parseFloat(opacity) > 0 : true) &&\n      display !== 'none'\n    );\n  }\n\n  private async selectMaxLayer() {\n    let maxLayer!: HMSPreferredSimulcastLayer;\n    if (!(this.track instanceof HMSRemoteVideoTrack)) {\n      return;\n    }\n    for (const entry of this.entries.values()) {\n      const { width, height } = entry;\n      const layer = getClosestLayer(this.track.getSimulcastDefinitions(), { width, height });\n      if (!maxLayer) {\n        maxLayer = layer;\n      } else {\n        maxLayer = layerToIntMapping[layer] > layerToIntMapping[maxLayer] ? layer : maxLayer;\n      }\n    }\n\n    HMSLogger.d(this.TAG, `selecting max layer ${maxLayer} for the track`, `${this.track}`);\n    await this.track.setPreferredLayer(maxLayer);\n  }\n\n  cleanup = () => {\n    this.videoElements.forEach(videoElement => {\n      videoElement.srcObject = null;\n      this.resizeObserver?.unobserve(videoElement);\n      this.intersectionObserver?.unobserve(videoElement);\n    });\n    this.videoElements.clear();\n    this.resizeObserver = undefined;\n    this.intersectionObserver = undefined;\n  };\n}\n","import { HMSPreferredSimulcastLayer, HMSSimulcastLayer, HMSSimulcastLayerDefinition } from '../../interfaces';\n\nexport const layerToIntMapping = {\n  [HMSSimulcastLayer.NONE]: -1,\n  [HMSSimulcastLayer.LOW]: 0,\n  [HMSSimulcastLayer.MEDIUM]: 1,\n  [HMSSimulcastLayer.HIGH]: 2,\n};\nconst DELTA_THRESHOLD = 0.5;\n\n/**\n * Given the simulcast layers and the current video element dimensions, this function finds the\n * layer with dimensions closer to the video element dimensions.\n */\n// eslint-disable-next-line complexity\nexport const getClosestLayer = (\n  simulcastLayers: HMSSimulcastLayerDefinition[],\n  videoElementDimensions: { width: number; height: number },\n): HMSPreferredSimulcastLayer => {\n  let closestLayer: HMSPreferredSimulcastLayer = HMSSimulcastLayer.HIGH;\n  // when both width and height are equal pick height to select a better quality\n  const maxDimension = videoElementDimensions.width > videoElementDimensions.height ? 'width' : 'height';\n  const layers = [...simulcastLayers].sort((a, b) => layerToIntMapping[a.layer] - layerToIntMapping[b.layer]);\n  const videoDimesion = videoElementDimensions[maxDimension] * (window?.devicePixelRatio || 1);\n  for (let i = 0; i < layers.length; i++) {\n    const { resolution, layer } = layers[i];\n    const layerDimension = resolution[maxDimension];\n    // we break here because the layers are already sorted, the next would always be greater if the below condition satisifes\n    if (videoDimesion <= layerDimension) {\n      closestLayer = layer;\n      break;\n    } else {\n      const nextLayer = layers[i + 1];\n      const nextLayerDimension = nextLayer ? nextLayer.resolution[maxDimension] : Number.POSITIVE_INFINITY;\n      // calculating which layer this dimension is closer to\n      const proximityPercent = (videoDimesion - layerDimension) / (nextLayerDimension - layerDimension);\n      if (proximityPercent < DELTA_THRESHOLD) {\n        // the element's dimension is closer to the current layer\n        closestLayer = layer;\n        break;\n      }\n    }\n  }\n  return closestLayer;\n};\n","import HMSLogger from './logger';\nimport { isBrowser } from './support';\n\nexport interface HMSIntersectionObserverCallback {\n  (entry: IntersectionObserverEntry): void;\n}\n\n/**\n * This is a wrapper around IntersectionObserver which will call the callback passed\n * for an element while observing, only when that element is intersecting\n */\nclass HMSIntersectionObserverWrapper {\n  private intersectionObserver?: IntersectionObserver;\n  private readonly TAG = '[HMSIntersectionObserverWrapper]';\n  private listeners = new Map<HTMLElement, HMSIntersectionObserverCallback>();\n  constructor() {\n    this.createObserver();\n  }\n\n  isSupported() {\n    const isSupported = isBrowser && typeof window.IntersectionObserver !== 'undefined';\n    if (!isSupported) {\n      HMSLogger.w(this.TAG, 'IntersectionObserver is not supported, fallback will be used instead');\n    }\n    return isSupported;\n  }\n\n  observe = (element: HTMLElement, onIntersection: HMSIntersectionObserverCallback) => {\n    this.createObserver();\n    // unobserve before observing the element\n    this.unobserve(element);\n    this.intersectionObserver?.observe(element);\n    this.listeners.set(element, onIntersection);\n  };\n\n  unobserve = (element: HTMLElement) => {\n    this.intersectionObserver?.unobserve(element);\n    if (this.listeners.has(element)) {\n      this.listeners.delete(element);\n    }\n  };\n\n  private createObserver = () => {\n    if (this.isSupported() && !this.intersectionObserver) {\n      this.intersectionObserver = new IntersectionObserver(this.handleIntersection);\n    }\n  };\n\n  private handleIntersection = (entries: IntersectionObserverEntry[]) => {\n    for (const entry of entries) {\n      if (this.listeners.has(entry.target as HTMLElement)) {\n        this.listeners.get(entry.target as HTMLElement)?.(entry);\n      }\n    }\n  };\n}\n\nexport const HMSIntersectionObserver = new HMSIntersectionObserverWrapper();\n","import HMSLogger from './logger';\nimport { isBrowser } from './support';\nimport { debounce } from './timer-utils';\n\nexport interface HMSResizeObserverCallback {\n  (entry: ResizeObserverEntry): void;\n}\n\n/**\n * This is a wrapper around ResizeObserver which will call the callback passed\n * for an element while observing, only when that element is intersecting\n */\nclass HMSResizeObserverWrapper {\n  private resizeObserver?: ResizeObserver;\n  private readonly TAG = '[HMSResizeObserverWrapper]';\n  private listeners = new Map<HTMLElement, HMSResizeObserverCallback>();\n  constructor() {\n    this.createObserver();\n  }\n\n  isSupported() {\n    const isSupported = isBrowser && typeof window.ResizeObserver !== 'undefined';\n    if (!isSupported) {\n      HMSLogger.w(this.TAG, 'Resize Observer is not supported');\n    }\n    return isSupported;\n  }\n\n  observe = (\n    element: HTMLElement,\n    onResize: HMSResizeObserverCallback,\n    options: ResizeObserverOptions = { box: 'border-box' },\n  ) => {\n    this.createObserver();\n    // unobserve before observing the element\n    this.unobserve(element);\n    this.resizeObserver?.observe(element, options);\n    this.listeners.set(element, onResize);\n  };\n\n  unobserve = (element: HTMLElement) => {\n    this.resizeObserver?.unobserve(element);\n    if (this.listeners.has(element)) {\n      this.listeners.delete(element);\n    }\n  };\n\n  private createObserver = () => {\n    if (this.isSupported() && !this.resizeObserver) {\n      this.resizeObserver = new ResizeObserver(debounce(this.handleResize, 300));\n    }\n  };\n\n  private handleResize = (entries: ResizeObserverEntry[]) => {\n    for (const entry of entries) {\n      if (this.listeners.has(entry.target as HTMLElement)) {\n        this.listeners.get(entry.target as HTMLElement)?.(entry);\n      }\n    }\n  };\n}\n\nexport const HMSResizeObserver = new HMSResizeObserverWrapper();\n","import { HMSPluginSupportResult } from '../audio';\n\n/**\n * A plugin implementing this interface can be registered with HMSLocalVideoTrack to transform, process or\n * analyze the local video track.These can include applications like video filters, virtual background, live\n * analysis of video etc. The below functions are required for the sdk to properly use the plugin, usually\n * the plugin would also be exposing some public functions of its own for the UI to control its working.\n */\nexport interface HMSVideoPlugin {\n  /**\n   * The name is meant to uniquely specify a plugin instance. This will be used to track number of plugins\n   * added to the track, and same name won't be allowed twice.\n   */\n  getName(): string;\n\n  /**\n   * This function will be called before the call to init, it is used to check whether the plugin supports current\n   * OS and device or not. An error will be thrown back to the user if they try to use an unsupported plugin.\n   */\n  checkSupport(): HMSPluginSupportResult;\n\n  /**\n   * @deprecated. Will be deleted in future updates. Use checkSupport instead.\n   */\n  isSupported(): boolean;\n\n  /**\n   * This function will be called in the beginning for initialization which may include tasks like setting up\n   * variables, loading ML models etc. This can be used by a plugin to ensure it's prepared at the time\n   * processVideoFrame is called.\n   */\n  init(): Promise<void>;\n\n  /**\n   * @see HMSVideoPluginType\n   */\n  getPluginType(): HMSVideoPluginType;\n\n  getContextType?(): HMSVideoPluginCanvasContextType;\n\n  /**\n   * This function will be called by the SDK for every video frame which the plugin needs to process.\n   * PluginFrameRate - the rate at which the plugin is expected to process the video frames. This is not necessarily\n   * equal to the capture frame rate. The user can specify this rate, and the sdk might also change it on basis of\n   * device type, or CPU usage.\n   * For an analyzing plugin, the below function will be called at plugin framerate.\n   * For a transforming plugin, the sdk will pass in the input and output at real frame rate with an additional boolean\n   * pass. The expectation is that the plugin should use results of previous runs instead of doing a complex processing\n   * again when pass is set to true. This helps in maintaining the framerate of the video as well as bringing down\n   * CPU usage in case of complex processing.\n   * @param input input canvas containing the input frame\n   * @param output the output canvas which should contain the output frame\n   * @param skipProcessing use results from previous run if true\n   */\n  processVideoFrame(\n    input: HTMLCanvasElement,\n    output?: HTMLCanvasElement,\n    skipProcessing?: boolean,\n  ): Promise<void> | void;\n\n  /**\n   * the plugin can use this function to dispose off its resources. It'll be called when the processor instance is\n   * no longer needed at the end.\n   */\n  stop(): void;\n}\n\n/**\n * Specifies the type of the plugin a transforming plugin will get an output canvas to give the resulting\n * transformation. While an analyzing plugin will only be passed the input canvas.\n */\nexport enum HMSVideoPluginType {\n  TRANSFORM = 'TRANSFORM',\n  ANALYZE = 'ANALYZE',\n}\n\nexport enum HMSVideoPluginCanvasContextType {\n  '2D' = '2d',\n  WEBGL = 'webgl',\n  'WEBGL2' = 'webgl2',\n}\n","export class RunningAverage {\n  private total = 0;\n  private count = 0;\n\n  add(item: number) {\n    this.count++;\n    this.total += item;\n  }\n\n  getAvg(): number {\n    return Math.floor(this.total / this.count);\n  }\n\n  reset() {\n    this.total = 0;\n    this.count = 0;\n  }\n}\n","import MediaPluginsAnalyticsFactory from '../../analytics/MediaPluginsAnalyticsFactory';\nimport { ErrorFactory, HMSAction } from '../../error/ErrorFactory';\nimport { HMSException } from '../../error/HMSException';\nimport { EventBus } from '../../events/EventBus';\nimport HMSLogger from '../../utils/logger';\nimport { RunningAverage } from '../../utils/math';\n\nexport class VideoPluginsAnalytics {\n  private readonly TAG = '[VideoPluginsAnalytics]';\n  private readonly initTime: Record<string, number>;\n  private readonly addedTimestamps: Record<string, number>;\n  private readonly preProcessingAvgs: RunningAverage;\n  private readonly processingAvgs: Record<string, RunningAverage>;\n  private readonly pluginAdded: Record<string, boolean>;\n  private readonly pluginInputFrameRate: Record<string, number>;\n  private readonly pluginFrameRate: Record<string, number>;\n\n  constructor(private eventBus: EventBus) {\n    this.initTime = {};\n    this.preProcessingAvgs = new RunningAverage();\n    this.addedTimestamps = {};\n    this.processingAvgs = {};\n    this.pluginAdded = {};\n    this.pluginInputFrameRate = {};\n    this.pluginFrameRate = {};\n  }\n\n  added(name: string, inputFrameRate: number, pluginFrameRate?: number) {\n    this.pluginAdded[name] = true;\n    this.addedTimestamps[name] = Date.now();\n    this.initTime[name] = 0;\n    this.processingAvgs[name] = new RunningAverage();\n    this.pluginInputFrameRate[name] = inputFrameRate;\n    this.pluginFrameRate[name] = pluginFrameRate || inputFrameRate;\n  }\n\n  removed(name: string) {\n    //send stats\n    if (this.pluginAdded[name]) {\n      const stats = {\n        pluginName: name,\n        // duration in seconds\n        duration: Math.floor((Date.now() - this.addedTimestamps[name]) / 1000),\n        loadTime: this.initTime[name],\n        avgPreProcessingTime: this.preProcessingAvgs.getAvg(), //Do we need this in stat not plugin specific\n        avgProcessingTime: this.processingAvgs[name]?.getAvg(),\n        inputFrameRate: this.pluginInputFrameRate[name],\n        pluginFrameRate: this.pluginFrameRate[name],\n      };\n      //send stats\n      this.eventBus.analytics.publish(MediaPluginsAnalyticsFactory.stats(stats));\n      //clean the plugin details\n      this.clean(name);\n    }\n  }\n\n  failure(name: string, error: HMSException) {\n    // send failure event\n    if (this.pluginAdded[name]) {\n      this.eventBus.analytics.publish(MediaPluginsAnalyticsFactory.failure(name, error));\n      //clean the plugin details\n      this.clean(name);\n    }\n  }\n\n  async initWithTime<T>(name: string, initFn: () => Promise<T>) {\n    if (this.initTime[name]) {\n      HMSLogger.i(this.TAG, `Plugin Already loaded ${name}, time it took: ${this.initTime[name]}`);\n      return;\n    }\n    let time: number | undefined = undefined;\n    try {\n      time = await this.timeInMs(initFn);\n      HMSLogger.i(this.TAG, `Time taken for Plugin ${name} initialization : ${time}`);\n    } catch (e) {\n      //Failed during initialization of plugin(model loading etc...)\n      const err = ErrorFactory.MediaPluginErrors.InitFailed(\n        HMSAction.VIDEO_PLUGINS,\n        `failed during initialization of plugin${(e as Error).message || e}`,\n      );\n      HMSLogger.e(this.TAG, err);\n      this.failure(name, err);\n      throw err;\n    }\n    if (time) {\n      this.initTime[name] = time;\n    }\n  }\n\n  async preProcessWithTime<T>(preProcessFn: () => Promise<T>) {\n    //TODO: check if it is required to maintain and shall we handle preprocess failures\n    const time = await this.timeInMs(preProcessFn);\n    this.preProcessingAvgs.add(time);\n  }\n\n  async processWithTime<T>(name: string, processFn: () => Promise<T>) {\n    let time: number | undefined = undefined;\n    try {\n      time = await this.timeInMs(processFn);\n    } catch (e) {\n      //Failed during processing of plugin\n      const err = ErrorFactory.MediaPluginErrors.ProcessingFailed(\n        HMSAction.VIDEO_PLUGINS,\n        `Failed during processing of plugin${(e as Error).message || e}`,\n      );\n      HMSLogger.e(this.TAG, err);\n      this.failure(name, err);\n      throw err;\n    }\n    if (time) {\n      this.processingAvgs[name]?.add(time);\n    }\n  }\n\n  private async timeInMs<T>(fn: () => Promise<T>): Promise<number> {\n    const start = Date.now();\n    await fn();\n    return Math.floor(Date.now() - start);\n  }\n\n  private clean(name: string) {\n    delete this.addedTimestamps[name];\n    delete this.initTime[name];\n    delete this.processingAvgs[name];\n    delete this.pluginAdded[name];\n    delete this.pluginInputFrameRate[name];\n    delete this.pluginFrameRate[name];\n  }\n}\n","/* eslint-disable complexity */\nimport { HMSVideoPlugin, HMSVideoPluginCanvasContextType, HMSVideoPluginType } from './HMSVideoPlugin';\nimport { VideoPluginsAnalytics } from './VideoPluginsAnalytics';\nimport { ErrorFactory, HMSAction } from '../../error/ErrorFactory';\nimport { EventBus } from '../../events/EventBus';\nimport { HMSLocalVideoTrack } from '../../media/tracks';\nimport HMSLogger from '../../utils/logger';\nimport { sleep } from '../../utils/timer-utils';\nimport { HMSPluginUnsupportedTypes } from '../audio';\n\nconst DEFAULT_FRAME_RATE = 24;\nconst DEFAULT_WIDTH = 320;\nconst DEFAULT_HEIGHT = 240;\n\ninterface CanvasElement extends HTMLCanvasElement {\n  captureStream(frameRate?: number): MediaStream;\n}\n\n/**\n * This class manages applying different plugins on a local video track. Plugins which need to modify the video\n * are called in the order they were added. Plugins which do not need to modify the video frames are called\n * with the original input.\n *\n * Concepts -\n * Video Plugin - A module which can take in input video painted on a canvas, do some processing on it and optionally\n * render its output on a passed in output canvas which will be shown in the UI.\n *\n * frameRate - the frame rate of the input video as present in track.getSettings, this is the rate at which new frames\n * are being produced and the rate we need to maintain in output as well.\n *\n * pluginFrameRate - this is the rate at which the plugin is supposed to do its processing. The processing can be an\n * expensive operation and can result in high usage of resources like CPU. This rate would usually be lower than the\n * real frame rate.\n *\n * pluginsLoop - a loop is run at framerate in this class, on each loop if the original track is unmuted all added\n * plugins are called one by one in the order they were called.\n *\n * @see HMSVideoPlugin\n */\nexport class HMSVideoPluginsManager {\n  private readonly TAG = '[VideoPluginsManager]';\n\n  /**\n   * plugins loop is the loop in which all plugins are applied\n   */\n  private pluginsLoopRunning = false;\n  private pluginsLoopState: 'paused' | 'running' = 'paused';\n  private readonly hmsTrack: HMSLocalVideoTrack;\n  private readonly pluginsMap: Map<string, HMSVideoPlugin>; // plugin names to their instance mapping\n  private inputVideo?: HTMLVideoElement;\n  private inputCanvas?: CanvasElement;\n  private outputCanvas?: CanvasElement;\n  private outputTrack?: MediaStreamTrack;\n  private analytics: VideoPluginsAnalytics;\n  private pluginAddInProgress = false;\n  private pluginNumFramesToSkip: Record<string, number>;\n  private pluginNumFramesSkipped: Record<string, number>;\n  private canvases: Array<CanvasElement>; //array of canvases to store intermediate result\n\n  constructor(track: HMSLocalVideoTrack, eventBus: EventBus) {\n    this.hmsTrack = track;\n    this.pluginsMap = new Map();\n    this.pluginNumFramesToSkip = {};\n    this.pluginNumFramesSkipped = {};\n    this.analytics = new VideoPluginsAnalytics(eventBus);\n    this.canvases = new Array<CanvasElement>();\n  }\n\n  getPlugins(): string[] {\n    return Array.from(this.pluginsMap.keys());\n  }\n\n  /**\n   * @param plugin\n   * @param pluginFrameRate\n   */\n  async addPlugin(plugin: HMSVideoPlugin, pluginFrameRate?: number) {\n    if (this.pluginAddInProgress) {\n      const name = plugin.getName?.();\n      if (!name || name === '') {\n        HMSLogger.w('no name provided by the plugin');\n        return;\n      }\n\n      const err = ErrorFactory.MediaPluginErrors.AddAlreadyInProgress(\n        HMSAction.VIDEO_PLUGINS,\n        'Add Plugin is already in Progress',\n      );\n      this.analytics.failure(name, err);\n\n      HMSLogger.w(\"can't add another plugin when previous add is in progress\");\n      throw err;\n    }\n\n    this.pluginAddInProgress = true;\n\n    try {\n      await this.addPluginInternal(plugin, pluginFrameRate);\n    } finally {\n      this.pluginAddInProgress = false;\n    }\n  }\n\n  private async addPluginInternal(plugin: HMSVideoPlugin, pluginFrameRate?: number) {\n    const name = plugin.getName?.();\n    if (!name || name === '') {\n      HMSLogger.w('no name provided by the plugin');\n      return;\n    }\n    if (this.pluginsMap.has(name)) {\n      HMSLogger.w(this.TAG, `plugin - ${plugin.getName()} already added.`);\n      return;\n    }\n    //TODO: assuming this inputFrameRate from getMediaTrackSettings will not change once set\n    //TODO: even if it changes will not have the info/params to know the change\n    const inputFrameRate = this.hmsTrack.getMediaTrackSettings().frameRate || DEFAULT_FRAME_RATE;\n\n    let numFramesToSkip = 0;\n    if (pluginFrameRate && pluginFrameRate > 0) {\n      HMSLogger.i(this.TAG, `adding plugin ${plugin.getName()} with framerate ${pluginFrameRate}`);\n      if (pluginFrameRate < inputFrameRate) {\n        numFramesToSkip = Math.ceil(inputFrameRate / pluginFrameRate) - 1;\n      }\n      this.analytics.added(name, inputFrameRate, pluginFrameRate);\n    } else {\n      HMSLogger.i(this.TAG, `adding plugin ${plugin.getName()}`);\n      this.analytics.added(name, inputFrameRate);\n    }\n\n    HMSLogger.i(this.TAG, 'numFrames to skip processing', numFramesToSkip);\n    this.pluginNumFramesToSkip[name] = numFramesToSkip;\n    this.pluginNumFramesSkipped[name] = numFramesToSkip;\n\n    this.validateAndThrow(name, plugin);\n\n    try {\n      await this.analytics.initWithTime(name, async () => await plugin.init());\n      this.pluginsMap.set(name, plugin);\n      // add new canvases according to new added plugins\n      if (this.pluginsMap.size + 1 > this.canvases.length) {\n        for (let i = this.canvases.length; i <= this.pluginsMap.size; i++) {\n          this.canvases[i] = document.createElement('canvas') as CanvasElement;\n        }\n      }\n      await this.startPluginsLoop(plugin.getContextType?.());\n    } catch (err) {\n      HMSLogger.e(this.TAG, 'failed to add plugin', err);\n      await this.removePlugin(plugin);\n      throw err;\n    }\n  }\n\n  validatePlugin(plugin: HMSVideoPlugin) {\n    return plugin.checkSupport();\n  }\n\n  validateAndThrow(name: string, plugin: HMSVideoPlugin) {\n    const result = this.validatePlugin(plugin);\n    if (result.isSupported) {\n      HMSLogger.i(this.TAG, `plugin is supported,- ${plugin.getName()}`);\n    } else {\n      let error;\n      switch (result.errType) {\n        case HMSPluginUnsupportedTypes.PLATFORM_NOT_SUPPORTED:\n          error = ErrorFactory.MediaPluginErrors.PlatformNotSupported(\n            HMSAction.VIDEO_PLUGINS,\n            'platform not supported, see docs',\n          );\n          this.analytics.failure(name, error);\n          throw error;\n        case HMSPluginUnsupportedTypes.DEVICE_NOT_SUPPORTED:\n          error = ErrorFactory.MediaPluginErrors.DeviceNotSupported(\n            HMSAction.VIDEO_PLUGINS,\n            'video device not supported, see docs',\n          );\n          this.analytics.failure(name, error);\n          throw error;\n      }\n    }\n  }\n\n  async removePlugin(plugin: HMSVideoPlugin) {\n    const name = plugin.getName();\n    if (!this.pluginsMap.get(name)) {\n      HMSLogger.w(this.TAG, `plugin - ${name} not found to remove.`);\n      return;\n    }\n    HMSLogger.i(this.TAG, `removing plugin ${name}`);\n    this.removePluginEntry(name);\n    if (this.pluginsMap.size === 0) {\n      HMSLogger.i(this.TAG, `No plugins left, stopping plugins loop`);\n      await this.stopPluginsLoop();\n    }\n    plugin.stop();\n    this.analytics.removed(name);\n  }\n\n  removePluginEntry(name: string) {\n    this.pluginsMap.delete(name);\n    if (this.pluginNumFramesToSkip[name]) {\n      delete this.pluginNumFramesToSkip[name];\n    }\n    if (this.pluginNumFramesSkipped[name]) {\n      delete this.pluginNumFramesSkipped[name];\n    }\n  }\n\n  /**\n   * when video is unmuted it takes some time for all the plugins to be re run and an output stream to be\n   * produced. It can await on this function to confirm and tell the new unmuted state.\n   * If this is not awaited on video will freeze with a frame from past run.\n   */\n  async waitForRestart() {\n    if (!this.pluginsLoopRunning || this.pluginsLoopState === 'running') {\n      return;\n    }\n    while (this.pluginsLoopState === 'paused') {\n      await sleep(100);\n    }\n  }\n\n  /**\n   * remove every plugin one by one\n   */\n  async cleanup() {\n    for (const plugin of this.pluginsMap.values()) {\n      await this.removePlugin(plugin);\n    }\n    // memory cleanup\n    this.outputTrack?.stop();\n  }\n\n  private initElementsAndStream(contextType?: HMSVideoPluginCanvasContextType) {\n    if (!this.inputCanvas) {\n      this.inputCanvas = document.createElement('canvas') as CanvasElement;\n    }\n    this.outputCanvas = document.createElement('canvas') as CanvasElement;\n    if (!this.inputVideo) {\n      this.inputVideo = document.createElement('video');\n    }\n    // FF issue https://bugzilla.mozilla.org/show_bug.cgi?id=1388974\n    this.inputCanvas.getContext('2d');\n    this.outputCanvas.getContext(contextType || HMSVideoPluginCanvasContextType['2D']);\n    // capture stream automatically uses the framerate at which the output canvas is changing\n    const outputStream = this.outputCanvas.captureStream();\n    this.outputTrack = outputStream.getVideoTracks()[0];\n  }\n\n  private async startPluginsLoop(contextType?: HMSVideoPluginCanvasContextType) {\n    if (this.pluginsLoopRunning) {\n      return;\n    }\n    this.initElementsAndStream(contextType);\n    this.pluginsLoopRunning = true;\n    try {\n      await this.hmsTrack.setProcessedTrack(this.outputTrack);\n    } catch (err) {\n      this.pluginsLoopRunning = false;\n      HMSLogger.e(this.TAG, 'error in setting processed track', err);\n      throw err;\n    }\n    // can't await on pluginsLoop as it'll run for a long long time\n    this.pluginsLoop().then(() => {\n      HMSLogger.d(this.TAG, 'processLoop stopped');\n    });\n  }\n\n  private async stopPluginsLoop() {\n    this.pluginsLoopRunning = false;\n    await this.hmsTrack.setProcessedTrack(undefined);\n    this.resetCanvases();\n    this.outputTrack?.stop();\n    if (this.inputVideo) {\n      this.inputVideo.srcObject = null;\n      this.inputVideo = undefined;\n    }\n  }\n\n  private async pluginsLoop() {\n    while (this.pluginsLoopRunning) {\n      const inputFrameRate = this.hmsTrack.getMediaTrackSettings().frameRate || DEFAULT_FRAME_RATE;\n      const sleepTimeMs = Math.floor(1000 / inputFrameRate);\n      if (!this.hmsTrack.enabled || this.hmsTrack.nativeTrack.readyState === 'ended') {\n        if (this.pluginsLoopState === 'running') {\n          // mute just happened, reset canvases to black so even if it is sent to remote, it\n          // is a black screen instead of a stucked frame from previous run\n          this.resetCanvases();\n        }\n        this.pluginsLoopState = 'paused';\n        await sleep(sleepTimeMs);\n        continue;\n      }\n      let processingTime = 0;\n      try {\n        await this.analytics.preProcessWithTime(async () => await this.doPreProcessing());\n        const start = Date.now();\n        await this.processFramesThroughPlugins();\n        processingTime = Math.floor(Date.now() - start);\n        if (processingTime > sleepTimeMs) {\n          processingTime = sleepTimeMs;\n        }\n      } catch (err) {\n        // TODO: handle failures properly, detect which plugin failed, stop it and notify back to the UI\n        HMSLogger.e(this.TAG, 'error in plugins loop', err);\n      }\n      this.pluginsLoopState = 'running';\n      // take into account processing time to decide time to wait for the next loop\n      await sleep(sleepTimeMs - processingTime);\n    }\n  }\n\n  private async doPreProcessing() {\n    await this.addTrackToVideo(); // ensure current native track is playing in video\n    await this.updateInputCanvas(); // put the latest video frame on input canvas\n  }\n\n  /**\n   * pass the input canvas through all plugins in a loop\n   * @private\n   */\n  private async processFramesThroughPlugins() {\n    this.canvases[0] = this.inputCanvas!;\n    let i = 0;\n    for (const plugin of this.pluginsMap.values()) {\n      const name = plugin.getName();\n      if (!plugin) {\n        continue;\n      }\n      try {\n        const skipProcessing = this.checkIfSkipRequired(name);\n\n        if (plugin.getPluginType() === HMSVideoPluginType.TRANSFORM) {\n          const process = async (input: CanvasElement, output: CanvasElement) => {\n            try {\n              await plugin.processVideoFrame(input, output, skipProcessing);\n            } catch (err) {\n              HMSLogger.e(this.TAG, `error in processing plugin ${name}`, err);\n            }\n          };\n          if (!skipProcessing) {\n            const currentCanvas = this.canvases[i];\n            const nextCanvas = this.canvases[i + 1];\n            if (i === this.pluginsMap.size - 1) {\n              await this.analytics.processWithTime(name, async () => process(currentCanvas, this.outputCanvas!));\n            } else {\n              await this.analytics.processWithTime(name, async () => process(currentCanvas, nextCanvas));\n            }\n          } else {\n            if (i === this.pluginsMap.size - 1) {\n              await process(this.canvases[i], this.outputCanvas!);\n            } else {\n              await process(this.canvases[i], this.canvases[i + 1]);\n            }\n          }\n        } else if (plugin.getPluginType() === HMSVideoPluginType.ANALYZE && !skipProcessing) {\n          // there is no need to await for this case\n          await this.analytics.processWithTime(name, async () => await plugin.processVideoFrame(this.inputCanvas!));\n        }\n      } catch (err) {\n        //TODO error happened on processing of plugin notify UI\n        HMSLogger.e(this.TAG, `error in processing plugin ${name}`, err);\n        //remove plugin from loop and stop analytics for it\n        await this.removePlugin(plugin);\n      }\n      i++;\n    }\n  }\n\n  /**\n   * add the current native track to the inputVideoElement if it's not already added.\n   * @private\n   */\n  private async addTrackToVideo() {\n    if (!this.inputVideo) {\n      return;\n    }\n    const srcObject = this.inputVideo.srcObject;\n    if (srcObject !== null && srcObject instanceof MediaStream) {\n      const existingTrackID = srcObject.getVideoTracks()[0]?.id;\n      if (existingTrackID === this.hmsTrack.nativeTrack.id) {\n        // it's already attached\n        return;\n      }\n    }\n    this.inputVideo.pause();\n    this.inputVideo.srcObject = new MediaStream([this.hmsTrack.nativeTrack]);\n    this.inputVideo.muted = true;\n    this.inputVideo.playsInline = true;\n    await this.inputVideo.play();\n  }\n\n  /**\n   * get the new video frame from input video element and put it on canvas\n   * @private\n   */\n  private async updateInputCanvas() {\n    if (!this.inputCanvas || !this.inputVideo) {\n      return;\n    }\n    const { width = DEFAULT_WIDTH, height = DEFAULT_HEIGHT } = this.hmsTrack.getMediaTrackSettings();\n    // TODO: should we reduce height/width to optimize?\n    if (this.inputCanvas.height !== height) {\n      this.inputCanvas.height = height;\n    }\n    if (this.inputCanvas.width !== width) {\n      this.inputCanvas.width = width;\n    }\n    const ctx = this.inputCanvas.getContext('2d');\n    ctx!.drawImage(this.inputVideo, 0, 0, width, height);\n  }\n\n  private resetCanvases() {\n    if (!this.outputCanvas || !this.inputCanvas) {\n      return;\n    }\n    const inputCtx = this.inputCanvas.getContext('2d');\n    if (inputCtx) {\n      inputCtx.fillStyle = `rgb(0, 0, 0)`;\n      inputCtx.fillRect(0, 0, this.outputCanvas.width, this.outputCanvas.height);\n    }\n    this.canvases = [];\n  }\n\n  /**\n    N = ceil(inputFrameRate/pluginFrameRate) - 1\n    N = this.pluginNumFramesToSkip[name] = frames to skip for every processed frame\n    all the frames we are skipping are using the previous frame output\n   **/\n  private checkIfSkipRequired(name: string) {\n    let skip = false;\n\n    if (this.pluginNumFramesSkipped[name] < this.pluginNumFramesToSkip[name]) {\n      this.pluginNumFramesSkipped[name]++;\n      skip = true;\n    } else {\n      skip = false;\n      this.pluginNumFramesSkipped[name] = 0;\n    }\n\n    return skip;\n  }\n}\n","import { HMSVideoTrack } from './HMSVideoTrack';\nimport { VideoElementManager } from './VideoElementManager';\nimport { DeviceStorageManager } from '../../device-manager/DeviceStorage';\nimport { ErrorFactory, HMSAction } from '../../error/ErrorFactory';\nimport { EventBus } from '../../events/EventBus';\nimport {\n  HMSFacingMode,\n  HMSSimulcastLayerDefinition,\n  HMSVideoTrackSettings as IHMSVideoTrackSettings,\n  ScreenCaptureHandle,\n} from '../../interfaces';\nimport { HMSPluginSupportResult, HMSVideoPlugin } from '../../plugins';\nimport { HMSVideoPluginsManager } from '../../plugins/video';\nimport { LocalTrackManager } from '../../sdk/LocalTrackManager';\nimport HMSLogger from '../../utils/logger';\nimport { getVideoTrack } from '../../utils/track';\nimport { HMSVideoTrackSettings, HMSVideoTrackSettingsBuilder } from '../settings';\nimport HMSLocalStream from '../streams/HMSLocalStream';\n\nfunction generateHasPropertyChanged(newSettings: Partial<HMSVideoTrackSettings>, oldSettings: HMSVideoTrackSettings) {\n  return function hasChanged(\n    prop: 'codec' | 'width' | 'height' | 'maxFramerate' | 'maxBitrate' | 'deviceId' | 'advanced' | 'facingMode',\n  ) {\n    return prop in newSettings && newSettings[prop] !== oldSettings[prop];\n  };\n}\n\nexport class HMSLocalVideoTrack extends HMSVideoTrack {\n  settings: HMSVideoTrackSettings;\n  private pluginsManager: HMSVideoPluginsManager;\n  private processedTrack?: MediaStreamTrack;\n  private _layerDefinitions: HMSSimulcastLayerDefinition[] = [];\n  private TAG = '[HMSLocalVideoTrack]';\n\n  /**\n   * true if it's screenshare and current tab is what is being shared. Browser dependent, Chromium only\n   * at the point of writing this comment.\n   */\n  isCurrentTab = false;\n\n  /**\n   * @internal\n   * This is required for handling remote mute/unmute as the published track will not necessarily be same as\n   * the first track id or current native track's id.\n   * It won't be same as first track id if the native track was changed after preview started but before join happened,\n   * with device change, or mute/unmute.\n   * It won't be same as native track id, as the native track can change post join(and publish), when the nativetrack\n   * changes, replacetrack is used which doesn't involve republishing which means from server's point of view, the track id\n   * is same as what was initially published.\n   * This will only be available if the track was actually published and won't be set for preview tracks.\n   */\n  publishedTrackId?: string;\n\n  /**\n   * will be false for preview tracks\n   */\n  isPublished = false;\n\n  constructor(\n    stream: HMSLocalStream,\n    track: MediaStreamTrack,\n    source: string,\n    private eventBus: EventBus,\n    settings: HMSVideoTrackSettings = new HMSVideoTrackSettingsBuilder().build(),\n  ) {\n    super(stream, track, source);\n    stream.tracks.push(this);\n    this.setVideoHandler(new VideoElementManager(this));\n    this.settings = settings;\n    // Replace the 'default' or invalid deviceId with the actual deviceId\n    // This is to maintain consistency with selected devices as in some cases there will be no 'default' device\n    if (settings.deviceId !== track.getSettings().deviceId && track.enabled) {\n      this.settings = this.buildNewSettings({ deviceId: track.getSettings().deviceId });\n    }\n    this.pluginsManager = new HMSVideoPluginsManager(this, eventBus);\n    this.setFirstTrackId(this.trackId);\n  }\n\n  /** @internal */\n  setSimulcastDefinitons(definitions: HMSSimulcastLayerDefinition[]) {\n    this._layerDefinitions = definitions;\n  }\n\n  /**\n   * Method to get available simulcast definitions for the track\n   * @returns {HMSSimulcastLayerDefinition[]}\n   */\n  getSimulcastDefinitions(): HMSSimulcastLayerDefinition[] {\n    return this._layerDefinitions;\n  }\n\n  /**\n   * use this function to set the enabled state of a track. If true the track will be unmuted and muted otherwise.\n   * @param value\n   */\n  async setEnabled(value: boolean): Promise<void> {\n    if (value === this.enabled) {\n      return;\n    }\n    super.setEnabled(value);\n    if (this.source === 'regular') {\n      let track: MediaStreamTrack;\n      if (value) {\n        track = await this.replaceTrackWith(this.settings);\n      } else {\n        track = await this.replaceTrackWithBlank();\n      }\n      await this.replaceSender(track, value);\n      this.nativeTrack?.stop();\n      this.nativeTrack = track;\n      if (value) {\n        await this.pluginsManager.waitForRestart();\n        this.settings = this.buildNewSettings({ deviceId: track.getSettings().deviceId });\n      }\n      this.videoHandler.updateSinks();\n    }\n    this.eventBus.localVideoEnabled.publish({ enabled: value, track: this });\n  }\n\n  /**\n   * verify if the track id being passed is of this track for correlating server messages like degradation\n   */\n  isPublishedTrackId(trackId: string) {\n    return this.publishedTrackId === trackId;\n  }\n\n  /**\n   * @see HMSVideoTrack#addSink()\n   */\n  addSink(videoElement: HTMLVideoElement) {\n    this.addSinkInternal(videoElement, this.processedTrack || this.nativeTrack);\n  }\n\n  /**\n   * This function can be used to set media track settings. Frequent options -\n   * deviceID: can be used to change to different input source\n   * width, height - can be used to change capture dimensions\n   * maxFramerate - can be used to control the capture framerate\n   * @param settings\n   */\n  async setSettings(settings: Partial<IHMSVideoTrackSettings>, internal = false) {\n    const newSettings = this.buildNewSettings(settings);\n    await this.handleDeviceChange(newSettings, internal);\n    if (!this.enabled) {\n      // if track is muted, we just cache the settings for when it is unmuted\n      this.settings = newSettings;\n      return;\n    }\n    await this.handleSettingsChange(newSettings);\n    this.settings = newSettings;\n  }\n\n  /**\n   * @see HMSVideoPlugin\n   */\n  getPlugins(): string[] {\n    return this.pluginsManager.getPlugins();\n  }\n\n  /**\n   * @see HMSVideoPlugin\n   */\n  async addPlugin(plugin: HMSVideoPlugin, pluginFrameRate?: number): Promise<void> {\n    return this.pluginsManager.addPlugin(plugin, pluginFrameRate);\n  }\n\n  /**\n   * @see HMSVideoPlugin\n   */\n  async removePlugin(plugin: HMSVideoPlugin): Promise<void> {\n    return this.pluginsManager.removePlugin(plugin);\n  }\n\n  /**\n   * @see HMSVideoPlugin\n   */\n  validatePlugin(plugin: HMSVideoPlugin): HMSPluginSupportResult {\n    return this.pluginsManager.validatePlugin(plugin);\n  }\n\n  /**\n   * @internal\n   */\n  async cleanup() {\n    super.cleanup();\n    this.transceiver = undefined;\n    await this.pluginsManager.cleanup();\n    this.processedTrack?.stop();\n    this.isPublished = false;\n  }\n\n  /**\n   * only for screenshare track to crop to a cropTarget\n   * @internal\n   */\n  async cropTo(cropTarget?: object) {\n    if (!cropTarget) {\n      return;\n    }\n    if (this.source !== 'screen') {\n      return;\n    }\n    try {\n      // @ts-ignore\n      if (this.nativeTrack.cropTo) {\n        // @ts-ignore\n        await this.nativeTrack.cropTo(cropTarget);\n      }\n    } catch (err) {\n      HMSLogger.e(this.TAG, 'failed to crop screenshare capture - ', err);\n      throw ErrorFactory.TracksErrors.GenericTrack(HMSAction.TRACK, 'failed to crop screenshare capture');\n    }\n  }\n\n  /**\n   * only for screenshare track to get the captureHandle\n   * TODO: add an API for capturehandlechange event\n   * @internal\n   */\n  getCaptureHandle(): ScreenCaptureHandle | undefined {\n    // @ts-ignore\n    if (this.nativeTrack.getCaptureHandle) {\n      // @ts-ignore\n      return this.nativeTrack.getCaptureHandle();\n    }\n    return undefined;\n  }\n\n  /**\n   * once the plugin manager has done its processing it can set or remove processed track via this method\n   * note that replacing sender track only makes sense if the native track is enabled. if it's disabled there is\n   * no point in replacing it. We'll update the processed track variable though so next time unmute happens\n   * it's set properly.\n   * @internal\n   */\n  async setProcessedTrack(processedTrack?: MediaStreamTrack) {\n    // required replacement will happen when video is unmuted\n    if (!this.nativeTrack.enabled) {\n      this.processedTrack = processedTrack;\n      return;\n    }\n    await this.removeOrReplaceProcessedTrack(processedTrack);\n    this.videoHandler.updateSinks();\n  }\n\n  /**\n   * @internal\n   * sent track id will be different in case there was some processing done using plugins.\n   * replace track is used to, start sending data from a new track without un publishing the prior one. There\n   * are thus two track ids - the one which was initially published and should be unpublished when required.\n   * The one whose data is currently being sent, which will be used when removing from connection senders.\n   */\n  getTrackIDBeingSent() {\n    return this.getTrackBeingSent().id;\n  }\n\n  getTrackBeingSent() {\n    return this.enabled ? this.processedTrack || this.nativeTrack : this.nativeTrack;\n  }\n\n  /**\n   * will change the facingMode to environment if current facing mode is user or vice versa.\n   * will be useful when on mobile web to toggle between front and back camera's\n   */\n  async switchCamera() {\n    const currentFacingMode = this.getMediaTrackSettings().facingMode;\n    if (!currentFacingMode || this.source !== 'regular') {\n      HMSLogger.d(this.TAG, 'facingMode not supported');\n      return;\n    }\n    const facingMode = currentFacingMode === HMSFacingMode.ENVIRONMENT ? HMSFacingMode.USER : HMSFacingMode.ENVIRONMENT;\n    this.nativeTrack?.stop();\n    const track = await this.replaceTrackWith(this.buildNewSettings({ facingMode: facingMode, deviceId: undefined }));\n    await this.replaceSender(track, this.enabled);\n    this.nativeTrack = track;\n    this.videoHandler.updateSinks();\n    this.settings = this.buildNewSettings({ deviceId: this.nativeTrack.getSettings().deviceId, facingMode });\n    DeviceStorageManager.updateSelection('videoInput', {\n      deviceId: this.settings.deviceId,\n      groupId: this.nativeTrack.getSettings().groupId,\n    });\n  }\n\n  /**\n   * called when the video is unmuted\n   * @private\n   */\n  private async replaceTrackWith(settings: HMSVideoTrackSettings) {\n    const prevTrack = this.nativeTrack;\n    /**\n     * not stopping previous track results in device in use more frequently, as many devices will not allow even if\n     * you are requesting for a new device.\n     * Note: Do not change the order of this.\n     */\n    prevTrack?.stop();\n    const newTrack = await getVideoTrack(settings);\n    HMSLogger.d(this.TAG, 'replaceTrack, Previous track stopped', prevTrack, 'newTrack', newTrack);\n    // Replace deviceId with actual deviceId when it is default\n    if (this.settings.deviceId === 'default') {\n      this.settings = this.buildNewSettings({ deviceId: this.nativeTrack.getSettings().deviceId });\n    }\n    return newTrack;\n  }\n\n  /**\n   * called when the video is muted. A blank track is used to replace the original track. This is in order to\n   * turn off the camera light and keep the bytes flowing to avoid av sync, timestamp issues.\n   * @private\n   */\n  private async replaceTrackWithBlank() {\n    const prevTrack = this.nativeTrack;\n    const newTrack = LocalTrackManager.getEmptyVideoTrack(prevTrack);\n    prevTrack?.stop();\n    HMSLogger.d(this.TAG, 'replaceTrackWithBlank, Previous track stopped', prevTrack, 'newTrack', newTrack);\n    return newTrack;\n  }\n\n  private async replaceSender(newTrack: MediaStreamTrack, enabled: boolean) {\n    const localStream = this.stream as HMSLocalStream;\n    if (enabled) {\n      await localStream.replaceSenderTrack(this.nativeTrack, this.processedTrack || newTrack);\n    } else {\n      await localStream.replaceSenderTrack(this.processedTrack || this.nativeTrack, newTrack);\n    }\n    await localStream.replaceStreamTrack(this.nativeTrack, newTrack);\n  }\n\n  private buildNewSettings = (settings: Partial<HMSVideoTrackSettings>) => {\n    const { width, height, codec, maxFramerate, maxBitrate, deviceId, advanced, facingMode } = {\n      ...this.settings,\n      ...settings,\n    };\n    const newSettings = new HMSVideoTrackSettings(\n      width,\n      height,\n      codec,\n      maxFramerate,\n      deviceId,\n      advanced,\n      maxBitrate,\n      facingMode,\n    );\n    return newSettings;\n  };\n\n  private handleSettingsChange = async (settings: HMSVideoTrackSettings) => {\n    const stream = this.stream as HMSLocalStream;\n    const hasPropertyChanged = generateHasPropertyChanged(settings, this.settings);\n    if (hasPropertyChanged('maxBitrate') && settings.maxBitrate) {\n      await stream.setMaxBitrateAndFramerate(this);\n    }\n\n    if (hasPropertyChanged('width') || hasPropertyChanged('height') || hasPropertyChanged('advanced')) {\n      await this.nativeTrack.applyConstraints(settings.toConstraints());\n    }\n  };\n\n  /**\n   * Replace video track with new track on device change\n   * @param settings - VideoSettings Object constructed with new settings\n   * @param internal - whether the change was because of internal sdk call or external client call\n   */\n  private handleDeviceChange = async (settings: HMSVideoTrackSettings, internal = false) => {\n    const hasPropertyChanged = generateHasPropertyChanged(settings, this.settings);\n\n    if (hasPropertyChanged('deviceId') && this.source === 'regular') {\n      if (this.enabled) {\n        delete settings.facingMode;\n        const track = await this.replaceTrackWith(settings);\n        await this.replaceSender(track, this.enabled);\n        this.nativeTrack = track;\n        this.videoHandler.updateSinks();\n      }\n      if (!internal) {\n        DeviceStorageManager.updateSelection('videoInput', {\n          deviceId: settings.deviceId,\n          groupId: this.nativeTrack.getSettings().groupId,\n        });\n      }\n    }\n  };\n\n  /**\n   * This will either remove or update the processedTrack value on the class instance.\n   * It will also replace sender if the processedTrack is updated\n   * @param {MediaStreamTrack|undefined}processedTrack\n   */\n  private removeOrReplaceProcessedTrack = async (processedTrack?: MediaStreamTrack) => {\n    // if all plugins are removed reset everything back to native track\n    if (!processedTrack) {\n      if (this.processedTrack) {\n        // remove, reset back to the native track\n        await (this.stream as HMSLocalStream).replaceSenderTrack(this.processedTrack, this.nativeTrack);\n      }\n      this.processedTrack = undefined;\n    } else if (processedTrack !== this.processedTrack) {\n      if (this.processedTrack) {\n        // replace previous processed track with new one\n        await (this.stream as HMSLocalStream).replaceSenderTrack(this.processedTrack, processedTrack);\n      } else {\n        // there is no prev processed track, replace native with new one\n        await (this.stream as HMSLocalStream).replaceSenderTrack(this.nativeTrack, processedTrack);\n      }\n      this.processedTrack = processedTrack;\n    }\n  };\n}\n","export const RENEGOTIATION_CALLBACK_ID = 'renegotiation-callback-id';\nexport const API_DATA_CHANNEL = 'ion-sfu';\nexport const ANALYTICS_BUFFER_SIZE = 100;\n\n/**\n * Maximum number of retries that transport-layer will try\n * before giving up on the connection and returning a failure\n *\n * Refer https://100ms.atlassian.net/browse/HMS-2369\n */\nexport const MAX_TRANSPORT_RETRIES = 5;\nexport const MAX_TRANSPORT_RETRY_DELAY = 60;\n\nexport const DEFAULT_SIGNAL_PING_TIMEOUT = 12_000;\nexport const DEFAULT_SIGNAL_PING_INTERVAL = 3_000;\nexport const PONG_RESPONSE_TIMES_SIZE = 5;\n\nexport const SUBSCRIBE_ICE_CONNECTION_CALLBACK_ID = 'SUBSCRIBE_ICE_CONNECTION_CALLBACK_ID';\nexport const SUBSCRIBE_TIMEOUT = 60_000;\n\nexport const ICE_DISCONNECTION_TIMEOUT = 5_000;\n\nexport const RTC_STATS_MONITOR_INTERVAL = 1_000;\n\nexport const MAINTAIN_TRACK_HISTORY = false;\n\nexport const CLIENT_ANAYLTICS_PROD_ENDPOINT = 'https://event.100ms.live/v2/client/report';\nexport const CLIENT_ANAYLTICS_QA_ENDPOINT = 'https://event-nonprod.100ms.live/v2/client/report';\nexport const CLIENT_ANAYLTICS_STORAGE_LIMIT = 100;\n\nexport const HMSEvents = {\n  DEVICE_CHANGE: 'device-change',\n  LOCAL_AUDIO_ENABLED: 'local-audio-enabled',\n  LOCAL_VIDEO_ENABLED: 'local-video-enabled',\n  STATS_UPDATE: 'stats-update', // emitted by HMSWebrtcInternals\n  RTC_STATS_UPDATE: 'rtc-stats-update', // emitted by RTCStatsMonitor\n  TRACK_DEGRADED: 'track-degraded',\n  TRACK_RESTORED: 'track-restored',\n  TRACK_AUDIO_LEVEL_UPDATE: 'track-audio-level-update',\n  LOCAL_AUDIO_SILENCE: 'local-audio-silence',\n  ANALYTICS: 'analytics',\n  AUDIO_PLUGIN_FAILED: 'audio-plugin-failed',\n  POLICY_CHANGE: 'policy-change',\n  LOCAL_ROLE_UPDATE: 'local-role-update',\n  AUDIO_TRACK_UPDATE: 'audio-track-update',\n  AUDIO_TRACK_ADDED: 'audio-track-added',\n  AUDIO_TRACK_REMOVED: 'audio-track-removed',\n  AUTOPLAY_ERROR: 'autoplay-error',\n  LEAVE: 'leave',\n};\n","import { HMSVideoTrack } from './HMSVideoTrack';\nimport { VideoElementManager } from './VideoElementManager';\nimport { VideoTrackLayerUpdate } from '../../connection/channel-messages';\nimport {\n  HMSPreferredSimulcastLayer,\n  HMSSimulcastLayer,\n  HMSSimulcastLayerDefinition,\n} from '../../interfaces/simulcast-layers';\nimport { MAINTAIN_TRACK_HISTORY } from '../../utils/constants';\nimport HMSLogger from '../../utils/logger';\nimport HMSRemoteStream from '../streams/HMSRemoteStream';\n\nexport class HMSRemoteVideoTrack extends HMSVideoTrack {\n  private _degraded = false;\n  private _degradedAt: Date | null = null;\n  private _layerDefinitions: HMSSimulcastLayerDefinition[] = [];\n  private history = new TrackHistory();\n  private preferredLayer: HMSPreferredSimulcastLayer = HMSSimulcastLayer.HIGH;\n\n  constructor(stream: HMSRemoteStream, track: MediaStreamTrack, source?: string) {\n    super(stream, track, source);\n    this.setVideoHandler(new VideoElementManager(this));\n  }\n\n  public get degraded() {\n    return this._degraded;\n  }\n\n  public get degradedAt() {\n    return this._degradedAt;\n  }\n\n  async setEnabled(value: boolean): Promise<void> {\n    if (value === this.enabled) {\n      return;\n    }\n\n    super.setEnabled(value);\n    this.videoHandler.updateSinks();\n  }\n\n  async setPreferredLayer(layer: HMSPreferredSimulcastLayer) {\n    //@ts-ignore\n    if (layer === HMSSimulcastLayer.NONE) {\n      HMSLogger.w(`layer ${HMSSimulcastLayer.NONE} will be ignored`);\n      return;\n    }\n    this.preferredLayer = layer;\n    if (!this.shouldSendVideoLayer(layer, 'preferLayer')) {\n      return;\n    }\n    if (!this.hasSinks()) {\n      HMSLogger.d(\n        `[Remote Track] ${this.logIdentifier}\n        streamId=${this.stream.id} \n        trackId=${this.trackId}\n        saving ${layer}, source=${this.source}\n        Track does not have any sink`,\n      );\n      return;\n    }\n    await this.requestLayer(layer, 'preferLayer');\n    this.pushInHistory(`uiPreferLayer-${layer}`);\n  }\n\n  /**\n   * @deprecated\n   * @returns {HMSSimulcastLayer}\n   */\n  getSimulcastLayer() {\n    return (this.stream as HMSRemoteStream).getSimulcastLayer();\n  }\n\n  getLayer() {\n    return (this.stream as HMSRemoteStream).getVideoLayer();\n  }\n\n  getPreferredLayer() {\n    return this.preferredLayer;\n  }\n\n  async addSink(videoElement: HTMLVideoElement) {\n    super.addSink(videoElement);\n    await this.updateLayer('addSink');\n    this.pushInHistory(`uiSetLayer-high`);\n  }\n\n  async removeSink(videoElement: HTMLVideoElement) {\n    super.removeSink(videoElement);\n    await this.updateLayer('removeSink');\n    this._degraded = false;\n    this.pushInHistory('uiSetLayer-none');\n  }\n\n  /**\n   * Method to get available simulcast definitions for the track\n   * @returns {HMSSimulcastLayerDefinition[]}\n   */\n  getSimulcastDefinitions() {\n    // send a clone to store as it will freeze the object from further updates\n    return [...this._layerDefinitions];\n  }\n\n  /** @internal */\n  setSimulcastDefinitons(definitions: HMSSimulcastLayerDefinition[]) {\n    this._layerDefinitions = definitions;\n  }\n\n  /**\n   * @internal\n   * SFU will change track's layer(degrade or restore) and tell the sdk to update\n   * it locally.\n   * @returns {boolean} isDegraded - returns true if degraded\n   * */\n  setLayerFromServer(layerUpdate: VideoTrackLayerUpdate) {\n    this._degraded =\n      (layerUpdate.publisher_degraded || layerUpdate.subscriber_degraded) &&\n      layerUpdate.current_layer === HMSSimulcastLayer.NONE;\n    this._degradedAt = this._degraded ? new Date() : this._degradedAt;\n    const currentLayer = layerUpdate.current_layer;\n    HMSLogger.d(\n      `[Remote Track] ${this.logIdentifier} \n      streamId=${this.stream.id} \n      trackId=${this.trackId}\n      layer update from sfu\n      currLayer=${layerUpdate.current_layer}\n      preferredLayer=${layerUpdate.expected_layer}\n      sub_degraded=${layerUpdate.subscriber_degraded}\n      pub_degraded=${layerUpdate.publisher_degraded}\n      isDegraded=${this._degraded}`,\n    );\n    // No need to send preferLayer update, as server has done it already\n    (this.stream as HMSRemoteStream).setVideoLayerLocally(currentLayer, this.logIdentifier, 'setLayerFromServer');\n    this.pushInHistory(`sfuLayerUpdate-${currentLayer}`);\n    return this._degraded;\n  }\n\n  /**\n   * @internal\n   * If degradation is being managed by sdk, sdk will let the track know of status\n   * post which it'll set it as well and send prefer layer message to SFU.\n   * */\n  setDegradedFromSdk(value: boolean) {\n    this._degraded = value;\n    this._degradedAt = value ? new Date() : this._degradedAt;\n    this.updateLayer('sdkDegradation');\n    this.pushInHistory(value ? 'sdkDegraded-none' : 'sdkRecovered-high');\n  }\n\n  private async updateLayer(source: string) {\n    const newLayer = this.degraded || !this.hasSinks() ? HMSSimulcastLayer.NONE : this.preferredLayer;\n    if (!this.shouldSendVideoLayer(newLayer, source)) {\n      return;\n    }\n    await this.requestLayer(newLayer, source);\n  }\n\n  private pushInHistory(action: string) {\n    if (MAINTAIN_TRACK_HISTORY) {\n      this.history.push({ name: action, layer: this.getLayer(), degraded: this.degraded });\n    }\n  }\n\n  private async requestLayer(layer: HMSSimulcastLayer, source: string) {\n    try {\n      const response = await (this.stream as HMSRemoteStream).setVideoLayer(\n        layer,\n        this.trackId,\n        this.logIdentifier,\n        source,\n      );\n      HMSLogger.d(\n        `[Remote Track] ${this.logIdentifier} \n      streamId=${this.stream.id}\n      trackId=${this.trackId}\n      Requested layer ${layer}, source=${source}`,\n      );\n      return response;\n    } catch (error) {\n      HMSLogger.d(\n        `[Remote Track] ${this.logIdentifier} \n      streamId=${this.stream.id}\n      trackId=${this.trackId}\n      Failed to set layer ${layer}, source=${source}\n      error=${(error as Error).message}`,\n      );\n      throw error;\n    }\n  }\n\n  /**\n   * given the new layer, figure out if the update should be sent to server or not.\n   * It won't be sent if the track is already on the targetLayer. If the track is\n   * degraded though and the target layer is none, update will be sent.\n   * If there are tracks degraded on a page and user paginates away to other page,\n   * it's necessary to send the layer none message to SFU so it knows that the app\n   * is no longer interested in the track and doesn't recover degraded tracks on non\n   * visible pages.\n   *\n   * TODO: if track is degraded, send the update if target layer is lower than current layer\n   * @private\n   */\n  private shouldSendVideoLayer(targetLayer: HMSSimulcastLayer, source: string) {\n    const currLayer = this.getLayer();\n    if (this.degraded && targetLayer === HMSSimulcastLayer.NONE) {\n      return true;\n    }\n    if (currLayer === targetLayer) {\n      HMSLogger.d(\n        `[Remote Track] ${this.logIdentifier}`,\n        `Not sending update, already on layer ${targetLayer}, source=${source}`,\n      );\n      return false;\n    }\n    return true;\n  }\n}\n\n/**\n * to store history of everything that happened to a remote track which decides\n * it's current layer and degraded status.\n */\nclass TrackHistory {\n  history: Record<string, any>[] = [];\n\n  push(action: Record<string, any>) {\n    action.time = new Date().toISOString().split('T')[1];\n    this.history.push(action);\n  }\n}\n","import HMSMediaStream from './HMSMediaStream';\nimport HMSPublishConnection from '../../connection/publish/publishConnection';\nimport { SimulcastLayer } from '../../interfaces';\nimport { stringifyMediaStreamTrack } from '../../utils/json';\nimport HMSLogger from '../../utils/logger';\nimport { isNode } from '../../utils/support';\nimport { HMSLocalTrack, HMSLocalVideoTrack } from '../tracks';\n\nexport default class HMSLocalStream extends HMSMediaStream {\n  /** Connection set when publish is called for the first track */\n  private readonly TAG = '[HMSLocalStream]';\n  private connection: HMSPublishConnection | null = null;\n\n  setConnection(connection: HMSPublishConnection) {\n    this.connection = connection;\n  }\n\n  addTransceiver(track: HMSLocalTrack, simulcastLayers: SimulcastLayer[]) {\n    const transceiver = this.connection!.addTransceiver(track.getTrackBeingSent(), {\n      streams: [this.nativeStream],\n      direction: 'sendonly',\n      sendEncodings: this.getTrackEncodings(track, simulcastLayers),\n    });\n    this.setPreferredCodec(transceiver, track.nativeTrack.kind);\n    track.transceiver = transceiver;\n    return transceiver;\n  }\n\n  async setMaxBitrateAndFramerate(track: HMSLocalTrack): Promise<void> {\n    await this.connection?.setMaxBitrateAndFramerate(track);\n  }\n\n  // @ts-ignore\n  setPreferredCodec(_transceiver: RTCRtpTransceiver, _kind: string) {\n    // TODO: Some browsers don't support setCodecPreferences, resort to SDPMunging?\n  }\n\n  replaceStreamTrack(track: MediaStreamTrack, withTrack: MediaStreamTrack) {\n    this.nativeStream.addTrack(withTrack);\n    this.nativeStream.removeTrack(track);\n    HMSLogger.d(\n      this.TAG,\n      'Native stream tracks after replace',\n      this.nativeStream.getAudioTracks().map(stringifyMediaStreamTrack),\n      `prev Track - ${stringifyMediaStreamTrack(track)}`,\n      `new Track - ${stringifyMediaStreamTrack(withTrack)}`,\n    );\n  }\n\n  /**\n   * On mute and unmute of video tracks as well as for changing cameras, we replace the track with new track,\n   * so as to avoid a renegotiation with the backend and reflect changes faster.\n   * In case of video plugins we need to replace the track sent to remote without stopping the original one. As\n   * if the original is stopped, plugin would stop getting input frames to process. So only the track in the\n   * sender needs to be replaced.\n   */\n  async replaceSenderTrack(track: MediaStreamTrack, withTrack: MediaStreamTrack) {\n    if (!this.connection || this.connection.connectionState === 'closed') {\n      HMSLogger.d(this.TAG, `publish connection is not initialised or closed`);\n      return;\n    }\n    const sender = this.connection.getSenders().find(sender => sender.track && sender.track.id === track.id);\n\n    if (sender === undefined) {\n      HMSLogger.w(this.TAG, `No sender found for trackId=${track.id}`);\n      return;\n    }\n    await sender.replaceTrack(withTrack);\n  }\n\n  removeSender(track: HMSLocalTrack) {\n    if (!this.connection || this.connection.connectionState === 'closed') {\n      HMSLogger.d(this.TAG, `publish connection is not initialised or closed`);\n      return;\n    }\n    const sender = track.transceiver?.sender;\n    if (!sender) {\n      HMSLogger.e(this.TAG, `No sender found for trackId=${track.trackId}`);\n      return;\n    }\n    this.connection?.removeTrack(sender);\n    const toRemoveLocalTrackIdx = this.tracks.indexOf(track);\n    if (toRemoveLocalTrackIdx !== -1) {\n      this.tracks.splice(toRemoveLocalTrackIdx, 1);\n    } else {\n      HMSLogger.e(this.TAG, `Cannot find ${track.trackId} in locally stored tracks`);\n    }\n  }\n\n  private getTrackEncodings(track: HMSLocalTrack, simulcastLayers: SimulcastLayer[]) {\n    const trackEncodings: RTCRtpEncodingParameters[] = [];\n    if (track instanceof HMSLocalVideoTrack) {\n      if (simulcastLayers.length > 0) {\n        HMSLogger.v(this.TAG, 'Simulcast enabled with layers', simulcastLayers);\n        trackEncodings.push(...simulcastLayers);\n      } else {\n        const encodings: RTCRtpEncodingParameters = { active: this.nativeStream.active };\n        if (track.settings.maxBitrate && !isNode) {\n          encodings.maxBitrate = track.settings.maxBitrate;\n        }\n        trackEncodings.push(encodings);\n      }\n    }\n    return trackEncodings;\n  }\n}\n","import AnalyticsEventFactory from '../analytics/AnalyticsEventFactory';\nimport { EventBus } from '../events/EventBus';\nimport { HMSUpdateListener } from '../interfaces';\nimport { NetworkHealth, ScoreMap } from '../signal/init/models';\nimport HMSLogger from '../utils/logger';\nimport { sleep } from '../utils/timer-utils';\n\nexport class NetworkTestManager {\n  private readonly TAG = '[NetworkTestManager]';\n  private controller = new AbortController();\n  private score?: number;\n  constructor(private eventBus: EventBus, private listener?: HMSUpdateListener) {}\n\n  start = async (networkHealth: NetworkHealth) => {\n    if (!networkHealth) {\n      return;\n    }\n    const { url, timeout, scoreMap } = networkHealth;\n    const signal = this.controller.signal;\n\n    const startTime = Date.now();\n    let downloadedSize = 0;\n    const timeoutPromise = sleep(timeout).then(() => {\n      this.controller.abort();\n    });\n    try {\n      const res = await fetch(`${url}?${Date.now()}`, { signal });\n      const reader = res.body?.getReader();\n      if (!reader) {\n        throw Error('unable to process request');\n      }\n      const readData = async () => {\n        if (!reader) {\n          return;\n        }\n        try {\n          let completed = false;\n          while (!completed) {\n            const { value, done } = await reader.read();\n            completed = done;\n            if (value) {\n              downloadedSize += value.byteLength;\n              this.sendScore({ scoreMap, downloadedSize, startTime });\n            }\n          }\n        } catch (error) {\n          if ((error as Error).name !== 'AbortError') {\n            HMSLogger.d(this.TAG, error);\n          }\n        }\n      };\n\n      return Promise.race([readData(), timeoutPromise])\n        .then(() => {\n          this.sendScore({ scoreMap, downloadedSize, startTime, finished: true });\n        })\n        .catch(error => {\n          HMSLogger.e(this.TAG, error);\n          this.updateScoreToListener(0);\n          this.eventBus.analytics.publish(\n            AnalyticsEventFactory.previewNetworkQuality({ error: (error as Error).message }),\n          );\n        });\n    } catch (error) {\n      if ((error as Error).name !== 'AbortError') {\n        HMSLogger.d(this.TAG, error);\n        this.updateScoreToListener(0);\n        this.eventBus.analytics.publish(\n          AnalyticsEventFactory.previewNetworkQuality({ error: (error as Error).message }),\n        );\n      } else {\n        HMSLogger.d(this.TAG, error);\n      }\n    }\n  };\n\n  stop = () => {\n    if (!this.controller.signal.aborted) {\n      this.controller.abort();\n    }\n  };\n\n  private sendScore = ({\n    scoreMap,\n    downloadedSize,\n    startTime,\n    finished = false,\n  }: {\n    scoreMap: ScoreMap;\n    downloadedSize: number;\n    startTime: number;\n    finished?: boolean;\n  }) => {\n    const totalTimeInSecs = (Date.now() - startTime) / 1000;\n    const sizeInKB = downloadedSize / 1024;\n    const bitrate = (sizeInKB / totalTimeInSecs) * 8;\n    let calculatedScore = -1;\n    for (const score in scoreMap) {\n      const thresholds = scoreMap[score];\n      if (bitrate >= thresholds.low && (!thresholds.high || bitrate <= thresholds.high)) {\n        calculatedScore = Number(score);\n      }\n    }\n    this.updateScoreToListener(calculatedScore);\n    if (finished) {\n      this.eventBus.analytics.publish(\n        AnalyticsEventFactory.previewNetworkQuality({ score: calculatedScore, downLink: bitrate.toFixed(2) }),\n      );\n    }\n  };\n\n  private updateScoreToListener(newQualityScore: number) {\n    if (newQualityScore === this.score) {\n      return;\n    }\n    this.score = newQualityScore;\n    this.listener?.onNetworkQuality?.(newQualityScore);\n  }\n}\n","import { IStore } from './store';\nimport { HMSRole } from '../interfaces';\nimport InitialSettings from '../interfaces/settings';\nimport { SimulcastLayers } from '../interfaces/simulcast-layers';\nimport { HMSPeerUpdate, HMSTrackUpdate, HMSUpdateListener } from '../interfaces/update-listener';\nimport { HMSLocalTrack } from '../media/tracks';\nimport ITransport from '../transport/ITransport';\n\nexport default class RoleChangeManager {\n  constructor(\n    private store: IStore,\n    private transport: ITransport,\n    private publish: (settings: InitialSettings) => Promise<void>,\n    private removeAuxiliaryTrack: (trackId: string) => void,\n    private listener?: HMSUpdateListener,\n  ) {}\n\n  handleLocalPeerRoleUpdate = async ({ oldRole, newRole }: { oldRole: HMSRole; newRole: HMSRole }) => {\n    const localPeer = this.store.getLocalPeer();\n\n    if (!localPeer) {\n      return;\n    }\n\n    await this.diffRolesAndPublishTracks({ oldRole, newRole });\n    this.listener?.onPeerUpdate(HMSPeerUpdate.ROLE_UPDATED, localPeer);\n  };\n\n  diffRolesAndPublishTracks = async ({ oldRole, newRole }: { oldRole: HMSRole; newRole: HMSRole }) => {\n    const wasPublishing = new Set(oldRole.publishParams.allowed);\n    const isPublishing = new Set(newRole.publishParams.allowed);\n\n    const removeVideo = this.removeTrack(wasPublishing, isPublishing, 'video');\n\n    const removeAudio = this.removeTrack(wasPublishing, isPublishing, 'audio');\n    const removeScreen = this.removeTrack(wasPublishing, isPublishing, 'screen');\n\n    const videoHasSimulcastDifference = this.hasSimulcastDifference(\n      oldRole.publishParams.simulcast?.video,\n      newRole.publishParams.simulcast?.video,\n    );\n    const screenHasSimulcastDifference = this.hasSimulcastDifference(\n      oldRole.publishParams.simulcast?.screen,\n      newRole.publishParams.simulcast?.screen,\n    );\n\n    const prevVideoEnabled = this.store.getLocalPeer()?.videoTrack?.enabled;\n\n    await this.removeAudioTrack(removeAudio);\n    await this.removeVideoTracks(removeVideo || videoHasSimulcastDifference);\n    await this.removeScreenTracks(removeScreen || screenHasSimulcastDifference);\n\n    const initialSettings = this.store.getConfig()?.settings || {\n      isAudioMuted: true,\n      isVideoMuted: true,\n      audioInputDeviceId: 'default',\n      videoDeviceId: 'default',\n      audioOutputDeviceId: 'default',\n    };\n\n    if (videoHasSimulcastDifference) {\n      initialSettings.isVideoMuted = !prevVideoEnabled;\n    }\n\n    // call publish with new settings, local track manager will diff policies\n    await this.publish(initialSettings);\n  };\n\n  private async removeVideoTracks(removeVideo: boolean) {\n    if (!removeVideo) {\n      return;\n    }\n    const localPeer = this.store.getLocalPeer();\n    // TODO check auxillary tracks for regular audio and video too\n    if (localPeer?.videoTrack) {\n      // TODO: stop processed track and cleanup plugins loop non async\n      // vb can throw change role off otherwise\n      if (localPeer.videoTrack.isPublished) {\n        await this.transport.unpublish([localPeer.videoTrack]);\n      } else {\n        await localPeer.videoTrack.cleanup();\n      }\n      this.listener?.onTrackUpdate(HMSTrackUpdate.TRACK_REMOVED, localPeer.videoTrack, localPeer);\n      localPeer.videoTrack = undefined;\n    }\n    await this.removeAuxTracks(track => track.source !== 'screen' && track.type === 'video');\n  }\n\n  private async removeAudioTrack(removeAudio: boolean) {\n    if (!removeAudio) {\n      return;\n    }\n    const localPeer = this.store.getLocalPeer();\n    if (localPeer?.audioTrack) {\n      if (localPeer.audioTrack.isPublished) {\n        await this.transport.unpublish([localPeer.audioTrack]);\n      } else {\n        await localPeer.audioTrack.cleanup();\n      }\n      this.listener?.onTrackUpdate(HMSTrackUpdate.TRACK_REMOVED, localPeer.audioTrack, localPeer);\n      localPeer.audioTrack = undefined;\n    }\n    await this.removeAuxTracks(track => track.source !== 'screen' && track.type === 'audio');\n  }\n\n  private async removeScreenTracks(removeScreen: boolean) {\n    if (!removeScreen) {\n      return;\n    }\n    await this.removeAuxTracks(track => track.source === 'screen');\n  }\n\n  private async removeAuxTracks(predicate: (track: HMSLocalTrack) => boolean) {\n    const localPeer = this.store.getLocalPeer();\n    if (localPeer?.auxiliaryTracks) {\n      const localAuxTracks = [...localPeer.auxiliaryTracks];\n      for (const track of localAuxTracks) {\n        if (predicate(track)) {\n          await this.removeAuxiliaryTrack(track.trackId);\n        }\n      }\n    }\n  }\n\n  private removeTrack(wasPublishing: Set<string>, isPublishing: Set<string>, type: string) {\n    return wasPublishing.has(type) && !isPublishing.has(type);\n  }\n\n  private hasSimulcastDifference(oldLayers?: SimulcastLayers, newLayers?: SimulcastLayers) {\n    if (!oldLayers && !newLayers) {\n      return false;\n    }\n    if (oldLayers?.layers?.length !== newLayers?.layers?.length) {\n      return true;\n    }\n\n    // return true if anyone layer has different maxBitrate/maxFramerate\n    return !!oldLayers?.layers?.some(layer => {\n      const newLayer = newLayers?.layers?.find(newLayer => newLayer.rid === layer.rid);\n      return newLayer?.maxBitrate !== layer.maxBitrate || newLayer?.maxFramerate !== layer.maxFramerate;\n    });\n  }\n}\n","import AnalyticsEvent from './AnalyticsEvent';\nimport { IAnalyticsTransportProvider } from './IAnalyticsTransportProvider';\nimport {\n  CLIENT_ANAYLTICS_PROD_ENDPOINT,\n  CLIENT_ANAYLTICS_QA_ENDPOINT,\n  CLIENT_ANAYLTICS_STORAGE_LIMIT,\n} from '../utils/constants';\nimport { LocalStorage } from '../utils/local-storage';\nimport HMSLogger from '../utils/logger';\nimport { ENV } from '../utils/support';\n\ninterface ClientEventBody {\n  event: string;\n  event_id: string;\n  peer: {\n    peer_id?: string;\n    role?: string;\n    joined_at?: number;\n    left_at?: number;\n    room_id?: string;\n    room_name?: string;\n    session_started_at?: number;\n    user_data?: string;\n    user_name?: string;\n    template_id?: string;\n    session_id?: string;\n  };\n  timestamp: number;\n  cluster: {\n    websocket_url: string;\n  };\n  payload: Record<string, any>;\n  device_id: string;\n}\n\nclass ClientAnalyticsTransport implements IAnalyticsTransportProvider {\n  readonly TAG = '[HTTPAnalyticsTransport]';\n  private failedEvents = new LocalStorage<AnalyticsEvent[]>('client-events');\n  isConnected = true;\n  private env: null | ENV = null;\n  private websocketURL = '';\n\n  setEnv(env: ENV) {\n    this.env = env;\n    this.flushFailedEvents();\n  }\n\n  setWebsocketEndpoint(ws: string) {\n    this.websocketURL = ws;\n  }\n\n  sendEvent(event: AnalyticsEvent) {\n    if (!this.env || !this.websocketURL) {\n      this.addEventToStorage(event);\n      return;\n    }\n    const requestBody: ClientEventBody = {\n      event: event.name,\n      payload: event.properties,\n      event_id: String(event.timestamp),\n      peer: event.metadata.peer,\n      timestamp: event.timestamp,\n      device_id: event.device_id,\n      cluster: {\n        websocket_url: this.websocketURL,\n      },\n    };\n    const url = this.env === ENV.PROD ? CLIENT_ANAYLTICS_PROD_ENDPOINT : CLIENT_ANAYLTICS_QA_ENDPOINT;\n    fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${event.metadata.token}`,\n        user_agent_v2: event.metadata.userAgent,\n      },\n      body: JSON.stringify(requestBody),\n    })\n      .then(response => {\n        // Ignore invalid token or expired token messages\n        if (response.status === 401) {\n          this.removeFromStorage(event);\n          return;\n        }\n        if (response.status !== 200) {\n          throw Error(response.statusText);\n        }\n        this.removeFromStorage(event);\n      })\n      .catch(error => {\n        HMSLogger.v(this.TAG, 'Failed to send event', error, event);\n        this.addEventToStorage(event);\n      });\n  }\n  flushFailedEvents() {\n    const events = this.failedEvents.get();\n    events?.forEach(event => this.sendEvent(event));\n  }\n\n  private addEventToStorage(event: AnalyticsEvent): void {\n    const existingEvents = this.failedEvents.get() || [];\n    if (!existingEvents.find(existingEvent => existingEvent.timestamp === event.timestamp)) {\n      if (existingEvents.length === CLIENT_ANAYLTICS_STORAGE_LIMIT) {\n        existingEvents.shift();\n      }\n      existingEvents.push(event);\n      this.failedEvents.set(existingEvents);\n    }\n  }\n\n  private removeFromStorage(event: AnalyticsEvent): void {\n    const events = this.failedEvents.get() || [];\n    const index = events.findIndex(storageEvent => storageEvent.timestamp === event.timestamp);\n    if (index > -1) {\n      events.splice(index, 1);\n      this.failedEvents.set(events);\n    }\n  }\n}\n\nexport const HTTPAnalyticsTransport = new ClientAnalyticsTransport();\n","import { IStore, KnownRoles, TrackStateEntry } from './IStore';\nimport { HTTPAnalyticsTransport } from '../../analytics/HTTPAnalyticsTransport';\nimport { SelectedDevices } from '../../device-manager';\nimport { DeviceStorageManager } from '../../device-manager/DeviceStorage';\nimport { ErrorFactory, HMSAction } from '../../error/ErrorFactory';\nimport { HMSConfig, HMSFrameworkInfo, HMSSpeaker } from '../../interfaces';\nimport { IErrorListener } from '../../interfaces/error-listener';\nimport {\n  HMSSimulcastLayerDefinition,\n  RID,\n  SimulcastLayer,\n  SimulcastLayers,\n  simulcastMapping,\n} from '../../interfaces/simulcast-layers';\nimport {\n  HMSAudioTrack,\n  HMSLocalTrack,\n  HMSRemoteAudioTrack,\n  HMSRemoteVideoTrack,\n  HMSTrack,\n  HMSTrackSource,\n  HMSTrackType,\n  HMSVideoTrack,\n} from '../../media/tracks';\nimport { PolicyParams } from '../../notification-manager';\nimport { ENV } from '../../utils/support';\nimport { createUserAgent } from '../../utils/user-agent';\nimport HMSRoom from '../models/HMSRoom';\nimport { HMSLocalPeer, HMSPeer, HMSRemotePeer } from '../models/peer';\n\nclass Store implements IStore {\n  private room?: HMSRoom;\n  private knownRoles: KnownRoles = {};\n  private localPeerId?: string;\n  private peers: Record<string, HMSPeer> = {};\n  private tracks = new Map<HMSTrack, HMSTrack>();\n  private templateAppData?: Record<string, string>;\n  // Not used currently. Will be used exclusively for preview tracks.\n  // private previewTracks: Record<string, HMSTrack> = {};\n  private peerTrackStates: Record<string, TrackStateEntry> = {};\n  private speakers: HMSSpeaker[] = [];\n  private videoLayers?: SimulcastLayers;\n  // private screenshareLayers?: SimulcastLayers;\n  private config?: HMSConfig;\n  private errorListener?: IErrorListener;\n  private roleDetailsArrived = false;\n  private env: ENV = ENV.PROD;\n  private simulcastEnabled = false;\n  private userAgent: string = createUserAgent(this.env);\n\n  getConfig() {\n    return this.config;\n  }\n\n  setSimulcastEnabled(enabled: boolean) {\n    this.simulcastEnabled = enabled;\n  }\n\n  getEnv() {\n    return this.env;\n  }\n\n  getPublishParams() {\n    const peer = this.getLocalPeer();\n    const role = peer?.asRole || peer?.role;\n    return role?.publishParams;\n  }\n\n  getRoom() {\n    return this.room;\n  }\n\n  getPolicyForRole(role: string) {\n    return this.knownRoles[role];\n  }\n\n  getKnownRoles() {\n    return this.knownRoles;\n  }\n\n  getTemplateAppData() {\n    return this.templateAppData;\n  }\n\n  getLocalPeer() {\n    if (this.localPeerId && this.peers[this.localPeerId]) {\n      return this.peers[this.localPeerId] as HMSLocalPeer;\n    }\n    return undefined;\n  }\n\n  getRemotePeers() {\n    return Object.values(this.peers).filter(peer => !peer.isLocal) as HMSRemotePeer[];\n  }\n\n  getPeers(): HMSPeer[] {\n    return Object.values(this.peers);\n  }\n\n  getPeerById(peerId: string) {\n    if (this.peers[peerId]) {\n      return this.peers[peerId];\n    }\n    return undefined;\n  }\n\n  getTracksMap() {\n    return this.tracks;\n  }\n\n  getTracks() {\n    return Array.from(this.tracks.values());\n  }\n\n  getVideoTracks() {\n    return this.getTracks().filter(track => track.type === HMSTrackType.VIDEO) as HMSVideoTrack[];\n  }\n\n  getRemoteVideoTracks() {\n    return this.getTracks().filter(track => track instanceof HMSRemoteVideoTrack) as HMSRemoteVideoTrack[];\n  }\n\n  getAudioTracks() {\n    return this.getTracks().filter(track => track.type === HMSTrackType.AUDIO) as HMSAudioTrack[];\n  }\n\n  getPeerTracks(peerId?: string) {\n    const peer = peerId ? this.peers[peerId] : undefined;\n    const tracks: HMSTrack[] = [];\n    peer?.videoTrack && tracks.push(peer.videoTrack);\n    peer?.audioTrack && tracks.push(peer.audioTrack);\n    return tracks.concat(peer?.auxiliaryTracks || []);\n  }\n\n  getLocalPeerTracks() {\n    return this.getPeerTracks(this.localPeerId) as HMSLocalTrack[];\n  }\n\n  hasTrack(track: HMSTrack) {\n    return this.tracks.has(track);\n  }\n\n  getTrackById(trackId: string) {\n    const track = Array.from(this.tracks.values()).find(track => track.trackId === trackId);\n    if (track) {\n      return track;\n    }\n    const localPeer = this.getLocalPeer();\n    /**\n     * handle case of audio level coming from server for local peer's track where local peer\n     * didn't initially gave audio permission. So track.firstTrackId is that of dummy track and\n     * this.tracks[trackId] doesn't exist.\n     * Example repro which this solves -\n     * - call preview with audio muted, unmute audio in preview then join the room, now initial\n     * track id is that from dummy track but the track id which server knows will be different\n     */\n    if (localPeer) {\n      if (localPeer.audioTrack?.isPublishedTrackId(trackId)) {\n        return localPeer.audioTrack;\n      } else if (localPeer.videoTrack?.isPublishedTrackId(trackId)) {\n        return localPeer.videoTrack;\n      }\n    }\n    return undefined;\n  }\n\n  getPeerByTrackId(trackId: string) {\n    const track = Array.from(this.tracks.values()).find(track => track.trackId === trackId);\n    return track?.peerId ? this.peers[track.peerId] : undefined;\n  }\n\n  getSpeakers() {\n    return this.speakers;\n  }\n\n  getSpeakerPeers() {\n    return this.speakers.map(speaker => speaker.peer);\n  }\n\n  getUserAgent() {\n    return this.userAgent;\n  }\n\n  createAndSetUserAgent(frameworkInfo?: HMSFrameworkInfo) {\n    this.userAgent = createUserAgent(this.env, frameworkInfo);\n  }\n\n  setRoom(room: HMSRoom) {\n    this.room = room;\n  }\n\n  setKnownRoles(params: PolicyParams) {\n    this.knownRoles = params.known_roles;\n    this.roleDetailsArrived = true;\n    this.templateAppData = params.app_data;\n    if (!this.simulcastEnabled) {\n      return;\n    }\n    const publishParams = this.knownRoles[params.name]?.publishParams;\n    this.videoLayers = this.convertSimulcastLayers(publishParams.simulcast?.video);\n    // this.screenshareLayers = this.convertSimulcastLayers(publishParams.simulcast?.screen);\n    this.updatePeersPolicy();\n  }\n\n  hasRoleDetailsArrived(): boolean {\n    return this.roleDetailsArrived;\n  }\n\n  // eslint-disable-next-line complexity\n  setConfig(config: HMSConfig) {\n    DeviceStorageManager.rememberDevices(Boolean(config.rememberDeviceSelection));\n    if (config.rememberDeviceSelection) {\n      const devices: SelectedDevices | undefined = DeviceStorageManager.getSelection();\n      if (devices) {\n        if (!config.settings) {\n          config.settings = {};\n        }\n        if (devices.audioInput?.deviceId) {\n          config.settings.audioInputDeviceId = config.settings.audioInputDeviceId || devices.audioInput.deviceId;\n        }\n        if (devices.audioOutput?.deviceId) {\n          config.settings.audioOutputDeviceId = config.settings.audioOutputDeviceId || devices.audioOutput.deviceId;\n        }\n        if (devices.videoInput?.deviceId) {\n          config.settings.videoDeviceId = config.settings.videoDeviceId || devices.videoInput.deviceId;\n        }\n      }\n    }\n    config.autoManageVideo = config.autoManageVideo !== false;\n    config.autoManageWakeLock = config.autoManageWakeLock !== false;\n    this.config = config;\n    this.setEnv();\n  }\n\n  addPeer(peer: HMSPeer) {\n    this.peers[peer.peerId] = peer;\n    if (peer.isLocal) {\n      this.localPeerId = peer.peerId;\n    }\n  }\n\n  /**\n   * @param {HMSTrack} track the published track that has to be added\n   *\n   * Note: Only use this method to add published tracks not preview traks\n   */\n  addTrack(track: HMSTrack) {\n    this.tracks.set(track, track);\n  }\n\n  getTrackState(trackId: string) {\n    return this.peerTrackStates[trackId];\n  }\n\n  setTrackState(trackStateEntry: TrackStateEntry) {\n    this.peerTrackStates[trackStateEntry.trackInfo.track_id] = trackStateEntry;\n  }\n\n  removePeer(peerId: string) {\n    if (this.localPeerId === peerId) {\n      this.localPeerId = undefined;\n    }\n    delete this.peers[peerId];\n  }\n\n  removeTrack(track: HMSTrack) {\n    this.tracks.delete(track);\n  }\n\n  updateSpeakers(speakers: HMSSpeaker[]) {\n    this.speakers = speakers;\n  }\n\n  async updateAudioOutputVolume(value: number) {\n    for (const track of this.getAudioTracks()) {\n      await track.setVolume(value);\n    }\n  }\n\n  async updateAudioOutputDevice(device: MediaDeviceInfo) {\n    const promises: Promise<void>[] = [];\n    this.getAudioTracks().forEach(track => {\n      if (track instanceof HMSRemoteAudioTrack) {\n        promises.push(track.setOutputDevice(device));\n      }\n    });\n    await Promise.all(promises);\n  }\n\n  getSimulcastLayers(source: HMSTrackSource): SimulcastLayer[] {\n    // Enable only when backend enables and source is video or screen. ignore videoplaylist\n    if (!this.simulcastEnabled || !['screen', 'regular'].includes(source)) {\n      return [];\n    }\n    if (source === 'screen') {\n      return []; //this.screenshareLayers?.layers || []; uncomment this when screenshare simulcast supported\n    }\n    return this.videoLayers?.layers || [];\n  }\n\n  /**\n   * Convert maxBitrate from kbps to bps\n   * @internal\n   * @param simulcastLayers\n   * @returns {SimulcastLayers}\n   */\n  private convertSimulcastLayers(simulcastLayers?: SimulcastLayers) {\n    if (!simulcastLayers) {\n      return;\n    }\n    return {\n      ...simulcastLayers,\n      layers: (simulcastLayers.layers || []).map(layer => {\n        return {\n          ...layer,\n          maxBitrate: layer.maxBitrate * 1000,\n        };\n      }),\n    };\n  }\n\n  getSimulcastDefinitionsForPeer(peer: HMSPeer, source: HMSTrackSource) {\n    // TODO: remove screen check when screenshare simulcast is supported\n    if ([!peer || !peer.role, source === 'screen', !this.simulcastEnabled].some(value => !!value)) {\n      return [];\n    }\n\n    const publishParams = this.getPolicyForRole(peer.role!.name).publishParams;\n    let simulcastLayers: SimulcastLayers | undefined;\n    let width: number;\n    let height: number;\n    if (source === 'regular') {\n      simulcastLayers = publishParams.simulcast?.video;\n      width = publishParams.video.width;\n      height = publishParams.video.height;\n    } else if (source === 'screen') {\n      simulcastLayers = publishParams.simulcast?.screen;\n      width = publishParams.screen.width;\n      height = publishParams.screen.height;\n    }\n    return (\n      simulcastLayers?.layers?.map(value => {\n        const layer = simulcastMapping[value.rid as RID];\n        const resolution = {\n          width: width / value.scaleResolutionDownBy,\n          height: height / value.scaleResolutionDownBy,\n        };\n        return {\n          layer,\n          resolution,\n        } as HMSSimulcastLayerDefinition;\n      }) || []\n    );\n  }\n\n  getErrorListener() {\n    return this.errorListener;\n  }\n\n  cleanUp() {\n    const tracks = this.getTracks();\n    for (const track of tracks) {\n      track.cleanup();\n    }\n    this.room = undefined;\n    this.config = undefined;\n    this.localPeerId = undefined;\n    this.roleDetailsArrived = false;\n  }\n\n  setErrorListener(listener: IErrorListener) {\n    this.errorListener = listener;\n  }\n\n  private updatePeersPolicy() {\n    this.getPeers().forEach(peer => {\n      if (!peer.role) {\n        this.errorListener?.onError(ErrorFactory.GenericErrors.InvalidRole(HMSAction.VALIDATION, ''));\n        return;\n      }\n      peer.role = this.getPolicyForRole(peer.role.name);\n    });\n  }\n\n  private setEnv() {\n    const endPoint = this.config?.initEndpoint!;\n    const url = endPoint.split('https://')[1];\n    let env: ENV = ENV.PROD;\n    if (url.startsWith(ENV.PROD)) {\n      env = ENV.PROD;\n    } else if (url.startsWith(ENV.QA)) {\n      env = ENV.QA;\n    } else if (url.startsWith(ENV.DEV)) {\n      env = ENV.DEV;\n    }\n    this.env = env;\n    HTTPAnalyticsTransport.setEnv(env);\n  }\n}\n\nexport { Store };\n","import HMSLogger from '../utils/logger';\n\nexport class WakeLockManager {\n  private readonly TAG = '[WakeLockManager]';\n  private wakeLock: WakeLockSentinel | null = null;\n\n  acquireLock = async () => {\n    await this.requestWakeLock();\n    document?.addEventListener('visibilitychange', this.visibilityHandler);\n  };\n\n  cleanup = async () => {\n    if (this.wakeLock && !this.wakeLock.released) {\n      try {\n        await this.wakeLock.release();\n        HMSLogger.d(this.TAG, 'Wake lock released');\n      } catch (err) {\n        const error = err as Error;\n        HMSLogger.e(this.TAG, 'Error while releasing wake lock', `name=${error.name}, message=${error.message}`);\n      }\n    }\n    this.wakeLock = null;\n  };\n\n  private visibilityHandler = async () => {\n    if (document?.visibilityState === 'visible' && (!this.wakeLock || this.wakeLock.released)) {\n      HMSLogger.d(this.TAG, 'Re-acquiring wake lock due to visibility change');\n      await this.requestWakeLock();\n    }\n  };\n\n  // Function that attempts to request a screen wake lock.\n  private requestWakeLock = async () => {\n    try {\n      if (!('wakeLock' in navigator)) {\n        HMSLogger.d(this.TAG, 'Wake lock feature not supported');\n        return;\n      }\n      this.wakeLock = await navigator.wakeLock.request('screen');\n      HMSLogger.d(this.TAG, 'Wake lock acquired');\n    } catch (err) {\n      const error = err as Error;\n      HMSLogger.e(this.TAG, 'Error acquiring wake lock', `name=${error.name}, message=${error.message}`);\n    }\n  };\n}\n","import AnalyticsEvent from './AnalyticsEvent';\nimport { HMSAnalyticsLevel } from './AnalyticsEventLevel';\nimport { AnalyticsTransport } from './AnalyticsTransport';\nimport { HTTPAnalyticsTransport } from './HTTPAnalyticsTransport';\nimport { IStore } from '../sdk/store';\nimport { ANALYTICS_BUFFER_SIZE } from '../utils/constants';\nimport HMSLogger from '../utils/logger';\n\nexport class AnalyticsEventsService {\n  private bufferSize = ANALYTICS_BUFFER_SIZE;\n  private readonly TAG = '[AnalyticsEventsService]';\n\n  private transport: AnalyticsTransport | null = null;\n  private pendingEvents: AnalyticsEvent[] = [];\n\n  level: HMSAnalyticsLevel = HMSAnalyticsLevel.INFO;\n\n  constructor(private store: IStore) {}\n\n  setTransport(transport: AnalyticsTransport) {\n    this.transport = transport;\n  }\n\n  reset() {\n    this.transport = null;\n    this.pendingEvents = [];\n  }\n\n  queue(event: AnalyticsEvent) {\n    if (event.level >= this.level) {\n      this.pendingEvents.push(event);\n\n      if (this.pendingEvents.length > this.bufferSize) {\n        const removedEvent = this.pendingEvents.shift();\n        HMSLogger.d(this.TAG, 'Max buffer size reached', 'Removed event to accommodate new events', removedEvent);\n      }\n    }\n    return this;\n  }\n\n  flushFailedClientEvents() {\n    HTTPAnalyticsTransport.flushFailedEvents();\n  }\n\n  flush() {\n    try {\n      while (this.pendingEvents.length > 0) {\n        const event = this.pendingEvents.shift();\n        if (event) {\n          event.metadata.peer.peer_id = this.store.getLocalPeer()?.peerId;\n          event.metadata.userAgent = this.store.getUserAgent();\n          if (this.transport && this.transport.transportProvider.isConnected) {\n            this.transport.sendEvent(event);\n          } else {\n            this.sendClientEventOnHTTP(event);\n          }\n        }\n      }\n    } catch (error) {\n      HMSLogger.w(this.TAG, 'Flush Failed', error);\n    }\n  }\n\n  private sendClientEventOnHTTP(event: AnalyticsEvent) {\n    const room = this.store.getRoom();\n    const localPeer = this.store.getLocalPeer();\n    event.metadata.token = this.store.getConfig()?.authToken;\n    event.metadata.peer = {\n      session_id: room?.sessionId,\n      room_id: room?.id,\n      room_name: room?.name,\n      template_id: room?.templateId,\n      joined_at: room?.joinedAt?.getTime(),\n      session_started_at: room?.startedAt?.getTime(),\n      role: localPeer?.role?.name,\n      user_name: localPeer?.name,\n      user_data: localPeer?.metadata,\n    };\n    HTTPAnalyticsTransport.sendEvent(event);\n  }\n}\n","import { v4 as uuid } from 'uuid';\nimport AnalyticsEventFactory from '../analytics/AnalyticsEventFactory';\nimport { DeviceManager } from '../device-manager';\nimport { ErrorFactory, HMSAction } from '../error/ErrorFactory';\nimport { EventBus } from '../events/EventBus';\nimport { HMSDeviceChangeEvent, HMSTrackUpdate, HMSUpdateListener } from '../interfaces';\nimport { HMSRemoteAudioTrack } from '../media/tracks';\nimport { HMSRemotePeer } from '../sdk/models/peer';\nimport { IStore } from '../sdk/store';\nimport HMSLogger from '../utils/logger';\nimport { isMobile } from '../utils/support';\nimport { sleep } from '../utils/timer-utils';\n\n/**\n * Following are the errors thrown when autoplay is blocked in different browsers\n * Firefox - DOMException: The play method is not allowed by the user agent or the platform in the current context, possibly because the user denied permission.\n * Safari - NotAllowedError: The request is not allowed by the user agent or the platform in the current context, possibly because the user denied permission.\n * Chrome - DOMException: play() failed because the user didn't interact with the document first.\n * Brave - DOMException: play() can only be initiated by a user gesture.\n */\ntype AudioSinkState = {\n  autoplayFailed?: boolean;\n  initialized: boolean;\n  // this promise will be set for the first track. remaining tracks will be processed once it's know whether\n  // autoplay is allowed or not\n  autoplayCheckPromise?: Promise<void>;\n};\n\nconst INITIAL_STATE: AudioSinkState = {\n  autoplayFailed: undefined,\n  initialized: false,\n  autoplayCheckPromise: undefined,\n};\n\nexport class AudioSinkManager {\n  private audioSink?: HTMLElement;\n  private autoPausedTracks: Set<HMSRemoteAudioTrack> = new Set();\n  private readonly TAG = '[AudioSinkManager]:';\n  private volume = 100;\n  private state = { ...INITIAL_STATE };\n  private listener?: HMSUpdateListener;\n\n  constructor(private store: IStore, private deviceManager: DeviceManager, private eventBus: EventBus) {\n    this.eventBus.audioTrackAdded.subscribe(this.handleTrackAdd);\n    this.eventBus.audioTrackRemoved.subscribe(this.handleTrackRemove);\n    this.eventBus.audioTrackUpdate.subscribe(this.handleTrackUpdate);\n    this.eventBus.deviceChange.subscribe(this.handleAudioDeviceChange);\n  }\n\n  setListener(listener?: HMSUpdateListener) {\n    this.listener = listener;\n  }\n\n  private get outputDevice() {\n    return this.deviceManager.outputDevice;\n  }\n\n  getVolume() {\n    return this.volume;\n  }\n\n  async setVolume(value: number) {\n    await this.store.updateAudioOutputVolume(value);\n    this.volume = value;\n  }\n\n  /**\n   *  This function is to be called only on user interaction when\n   *  autoplay error is received.\n   */\n  async unblockAutoplay() {\n    if (this.autoPausedTracks.size > 0) {\n      this.unpauseAudioTracks();\n    }\n  }\n\n  init(elementId?: string) {\n    if (this.state.initialized || this.audioSink) {\n      return;\n    }\n    this.state.initialized = true;\n    const audioSink = document.createElement('div');\n    audioSink.id = `HMS-SDK-audio-sink-${uuid()}`;\n    const userElement = elementId && document.getElementById(elementId);\n    const audioSinkParent = userElement || document.body;\n    audioSinkParent.append(audioSink);\n\n    this.audioSink = audioSink;\n    HMSLogger.d(this.TAG, 'audio sink created', this.audioSink);\n  }\n\n  cleanUp() {\n    this.audioSink?.remove();\n    this.audioSink = undefined;\n    this.eventBus.audioTrackAdded.unsubscribe(this.handleTrackAdd);\n    this.eventBus.audioTrackRemoved.unsubscribe(this.handleTrackRemove);\n    this.eventBus.audioTrackUpdate.unsubscribe(this.handleTrackUpdate);\n    this.eventBus.deviceChange.unsubscribe(this.handleAudioDeviceChange);\n    this.autoPausedTracks = new Set();\n    this.state = { ...INITIAL_STATE };\n  }\n\n  private handleAudioPaused = async (event: any) => {\n    const audioEl = event.target as HTMLAudioElement;\n    //@ts-ignore\n    const track = audioEl.srcObject?.getAudioTracks()[0];\n    if (!track?.enabled) {\n      // No need to play if already disabled\n      return;\n    }\n    // this means the audio paused because of external factors(headset removal)\n    HMSLogger.d(this.TAG, 'Audio Paused', event.target.id);\n    const audioTrack = this.store.getTrackById(event.target.id);\n    if (audioTrack) {\n      if (isMobile()) {\n        // Play after a delay since mobile devices don't call onDevice change event\n        await sleep(500);\n        this.playAudioFor(audioTrack as HMSRemoteAudioTrack);\n      } else {\n        this.autoPausedTracks.add(audioTrack as HMSRemoteAudioTrack);\n      }\n    }\n  };\n\n  private handleTrackUpdate = ({ track }: { track: HMSRemoteAudioTrack; enabled: boolean }) => {\n    HMSLogger.d(this.TAG, 'Track updated', `${track}`);\n  };\n\n  private handleTrackAdd = async ({\n    track,\n    peer,\n    callListener = true,\n  }: {\n    track: HMSRemoteAudioTrack;\n    peer: HMSRemotePeer;\n    callListener?: boolean;\n  }) => {\n    const audioEl = document.createElement('audio');\n    audioEl.style.display = 'none';\n    audioEl.id = track.trackId;\n    audioEl.addEventListener('pause', this.handleAudioPaused);\n\n    audioEl.onerror = async () => {\n      HMSLogger.e(this.TAG, 'error on audio element', audioEl.error);\n      const ex = ErrorFactory.TracksErrors.AudioPlaybackError(\n        `Audio playback error for track - ${track.trackId} code - ${audioEl?.error?.code}`,\n      );\n      this.eventBus.analytics.publish(AnalyticsEventFactory.audioPlaybackError(ex));\n      if (audioEl?.error?.code === MediaError.MEDIA_ERR_DECODE) {\n        this.removeAudioElement(audioEl, track);\n        await sleep(500);\n        await this.handleTrackAdd({ track, peer, callListener: false });\n      }\n    };\n    track.setAudioElement(audioEl);\n    track.setVolume(this.volume);\n    HMSLogger.d(this.TAG, 'Audio track added', `${track}`);\n    this.init(); // call to create sink element if not already created\n    this.audioSink?.append(audioEl);\n    this.outputDevice && (await track.setOutputDevice(this.outputDevice));\n    audioEl.srcObject = new MediaStream([track.nativeTrack]);\n    callListener && this.listener?.onTrackUpdate(HMSTrackUpdate.TRACK_ADDED, track, peer);\n    await this.handleAutoplayError(track);\n  };\n\n  private handleAutoplayError = async (track: HMSRemoteAudioTrack) => {\n    /**\n     * if it's not known whether autoplay will succeed, wait for it to be known\n     */\n    if (this.state.autoplayFailed === undefined) {\n      if (!this.state.autoplayCheckPromise) {\n        // it's the first track, try to play it, that'll tell us whether autoplay is allowed\n        this.state.autoplayCheckPromise = new Promise<void>(resolve => {\n          this.playAudioFor(track).then(resolve);\n        });\n      }\n      // and wait for the result to be known\n      await this.state.autoplayCheckPromise;\n    }\n    /**\n     * Don't play the track if autoplay failed, add to paused list\n     */\n    if (this.state.autoplayFailed) {\n      this.autoPausedTracks.add(track);\n      return;\n    }\n    await this.playAudioFor(track);\n  };\n\n  private handleAudioDeviceChange = (event: HMSDeviceChangeEvent) => {\n    // if there is no selection that means this is an init request. No need to do anything\n    if (event.error || !event.selection || event.type === 'video') {\n      return;\n    }\n    this.unpauseAudioTracks();\n  };\n\n  /**\n   * try to play audio for the passed in track, assume autoplay error happened if play fails\n   * @param track\n   * @private\n   */\n  private async playAudioFor(track: HMSRemoteAudioTrack) {\n    const audioEl = track.getAudioElement();\n    if (!audioEl) {\n      HMSLogger.w(this.TAG, 'No audio element found on track', track.trackId);\n      return;\n    }\n    try {\n      await audioEl.play();\n      this.state.autoplayFailed = false;\n      this.autoPausedTracks.delete(track);\n      HMSLogger.d(this.TAG, 'Played track', `${track}`);\n    } catch (err) {\n      this.autoPausedTracks.add(track);\n      HMSLogger.e(this.TAG, 'Failed to play track', `${track}`, err as Error);\n      const error = err as Error;\n      if (!this.state.autoplayFailed && error.name === 'NotAllowedError') {\n        this.state.autoplayFailed = true;\n        const ex = ErrorFactory.TracksErrors.AutoplayBlocked(HMSAction.AUTOPLAY, '');\n        ex.addNativeError(error);\n        this.eventBus.analytics.publish(AnalyticsEventFactory.autoplayError());\n        this.eventBus.autoplayError.publish(ex);\n      }\n    }\n  }\n\n  private handleTrackRemove = (track: HMSRemoteAudioTrack) => {\n    this.autoPausedTracks.delete(track);\n    const audioEl = document.getElementById(track.trackId) as HTMLAudioElement;\n    if (audioEl) {\n      this.removeAudioElement(audioEl, track);\n    }\n    // Reset autoplay error thrown because if all tracks are removed and a new track is added\n    // Autoplay error is thrown in safari\n    if (this.audioSink && this.audioSink.childElementCount === 0) {\n      this.state.autoplayCheckPromise = undefined;\n      this.state.autoplayFailed = undefined;\n    }\n    HMSLogger.d(this.TAG, 'Audio track removed', `${track}`);\n  };\n\n  private unpauseAudioTracks = async () => {\n    const promises: Promise<void>[] = [];\n    this.autoPausedTracks.forEach(track => {\n      promises.push(this.playAudioFor(track));\n    });\n    // Return after all pending tracks are played\n    await Promise.all(promises);\n  };\n\n  private removeAudioElement = (audioEl: HTMLAudioElement, track: HMSRemoteAudioTrack) => {\n    if (audioEl) {\n      HMSLogger.d(this.TAG, 'removing audio element', `${track}`);\n      audioEl.removeEventListener('pause', this.handleAudioPaused);\n      audioEl.srcObject = null;\n      audioEl.remove();\n      track.setAudioElement(null);\n    }\n  };\n}\n","import { DeviceStorageManager } from './DeviceStorage';\nimport AnalyticsEventFactory from '../analytics/AnalyticsEventFactory';\nimport { HMSException } from '../error/HMSException';\nimport { EventBus } from '../events/EventBus';\nimport { DeviceMap, DeviceType, HMSDeviceChangeEvent } from '../interfaces';\nimport { HMSAudioTrackSettingsBuilder, HMSVideoTrackSettingsBuilder } from '../media/settings';\nimport { HMSLocalAudioTrack, HMSLocalTrack, HMSLocalVideoTrack } from '../media/tracks';\nimport { IStore } from '../sdk/store';\nimport HMSLogger from '../utils/logger';\nimport { debounce } from '../utils/timer-utils';\n\nexport type SelectedDevices = {\n  [DeviceType.audioInput]?: MediaDeviceInfo;\n  [DeviceType.videoInput]?: MediaDeviceInfo;\n  [DeviceType.audioOutput]?: MediaDeviceInfo;\n};\n\ntype DeviceAndGroup = Partial<MediaTrackSettings>;\n\ninterface HMSDeviceManager extends DeviceMap {\n  outputDevice?: MediaDeviceInfo;\n  hasWebcamPermission: boolean;\n  hasMicrophonePermission: boolean;\n}\n\nexport class DeviceManager implements HMSDeviceManager {\n  audioInput: MediaDeviceInfo[] = [];\n  audioOutput: MediaDeviceInfo[] = [];\n  videoInput: MediaDeviceInfo[] = [];\n  outputDevice?: MediaDeviceInfo;\n  // true if user has allowed the permission\n  // false if user has denied the permission or prompt was never shown or ignored\n  // or if the camera/mic is not available in the device\n  hasWebcamPermission = false;\n  hasMicrophonePermission = false;\n\n  private readonly TAG = '[Device Manager]:';\n  private initialized = false;\n  private videoInputChanged = false;\n  private audioInputChanged = false;\n\n  constructor(private store: IStore, private eventBus: EventBus) {\n    const isLocalTrackEnabled = ({ enabled, track }: { enabled: boolean; track: HMSLocalTrack }) =>\n      enabled && track.source === 'regular';\n    this.eventBus.localVideoEnabled.waitFor(isLocalTrackEnabled).then(async () => {\n      await this.enumerateDevices();\n      if (this.videoInputChanged) {\n        this.eventBus.deviceChange.publish({ devices: this.getDevices() } as HMSDeviceChangeEvent);\n      }\n    });\n    this.eventBus.localAudioEnabled.waitFor(isLocalTrackEnabled).then(async () => {\n      await this.enumerateDevices();\n      if (this.audioInputChanged) {\n        this.eventBus.deviceChange.publish({ devices: this.getDevices() } as HMSDeviceChangeEvent);\n      }\n    });\n  }\n\n  updateOutputDevice = async (deviceId?: string) => {\n    const newDevice = this.audioOutput.find(device => device.deviceId === deviceId);\n    if (newDevice) {\n      this.outputDevice = newDevice;\n      await this.store.updateAudioOutputDevice(newDevice);\n      DeviceStorageManager.updateSelection('audioOutput', { deviceId: newDevice.deviceId, groupId: newDevice.groupId });\n    }\n    return newDevice;\n  };\n\n  async init(force = false) {\n    if (this.initialized && !force) {\n      return;\n    }\n    !this.initialized && navigator.mediaDevices.addEventListener('devicechange', this.handleDeviceChange);\n    this.initialized = true;\n    await this.enumerateDevices();\n    this.logDevices('Init');\n    await this.setOutputDevice();\n    this.eventBus.deviceChange.publish({\n      devices: this.getDevices(),\n    } as HMSDeviceChangeEvent);\n    this.eventBus.analytics.publish(\n      AnalyticsEventFactory.deviceChange({\n        selection: this.getCurrentSelection(),\n        type: 'list',\n        devices: this.getDevices(),\n      }),\n    );\n  }\n\n  getDevices(): DeviceMap {\n    return {\n      audioInput: this.audioInput,\n      audioOutput: this.audioOutput,\n      videoInput: this.videoInput,\n    };\n  }\n\n  cleanUp() {\n    this.initialized = false;\n    this.audioInput = [];\n    this.audioOutput = [];\n    this.videoInput = [];\n    this.outputDevice = undefined;\n    navigator.mediaDevices.removeEventListener('devicechange', this.handleDeviceChange);\n  }\n\n  getCurrentSelection = (): SelectedDevices => {\n    const localPeer = this.store.getLocalPeer();\n    const audioDevice = this.createIdentifier(localPeer?.audioTrack?.getMediaTrackSettings());\n    const videoDevice = this.createIdentifier(localPeer?.videoTrack?.getMediaTrackSettings());\n    const audioSelection = this.audioInput.find(device => {\n      const id = this.createIdentifier(device);\n      return id === audioDevice;\n    });\n    const videoSelection = this.videoInput.find(device => this.createIdentifier(device) === videoDevice);\n    return {\n      audioInput: audioSelection,\n      videoInput: videoSelection,\n      audioOutput: this.outputDevice,\n    };\n  };\n\n  private createIdentifier(deviceInfo?: DeviceAndGroup) {\n    if (!deviceInfo) {\n      return '';\n    }\n    return `${deviceInfo.deviceId}${deviceInfo.groupId}`;\n  }\n\n  private computeChange = (prevDevices: string[], currentDevices: MediaDeviceInfo[]) => {\n    if (prevDevices.length !== currentDevices.length) {\n      return true;\n    }\n    return currentDevices.some(device => !prevDevices.includes(this.createIdentifier(device)));\n  };\n\n  private enumerateDevices = async () => {\n    try {\n      const devices = await navigator.mediaDevices.enumerateDevices();\n      const prevVideoInput = this.videoInput.map(this.createIdentifier);\n      const prevAudioInput = this.audioInput.map(this.createIdentifier);\n      this.audioInput = [];\n      this.audioOutput = [];\n      this.videoInput = [];\n      devices.forEach(device => {\n        if (device.kind === 'audioinput' && device.label) {\n          this.hasMicrophonePermission = true;\n          this.audioInput.push(device as MediaDeviceInfo);\n        } else if (device.kind === 'audiooutput') {\n          this.audioOutput.push(device);\n        } else if (device.kind === 'videoinput' && device.label) {\n          this.hasWebcamPermission = true;\n          this.videoInput.push(device as MediaDeviceInfo);\n        }\n      });\n      this.videoInputChanged = this.computeChange(prevVideoInput, this.videoInput);\n      this.audioInputChanged = this.computeChange(prevAudioInput, this.audioInput);\n      DeviceStorageManager.setDevices({\n        videoInput: [...this.videoInput],\n        audioInput: [...this.audioInput],\n        audioOutput: [...this.audioOutput],\n      });\n      this.logDevices('Enumerate Devices');\n    } catch (error) {\n      HMSLogger.e(this.TAG, 'Failed enumerating devices', error);\n    }\n  };\n\n  private handleDeviceChange = debounce(async () => {\n    await this.enumerateDevices();\n    this.logDevices('After Device Change');\n    const localPeer = this.store.getLocalPeer();\n    await this.setOutputDevice(true);\n    await this.handleAudioInputDeviceChange(localPeer?.audioTrack);\n    await this.handleVideoInputDeviceChange(localPeer?.videoTrack);\n    this.eventBus.analytics.publish(\n      AnalyticsEventFactory.deviceChange({\n        selection: this.getCurrentSelection(),\n        type: 'change',\n        devices: this.getDevices(),\n      }),\n    );\n  }, 500).bind(this);\n\n  /**\n   * Function to get the device after device change\n   * Chrome and Edge provide a default device from which we select the actual device\n   * Firefox and safari give 0th device as system default\n   * @returns {MediaDeviceInfo}\n   */\n  getNewAudioInputDevice() {\n    const defaultDevice = this.audioInput.find(device => device.deviceId === 'default');\n    if (defaultDevice) {\n      // Selecting a non-default device so that the deviceId comparision does not give\n      // false positives when device is removed, because the other available device\n      // get's the deviceId as default once this device is removed\n      const nextDevice = this.audioInput.find(device => {\n        return device.deviceId !== 'default' && defaultDevice.label.includes(device.label);\n      });\n      return nextDevice;\n    }\n    return this.audioInput[0];\n  }\n\n  /**\n   * This method is to select the input/output from same group\n   * same group meaning both input/output are of same device\n   * This method might override the default coming from browser and system so as to select options from same\n   * device type. This is required in certain cases where browser's default is not correct.\n   * Algo:\n   * 1. find the non default input device if selected one is default by matching device label\n   * 2. find the corresponding output device which has the same group id or same label\n   * 3. select the previous selected device if nothing was found\n   * 4. select the default one if no matching device was found and previous device doesn't exist anymore\n   * 5. select the first option if there is no default\n   */\n  async setOutputDevice(deviceChange = false) {\n    const inputDevice = this.getNewAudioInputDevice();\n    const prevSelection = this.createIdentifier(this.outputDevice);\n    this.outputDevice = this.getAudioOutputDeviceMatchingInput(inputDevice);\n    if (!this.outputDevice) {\n      // there is no matching device, let's revert back to the prev selected device\n      this.outputDevice = this.audioOutput.find(device => this.createIdentifier(device) === prevSelection);\n      if (!this.outputDevice) {\n        // prev device doesn't exist as well, select default deviceId device if available, otherwise select 0th device\n        this.outputDevice = this.audioOutput.find(device => device.deviceId === 'default') || this.audioOutput[0];\n      }\n    }\n    await this.store.updateAudioOutputDevice(this.outputDevice);\n    // send event only on device change and device is not same as previous\n    if (deviceChange && prevSelection !== this.createIdentifier(this.outputDevice)) {\n      this.eventBus.analytics.publish(\n        AnalyticsEventFactory.deviceChange({\n          selection: { audioOutput: this.outputDevice },\n          devices: this.getDevices(),\n          type: 'audioOutput',\n        }),\n      );\n      this.eventBus.deviceChange.publish({\n        selection: this.outputDevice,\n        type: 'audioOutput',\n        devices: this.getDevices(),\n      } as HMSDeviceChangeEvent);\n    }\n  }\n\n  private handleAudioInputDeviceChange = async (audioTrack?: HMSLocalAudioTrack) => {\n    if (!audioTrack) {\n      HMSLogger.d(this.TAG, 'No Audio track on local peer');\n      return;\n    }\n    // no need to proceed further if input has not changed\n    if (!this.audioInputChanged) {\n      HMSLogger.d(this.TAG, 'No Change in AudioInput Device');\n      return;\n    }\n    const newSelection = this.getNewAudioInputDevice();\n    if (!newSelection || !newSelection.deviceId) {\n      this.eventBus.analytics.publish(\n        AnalyticsEventFactory.deviceChange({\n          selection: { audioInput: newSelection },\n          error: new Error('Audio device not found') as HMSException,\n          devices: this.getDevices(),\n          type: 'audioInput',\n        }),\n      );\n      HMSLogger.w(this.TAG, 'Audio device not found');\n      return;\n    }\n    const { settings } = audioTrack;\n    const newAudioTrackSettings = new HMSAudioTrackSettingsBuilder()\n      .codec(settings.codec)\n      .maxBitrate(settings.maxBitrate)\n      .deviceId(newSelection.deviceId)\n      .build();\n    try {\n      await audioTrack.setSettings(newAudioTrackSettings, true);\n      this.eventBus.deviceChange.publish({\n        devices: this.getDevices(),\n        selection: newSelection,\n        type: 'audioInput',\n      } as HMSDeviceChangeEvent);\n      this.logDevices('Audio Device Change Success');\n    } catch (error) {\n      HMSLogger.e(this.TAG, '[Audio Device Change]', error);\n      this.eventBus.analytics.publish(\n        AnalyticsEventFactory.deviceChange({\n          selection: { audioInput: newSelection },\n          devices: this.getDevices(),\n          type: 'audioInput',\n          error: error as HMSException,\n        }),\n      );\n      this.eventBus.deviceChange.publish({\n        error,\n        selection: newSelection,\n        type: 'audioInput',\n        devices: this.getDevices(),\n      } as HMSDeviceChangeEvent);\n    }\n  };\n\n  private handleVideoInputDeviceChange = async (videoTrack?: HMSLocalVideoTrack) => {\n    if (!videoTrack) {\n      HMSLogger.d(this.TAG, 'No video track on local peer');\n      return;\n    }\n    // no need to proceed further if input has not changed\n    if (!this.videoInputChanged) {\n      HMSLogger.d(this.TAG, 'No Change in VideoInput Device');\n      return;\n    }\n    const newSelection = this.videoInput[0];\n    if (!newSelection || !newSelection.deviceId) {\n      this.eventBus.analytics.publish(\n        AnalyticsEventFactory.deviceChange({\n          selection: { videoInput: newSelection },\n          error: new Error('Video device not found') as HMSException,\n          devices: this.getDevices(),\n          type: 'video',\n        }),\n      );\n      HMSLogger.w(this.TAG, 'Video device not found');\n      return;\n    }\n    const { settings } = videoTrack;\n    const newVideoTrackSettings = new HMSVideoTrackSettingsBuilder()\n      .codec(settings.codec)\n      .maxBitrate(settings.maxBitrate)\n      .maxFramerate(settings.maxFramerate)\n      .setWidth(settings.width)\n      .setHeight(settings.height)\n      .deviceId(newSelection.deviceId)\n      .build();\n    try {\n      await (videoTrack as HMSLocalVideoTrack).setSettings(newVideoTrackSettings, true);\n      // On replace track, enabled will be true. Need to be set to previous state\n      // videoTrack.setEnabled(enabled); // TODO: remove this once verified on qa.\n      this.eventBus.deviceChange.publish({\n        devices: this.getDevices(),\n        selection: newSelection,\n        type: 'video',\n      } as HMSDeviceChangeEvent);\n      this.logDevices('Video Device Change Success');\n    } catch (error) {\n      HMSLogger.e(this.TAG, '[Video Device Change]', error);\n      this.eventBus.analytics.publish(\n        AnalyticsEventFactory.deviceChange({\n          selection: { videoInput: newSelection },\n          devices: this.getDevices(),\n          type: 'video',\n          error: error as HMSException,\n        }),\n      );\n      this.eventBus.deviceChange.publish({\n        error: error as Error,\n        type: 'video',\n        selection: newSelection,\n        devices: this.getDevices(),\n      } as HMSDeviceChangeEvent);\n    }\n  };\n\n  private getAudioOutputDeviceMatchingInput(inputDevice?: MediaDeviceInfo) {\n    const blacklist = this.store.getConfig()?.settings?.speakerAutoSelectionBlacklist || [];\n    if (blacklist === 'all') {\n      return;\n    }\n\n    const inputLabel = inputDevice?.label.toLowerCase() || '';\n    if (blacklist.some(label => inputLabel.includes(label.toLowerCase()))) {\n      return;\n    }\n\n    if (inputDevice?.groupId) {\n      // only check for label because if groupId check is added it will select speaker\n      // when an external earphone without microphone is added\n      return this.audioOutput.find(device => inputDevice.deviceId !== 'default' && device.label === inputDevice.label);\n    }\n\n    return;\n  }\n\n  private logDevices(label = '') {\n    HMSLogger.d(\n      this.TAG,\n      label,\n      JSON.stringify(\n        {\n          videoInput: [...this.videoInput],\n          audioInput: [...this.audioInput],\n          audioOutput: [...this.audioOutput],\n          selected: this.getCurrentSelection(),\n        },\n        null,\n        4,\n      ),\n    );\n  }\n}\n","import { DeviceManager } from '.';\nimport { AudioSinkManager } from '../audio-sink-manager';\nimport { HMSAudioContextHandler } from '../utils/media';\n\nexport interface IAudioOutputManager {\n  getDevice(): MediaDeviceInfo | undefined;\n  setDevice(deviceId: string): Promise<MediaDeviceInfo | undefined>;\n  getVolume(): number;\n  setVolume(value: number): void;\n}\n\nexport class AudioOutputManager implements IAudioOutputManager {\n  constructor(private deviceManager: DeviceManager, private audioSinkManager: AudioSinkManager) {}\n\n  getVolume() {\n    return this.audioSinkManager.getVolume();\n  }\n\n  setVolume(value: number) {\n    if (value < 0 || value > 100) {\n      throw Error('Please pass a valid number between 0-100');\n    }\n    this.audioSinkManager.setVolume(value);\n  }\n\n  getDevice() {\n    return this.deviceManager.outputDevice;\n  }\n\n  setDevice(deviceId?: string) {\n    return this.deviceManager.updateOutputDevice(deviceId);\n  }\n\n  async unblockAutoplay() {\n    await this.audioSinkManager.unblockAutoplay();\n    /**\n     * similar to autoplay error when there's no user interaction,\n     * audio context is paused due to which empty audio tracks do not send any data and therefore it doesn't reach SFU.\n     * resume audio context on user interaction to enable empty audio tracks to send data and be forwarded to remote peers\n     */\n    await HMSAudioContextHandler.resumeContext();\n  }\n}\n","import { EventEmitter2 as EventEmitter } from 'eventemitter2';\nimport { HMSInternalEvent } from './HMSInternalEvent';\nimport AnalyticsEvent from '../analytics/AnalyticsEvent';\nimport { HMSException } from '../error/HMSException';\nimport { HMSDeviceChangeEvent, HMSRole } from '../interfaces';\nimport { HMSLocalAudioTrack, HMSLocalVideoTrack, HMSRemoteAudioTrack, HMSRemoteVideoTrack } from '../media/tracks';\nimport { PolicyParams } from '../notification-manager';\nimport { HMSWebrtcStats } from '../rtc-stats';\nimport { HMSRemotePeer } from '../sdk/models/peer';\nimport { HMSEvents } from '../utils/constants';\nimport { ITrackAudioLevelUpdate } from '../utils/track-audio-level-monitor';\n\nexport class EventBus {\n  private eventEmitter: EventEmitter = new EventEmitter();\n  readonly deviceChange = new HMSInternalEvent<HMSDeviceChangeEvent>(HMSEvents.DEVICE_CHANGE, this.eventEmitter);\n  readonly localAudioEnabled = new HMSInternalEvent<{ enabled: boolean; track: HMSLocalAudioTrack }>(\n    HMSEvents.LOCAL_AUDIO_ENABLED,\n    this.eventEmitter,\n  );\n  readonly localVideoEnabled = new HMSInternalEvent<{ enabled: boolean; track: HMSLocalVideoTrack }>(\n    HMSEvents.LOCAL_VIDEO_ENABLED,\n    this.eventEmitter,\n  );\n\n  /**\n   * Emitter which processes raw RTC stats from rtcStatsUpdate and calls client callback\n   */\n  readonly statsUpdate = new HMSInternalEvent<HMSWebrtcStats>(HMSEvents.STATS_UPDATE, this.eventEmitter);\n\n  readonly trackDegraded = new HMSInternalEvent<HMSRemoteVideoTrack>(HMSEvents.TRACK_DEGRADED, this.eventEmitter);\n  readonly trackRestored = new HMSInternalEvent<HMSRemoteVideoTrack>(HMSEvents.TRACK_RESTORED, this.eventEmitter);\n\n  /**\n   * Emits audio level updates for audio tracks(used with local track in preview)\n   */\n  readonly trackAudioLevelUpdate = new HMSInternalEvent<ITrackAudioLevelUpdate>(\n    HMSEvents.TRACK_AUDIO_LEVEL_UPDATE,\n    this.eventEmitter,\n  );\n\n  readonly audioPluginFailed = new HMSInternalEvent<HMSException>(HMSEvents.AUDIO_PLUGIN_FAILED, this.eventEmitter);\n\n  readonly localAudioSilence = new HMSInternalEvent<{ track: HMSLocalAudioTrack }>(\n    HMSEvents.LOCAL_AUDIO_SILENCE,\n    this.eventEmitter,\n  );\n\n  readonly analytics = new HMSInternalEvent<AnalyticsEvent>(HMSEvents.ANALYTICS, this.eventEmitter);\n\n  readonly policyChange = new HMSInternalEvent<PolicyParams>(HMSEvents.POLICY_CHANGE, this.eventEmitter);\n\n  readonly localRoleUpdate = new HMSInternalEvent<{ oldRole: HMSRole; newRole: HMSRole }>(\n    HMSEvents.LOCAL_ROLE_UPDATE,\n    this.eventEmitter,\n  );\n\n  readonly audioTrackUpdate = new HMSInternalEvent<{ track: HMSRemoteAudioTrack; enabled: boolean }>(\n    HMSEvents.AUDIO_TRACK_UPDATE,\n    this.eventEmitter,\n  );\n\n  readonly audioTrackAdded = new HMSInternalEvent<{ track: HMSRemoteAudioTrack; peer: HMSRemotePeer }>(\n    HMSEvents.AUDIO_TRACK_ADDED,\n    this.eventEmitter,\n  );\n\n  readonly audioTrackRemoved = new HMSInternalEvent<HMSRemoteAudioTrack>(\n    HMSEvents.AUDIO_TRACK_REMOVED,\n    this.eventEmitter,\n  );\n\n  readonly autoplayError = new HMSInternalEvent<HMSException>(HMSEvents.AUTOPLAY_ERROR, this.eventEmitter);\n\n  readonly leave = new HMSInternalEvent<HMSException | undefined>(HMSEvents.LEAVE, this.eventEmitter);\n}\n","import type { WaitForFilter, WaitForOptions } from 'eventemitter2';\nimport { EventEmitter2 as EventEmitter } from 'eventemitter2';\n\nexport class HMSInternalEvent<T> {\n  constructor(private eventName: string, private eventEmitter: EventEmitter) {}\n\n  publish = (event?: T) => {\n    this.eventEmitter.emit(this.eventName, event);\n  };\n  subscribe = (fn: (event: T) => void | Promise<void>) => {\n    this.eventEmitter.on(this.eventName, fn);\n  };\n  subscribeOnce = (fn: (event: T) => void | Promise<void>) => {\n    this.eventEmitter.once(this.eventName, fn);\n  };\n  unsubscribe = (fn: (event: T) => void | Promise<void>) => {\n    this.eventEmitter.off(this.eventName, fn);\n  };\n  waitFor = (predicate: WaitForFilter) => {\n    return this.eventEmitter.waitFor(this.eventName, {\n      filter: predicate,\n    } as WaitForOptions);\n  };\n  removeAllListeners = () => {\n    this.eventEmitter.removeAllListeners(this.eventName);\n  };\n}\n","import { HMSAudioListener, HMSPeerUpdate, HMSSpeaker, HMSUpdateListener } from '../../interfaces';\nimport { HMSAudioTrack } from '../../media/tracks';\nimport { IStore } from '../../sdk/store';\nimport { SpeakerList } from '../HMSNotifications';\n\nexport class ActiveSpeakerManager {\n  constructor(private store: IStore, public listener?: HMSUpdateListener, public audioListener?: HMSAudioListener) {}\n\n  handleActiveSpeakers(speakerList: SpeakerList) {\n    const speakers = speakerList['speaker-list'];\n    const hmsSpeakers: HMSSpeaker[] = speakers.map(speaker => ({\n      audioLevel: speaker.level,\n      peer: this.store.getPeerById(speaker.peer_id)!,\n      track: this.store.getTrackById(speaker.track_id) as HMSAudioTrack,\n    }));\n\n    this.audioListener?.onAudioLevelUpdate(hmsSpeakers);\n    this.store.updateSpeakers(hmsSpeakers);\n    const dominantSpeaker = speakers[0];\n\n    if (dominantSpeaker) {\n      const dominantSpeakerPeer = this.store.getPeerById(dominantSpeaker.peer_id);\n      this.listener?.onPeerUpdate(HMSPeerUpdate.BECAME_DOMINANT_SPEAKER, dominantSpeakerPeer!);\n    } else {\n      this.listener?.onPeerUpdate(HMSPeerUpdate.RESIGNED_DOMINANT_SPEAKER, null);\n    }\n  }\n}\n","/**\n * Method names for incoming RPC messages from BIZ Signal through Websocket.\n * Used to call the corresponding handler/manager in NotificationManager\n * which will call the corresponding HMSUpdateListener callbacks.\n */\n\nexport enum HMSNotificationMethod {\n  ROOM_STATE = 'room-state',\n  PEER_JOIN = 'on-peer-join',\n  PEER_LEAVE = 'on-peer-leave',\n  PEER_LIST = 'peer-list',\n  TRACK_METADATA_ADD = 'on-track-add',\n  TRACK_UPDATE = 'on-track-update',\n  CHANGE_TRACK_MUTE_STATE_UPDATE = 'on-change-track-mute-state-request',\n  ACTIVE_SPEAKERS = 'active-speakers',\n  CONNECTION_QUALITY = 'on-connection-quality-update',\n  SFU_STATS = 'sfu-stats',\n  ON_SFU_TRACK_LAYER_UPDATE = 'on-track-layer-update',\n  BROADCAST = 'on-broadcast',\n  ROLE_CHANGE = 'on-role-change',\n  POLICY_CHANGE = 'on-policy-change',\n  ROLE_CHANGE_REQUEST = 'on-role-change-request',\n  TRACK_UPDATE_REQUEST = 'on-track-update-request',\n  PEER_UPDATE = 'on-peer-update',\n  PEER_LEAVE_REQUEST = 'on-peer-leave-request',\n  UNSUPPORTED = 'unsupported',\n  RTMP_START = 'on-rtmp-start',\n  RTMP_STOP = 'on-rtmp-stop',\n  RECORDING_START = 'on-record-start',\n  RECORDING_STOP = 'on-record-stop',\n  HLS_START = 'on-hls-start',\n  HLS_STOP = 'on-hls-stop',\n  METADATA_CHANGE = 'on-metadata-change',\n}\n","import { HMSUpdateListener } from '../../interfaces';\nimport Message from '../../sdk/models/HMSMessage';\nimport { HMSPeer } from '../../sdk/models/peer';\nimport { IStore } from '../../sdk/store';\nimport HMSLogger from '../../utils/logger';\nimport { HMSNotificationMethod } from '../HMSNotificationMethod';\nimport { MessageNotification } from '../HMSNotifications';\n\nexport class BroadcastManager {\n  private readonly TAG = '[BroadcastManager]';\n  constructor(private store: IStore, public listener?: HMSUpdateListener) {}\n\n  handleNotification(method: string, notification: any) {\n    if (method !== HMSNotificationMethod.BROADCAST) {\n      return;\n    }\n    this.handleBroadcast(notification);\n  }\n\n  private handleBroadcast(messageNotification: MessageNotification) {\n    const notifPeer = messageNotification.peer;\n    const notifMessage = messageNotification.info;\n    const notifRoles = messageNotification.roles;\n\n    const sender = this.getSender(notifPeer);\n    const recipientPeer = messageNotification.private ? this.store.getLocalPeer() : undefined;\n    const recipientRoles = [];\n\n    if (notifRoles?.length) {\n      const knownRoles = this.store.getKnownRoles();\n      for (const role of notifRoles) {\n        knownRoles[role] && recipientRoles.push(knownRoles[role]);\n      }\n    }\n\n    const hmsMessage = new Message({\n      ...notifMessage,\n      sender,\n      recipientRoles,\n      recipientPeer,\n      time: new Date(messageNotification.timestamp),\n    });\n    HMSLogger.d(this.TAG, `Received Message from sender=${notifPeer?.peer_id}: ${hmsMessage}`);\n    this.listener?.onMessageReceived(hmsMessage);\n  }\n\n  private getSender(notifPeer?: MessageNotification['peer']) {\n    // If sender peerId is available in store, use that peer.\n    let sender = notifPeer ? this.store.getPeerById(notifPeer.peer_id) : undefined;\n    // If not available in store, use peer data from received broadcast message from Biz\n    // notifPeer can be undefined when message is sent via api\n    if (!sender && notifPeer) {\n      sender = new HMSPeer({\n        peerId: notifPeer.peer_id,\n        name: notifPeer.info.name,\n        isLocal: false,\n        customerUserId: notifPeer.info.user_id,\n        metadata: notifPeer.info.data,\n      });\n    }\n    return sender;\n  }\n}\n","import { HMSConnectionQuality, HMSConnectionQualityListener } from '../../interfaces';\nimport { ConnectionQualityList } from '../HMSNotifications';\n\nexport class ConnectionQualityManager {\n  constructor(public listener?: HMSConnectionQualityListener) {}\n\n  handleQualityUpdate(qualityList: ConnectionQualityList) {\n    const peers = qualityList.peers;\n    const hmsPeers: HMSConnectionQuality[] = peers.map(peer => {\n      return {\n        peerID: peer.peer_id,\n        downlinkQuality: peer.downlink_score,\n      };\n    });\n    this.listener?.onConnectionQualityUpdate(hmsPeers);\n  }\n}\n","import { PeerManager } from './PeerManager';\nimport { TrackManager } from './TrackManager';\nimport { HMSUpdateListener } from '../..';\nimport { HMSTrackUpdate } from '../../interfaces';\nimport { HMSPeer } from '../../sdk/models/peer';\nimport { IStore } from '../../sdk/store';\nimport HMSLogger from '../../utils/logger';\nimport { HMSNotificationMethod } from '../HMSNotificationMethod';\nimport { PeerListNotification, PeerNotification, PeriodicRoomState } from '../HMSNotifications';\n\n/**\n * Handles:\n * - Initial Peer List - get peer and track meta-data for peers who are already in the room when you join\n * - Reconnect Peer List - Handle peer and track changes in the room missed out due to reconnection\n *\n * Cases to handle in reconnect peer list:\n * - Add additional peers as peer join\n * - Remove missing peers as peer leave\n * - For existing peers:\n *    - Add new tracks as track add\n *    - Remove missing tracks as track remove\n *    - Track state change(enabled) as track update\n */\nexport class PeerListManager {\n  private readonly TAG = '[PeerListManager]';\n  constructor(\n    private store: IStore,\n    private peerManager: PeerManager,\n    private trackManager: TrackManager,\n    public listener?: HMSUpdateListener,\n  ) {}\n\n  handleNotification(method: string, notification: any, isReconnecting: boolean) {\n    if (method === HMSNotificationMethod.PEER_LIST) {\n      const peerList = notification as PeerListNotification;\n      if (isReconnecting) {\n        HMSLogger.d(this.TAG, `RECONNECT_PEER_LIST event`, JSON.stringify(peerList, null, 2));\n        this.handleReconnectPeerList(peerList);\n      } else {\n        // TODO: Don't call initial peerlist if atleast 1room state had happen\n        HMSLogger.d(this.TAG, `PEER_LIST event`, JSON.stringify(peerList, null, 2));\n        this.handleInitialPeerList(peerList);\n      }\n    } else if (method === HMSNotificationMethod.ROOM_STATE) {\n      const roomState = notification as PeriodicRoomState;\n      this.handlePreviewRoomState(roomState);\n    }\n  }\n\n  private handleInitialPeerList = (peerList: PeerListNotification) => {\n    const peers = Object.values(peerList.peers);\n    this.peerManager.handlePeerList(peers);\n  };\n\n  private handleReconnectPeerList = (peerList: PeerListNotification) => {\n    this.handleRepeatedPeerList(peerList.peers);\n  };\n\n  private handlePreviewRoomState = (roomState: PeriodicRoomState) => {\n    if (!this.store.hasRoleDetailsArrived()) {\n      // we can't process the peers yet we don't know enough about them(role info)\n      return;\n    }\n    const roomPeers = roomState.peers;\n    if (roomPeers === null || roomPeers === undefined) {\n      // in this case, room state doesn't say anything about the peers,\n      // there can be optimisations in place to not send this field when it's unchanged from previously sent value.\n      // If there are no peers either roomState.peers will be empty object\n      // or peer_count will be 0(handled below)\n      if (roomState.peer_count === 0) {\n        this.handleRepeatedPeerList({});\n      }\n      return;\n    }\n    // we don't get tracks inside the peer object in room state, we're adding\n    // an empty value here so rest of the code flow can ignore this change, the below\n    // can be changed when tracks will be sent as a separate object in future\n    Object.keys(roomPeers).forEach(peer => {\n      roomPeers[peer].tracks = {};\n      roomPeers[peer].is_from_room_state = true;\n    });\n    this.handleRepeatedPeerList(roomPeers);\n  };\n\n  private handleRepeatedPeerList = (peersMap: Record<string, PeerNotification>) => {\n    const currentPeerList = this.store.getRemotePeers();\n    const peers = Object.values(peersMap);\n    const peersToRemove = currentPeerList.filter(hmsPeer => !peersMap[hmsPeer.peerId]);\n    if (peersToRemove.length > 0) {\n      HMSLogger.d(this.TAG, `${peersToRemove}`);\n    }\n\n    // Send peer-leave updates to all the missing peers\n    peersToRemove.forEach(peer => {\n      const peerNotification: PeerNotification = {\n        peer_id: peer.peerId,\n        role: peer.role?.name || '',\n        info: {\n          name: peer.name,\n          data: peer.metadata || '',\n          user_id: peer.customerUserId || '',\n        },\n        tracks: {},\n      };\n\n      this.peerManager.handlePeerLeave(peerNotification);\n    });\n\n    const peerList: PeerNotification[] = [];\n    // Check for any tracks which are added/removed\n    peers.forEach(newPeerNotification => {\n      const oldPeer = this.store.getPeerById(newPeerNotification.peer_id);\n      const newPeerTrackStates = Object.values(newPeerNotification.tracks);\n\n      if (oldPeer) {\n        // Peer already present in room, we take diff between the tracks\n        const tracks = this.store.getPeerTracks(oldPeer.peerId);\n\n        // Remove all the tracks which are not present in the peer.tracks\n        tracks.forEach(track => {\n          if (!newPeerNotification.tracks[track.trackId]) {\n            this.removePeerTrack(oldPeer, track.trackId);\n            this.listener?.onTrackUpdate(HMSTrackUpdate.TRACK_REMOVED, track, oldPeer);\n          }\n        });\n\n        // Add track-metadata for all the new tracks\n        newPeerTrackStates.forEach(trackData => {\n          if (!this.store.getTrackById(trackData.track_id)) {\n            // NOTE: We assume that, once the connection is re-established,\n            //  transport layer will send a native onTrackAdd\n            this.store.setTrackState({\n              peerId: oldPeer.peerId,\n              trackInfo: trackData,\n            });\n          }\n        });\n\n        // Handle RTC track add and track state change.\n        this.trackManager.handleTrackUpdate({\n          peer: { info: newPeerNotification.info, peer_id: newPeerNotification.peer_id },\n          tracks: newPeerNotification.tracks,\n        });\n\n        // Update peer's role locally, new role is received from the reconnect peer-list\n        this.peerManager.handlePeerUpdate(newPeerNotification);\n        peerList.push(newPeerNotification);\n      } else {\n        // New peer joined while reconnecting\n        peerList.push(newPeerNotification);\n      }\n    });\n    if (peerList.length > 0) {\n      this.peerManager.handlePeerList(peerList);\n    }\n  };\n\n  private removePeerTrack(peer: HMSPeer, trackId: string) {\n    HMSLogger.d(this.TAG, `removing track - ${trackId} from ${peer}`);\n    if (peer.audioTrack?.trackId === trackId) {\n      peer.audioTrack = undefined;\n    } else if (peer.videoTrack?.trackId === trackId) {\n      peer.videoTrack = undefined;\n    } else {\n      const trackIndex = peer.auxiliaryTracks.findIndex(track => track.trackId === trackId);\n      trackIndex >= 0 && peer.auxiliaryTracks.splice(trackIndex, 1);\n    }\n  }\n}\n","export const convertDateNumToDate = (dateNum?: number): Date | undefined => {\n  return dateNum ? new Date(dateNum) : undefined;\n};\n","import { TrackManager } from './TrackManager';\nimport { HMSPeer, HMSPeerUpdate, HMSTrackUpdate, HMSUpdateListener } from '../../interfaces';\nimport { HMSRemoteVideoTrack } from '../../media/tracks';\nimport { HMSRemotePeer } from '../../sdk/models/peer';\nimport { IStore } from '../../sdk/store';\nimport { convertDateNumToDate } from '../../utils/date';\nimport HMSLogger from '../../utils/logger';\nimport { HMSNotificationMethod } from '../HMSNotificationMethod';\nimport { PeerNotification } from '../HMSNotifications';\n\n/**\n * Handles:\n * - New peer join\n * - Peer Leave\n * - Role update for peer\n *\n * Notes:\n * - Peer join comes with track meta-data,\n * we add it to the store and call TrackManager to process it when RTC Track comes in.\n */\nexport class PeerManager {\n  private readonly TAG = '[PeerManager]';\n  constructor(private store: IStore, private trackManager: TrackManager, public listener?: HMSUpdateListener) {}\n\n  handleNotification(method: string, notification: any) {\n    switch (method) {\n      case HMSNotificationMethod.PEER_JOIN: {\n        const peer = notification as PeerNotification;\n        this.handlePeerJoin(peer);\n        break;\n      }\n\n      case HMSNotificationMethod.PEER_LEAVE: {\n        const peer = notification as PeerNotification;\n        this.handlePeerLeave(peer);\n        break;\n      }\n      case HMSNotificationMethod.PEER_UPDATE:\n        this.handlePeerUpdate(notification as PeerNotification);\n        break;\n      default:\n        break;\n    }\n  }\n\n  handlePeerList = (peers: PeerNotification[]) => {\n    if (peers.length === 0) {\n      this.listener?.onPeerUpdate(HMSPeerUpdate.PEER_LIST, []);\n      return;\n    }\n    const hmsPeers: HMSRemotePeer[] = [];\n    const newPeers = new Set(peers.map(peer => peer.peer_id));\n    this.store.getRemotePeers().forEach(({ peerId, fromRoomState }) => {\n      /**\n       * Remove only if the peer join happened from preview roomstate update. This will prevent the peer joined\n       * from peer-join event post join from being removed from the store.\n       */\n      if (!newPeers.has(peerId) && fromRoomState) {\n        this.store.removePeer(peerId);\n      }\n    });\n    for (const peer of peers) {\n      hmsPeers.push(this.makePeer(peer));\n    }\n    this.listener?.onPeerUpdate(HMSPeerUpdate.PEER_LIST, hmsPeers);\n    this.trackManager.processPendingTracks();\n  };\n\n  handlePeerJoin = (peer: PeerNotification) => {\n    const hmsPeer = this.makePeer(peer);\n\n    this.listener?.onPeerUpdate(HMSPeerUpdate.PEER_JOINED, hmsPeer);\n    this.trackManager.processPendingTracks();\n  };\n\n  handlePeerLeave = (peer: PeerNotification) => {\n    const hmsPeer = this.store.getPeerById(peer.peer_id);\n    this.store.removePeer(peer.peer_id);\n    HMSLogger.d(this.TAG, `PEER_LEAVE`, peer.peer_id, `remainingPeers=${this.store.getPeers().length}`);\n\n    if (!hmsPeer) {\n      return;\n    }\n\n    if (hmsPeer.audioTrack) {\n      this.listener?.onTrackUpdate(HMSTrackUpdate.TRACK_REMOVED, hmsPeer.audioTrack, hmsPeer);\n    }\n\n    if (hmsPeer.videoTrack) {\n      this.listener?.onTrackUpdate(HMSTrackUpdate.TRACK_REMOVED, hmsPeer.videoTrack, hmsPeer);\n    }\n\n    hmsPeer.auxiliaryTracks?.forEach(track => {\n      this.listener?.onTrackUpdate(HMSTrackUpdate.TRACK_REMOVED, track, hmsPeer);\n    });\n\n    this.listener?.onPeerUpdate(HMSPeerUpdate.PEER_LEFT, hmsPeer);\n  };\n\n  handlePeerUpdate(notification: PeerNotification) {\n    const peer = this.store.getPeerById(notification.peer_id);\n\n    if (!peer) {\n      return;\n    }\n\n    if (peer.role && peer.role.name !== notification.role) {\n      const newRole = this.store.getPolicyForRole(notification.role);\n      peer.updateRole(newRole);\n      this.updateSimulcastLayersForPeer(peer);\n      this.listener?.onPeerUpdate(HMSPeerUpdate.ROLE_UPDATED, peer);\n    }\n    this.handlePeerInfoUpdate({ peer, ...notification.info });\n  }\n\n  handlePeerInfoUpdate({ peer, name, data }: { peer?: HMSPeer; name?: string; data?: string }) {\n    if (!peer) {\n      return;\n    }\n    if (name && peer.name !== name) {\n      peer.updateName(name);\n      this.listener?.onPeerUpdate(HMSPeerUpdate.NAME_UPDATED, peer);\n    }\n    if (data && peer.metadata !== data) {\n      peer.updateMetadata(data);\n      this.listener?.onPeerUpdate(HMSPeerUpdate.METADATA_UPDATED, peer);\n    }\n  }\n\n  private makePeer(peer: PeerNotification) {\n    let hmsPeer = this.store.getPeerById(peer.peer_id) as HMSRemotePeer;\n    if (!hmsPeer) {\n      hmsPeer = new HMSRemotePeer({\n        peerId: peer.peer_id,\n        name: peer.info.name,\n        customerUserId: peer.info.user_id,\n        metadata: peer.info.data,\n        role: this.store.getPolicyForRole(peer.role),\n        joinedAt: convertDateNumToDate(peer.joined_at),\n        fromRoomState: !!peer.is_from_room_state,\n      });\n      this.store.addPeer(hmsPeer);\n      HMSLogger.d(this.TAG, `adding to the peerList`, `${hmsPeer}`);\n    }\n\n    for (const trackId in peer.tracks) {\n      this.store.setTrackState({\n        peerId: peer.peer_id,\n        trackInfo: peer.tracks[trackId],\n      });\n    }\n    return hmsPeer;\n  }\n\n  private updateSimulcastLayersForPeer(peer: HMSPeer) {\n    this.store.getPeerTracks(peer.peerId).forEach(track => {\n      if (track.type === 'video' && ['regular', 'screen'].includes(track.source!)) {\n        const remoteTrack = track as HMSRemoteVideoTrack;\n        const simulcastDefinitions = this.store.getSimulcastDefinitionsForPeer(peer, remoteTrack.source!);\n        remoteTrack.setSimulcastDefinitons(simulcastDefinitions);\n      }\n    });\n  }\n}\n","import { EventBus } from '../../events/EventBus';\nimport { IStore } from '../../sdk/store';\nimport HMSLogger from '../../utils/logger';\nimport { PolicyParams } from '../HMSNotifications';\n\n/**\n * Handles:\n * - Set policy with publishParams, simulcast layers to store\n * - Emit 'local-peer-role-update' to trigger RoleChangeManager to publish/unpublish local tracks\n * - Emit 'policy-change' to finish preview before calling listener.onPreview\n */\nexport class PolicyChangeManager {\n  constructor(private store: IStore, private eventBus: EventBus) {}\n\n  handlePolicyChange(params: PolicyParams) {\n    const localPeer = this.store.getLocalPeer();\n\n    if (localPeer && !localPeer.role) {\n      const newRole = params.known_roles[params.name];\n      localPeer.updateRole(newRole);\n    }\n\n    this.store.setKnownRoles(params);\n    const room = this.store.getRoom();\n    if (room) {\n      room.templateId = params.template_id;\n    } else {\n      HMSLogger.w('[PolicyChangeManager]', 'on policy change - room not present');\n    }\n    // handle when role is not present in known_roles\n    // const publishParams = params.known_roles[params.name]?.publishParams;\n    // this.store.setPublishParams(publishParams);\n\n    if (localPeer?.role && localPeer.role.name !== params.name) {\n      const newRole = this.store.getPolicyForRole(params.name);\n      const oldRole = localPeer.role;\n      localPeer.updateRole(newRole);\n      this.eventBus.localRoleUpdate.publish({ oldRole, newRole });\n    }\n    this.eventBus.policyChange.publish(params);\n  }\n}\n","import { HMSRemotePeer, HMSRoleChangeRequest, HMSUpdateListener } from '../../interfaces';\nimport { HMSLocalTrack, HMSTrackSource } from '../../media/tracks';\nimport { IStore } from '../../sdk/store';\nimport { HMSNotificationMethod } from '../HMSNotificationMethod';\nimport {\n  ChangeTrackMuteStateNotification,\n  RoleChangeRequestParams,\n  TrackUpdateRequestNotification,\n} from '../HMSNotifications';\n\n/**\n * Handles request from remote peers to change something on the local side. For eg. role change, track mute/unmute.\n */\nexport class RequestManager {\n  constructor(private store: IStore, public listener?: HMSUpdateListener) {}\n\n  handleNotification(method: string, notification: any) {\n    switch (method) {\n      case HMSNotificationMethod.ROLE_CHANGE_REQUEST:\n        this.handleRoleChangeRequest(notification as RoleChangeRequestParams);\n        break;\n\n      case HMSNotificationMethod.TRACK_UPDATE_REQUEST:\n        this.handleTrackUpdateRequest(notification as TrackUpdateRequestNotification);\n        break;\n\n      case HMSNotificationMethod.CHANGE_TRACK_MUTE_STATE_UPDATE:\n        this.handleChangeTrackStateRequest(notification as ChangeTrackMuteStateNotification);\n        break;\n      default:\n        return;\n    }\n  }\n\n  private handleRoleChangeRequest(notification: RoleChangeRequestParams) {\n    const request: HMSRoleChangeRequest = {\n      requestedBy: notification.requested_by\n        ? (this.store.getPeerById(notification.requested_by) as HMSRemotePeer)\n        : undefined,\n      role: this.store.getPolicyForRole(notification.role),\n      token: notification.token,\n    };\n\n    this.listener?.onRoleChangeRequest(request);\n  }\n\n  // eslint-disable-next-line complexity\n  private handleTrackUpdateRequest(trackUpdateRequest: TrackUpdateRequestNotification) {\n    const { requested_by, track_id, mute } = trackUpdateRequest;\n    const peer = requested_by ? this.store.getPeerById(requested_by) : undefined;\n    const track = this.store.getLocalPeerTracks().find(track => track.publishedTrackId === track_id);\n\n    if (!track) {\n      return;\n    }\n\n    const sendNotification = () => {\n      this.listener?.onChangeTrackStateRequest({ requestedBy: peer as HMSRemotePeer, track, enabled: !mute });\n    };\n\n    if (mute) {\n      // if track is already in the same state as change state, do nothing\n      if (track.enabled === !mute) {\n        return;\n      }\n      /**\n       * Directly mute track when request arrives\n       */\n      track.setEnabled(!mute).then(sendNotification);\n    } else {\n      /**\n       * Notify UI to unmute for requesting consent\n       */\n      sendNotification();\n    }\n  }\n\n  private handleChangeTrackStateRequest(request: ChangeTrackMuteStateNotification) {\n    const { type, source, value, requested_by } = request;\n    const peer = requested_by ? this.store.getPeerById(requested_by) : undefined;\n\n    // value true means the track has to be muted\n    const enabled = !value;\n    const tracksToBeUpdated = this.getTracksToBeUpdated({ type, source, enabled });\n    //Do nothing if all tracks are already in same state as the request\n    if (tracksToBeUpdated.length === 0) {\n      return;\n    }\n    // if track is to be muted, mute and send the notification, otherwise send notification\n    if (!enabled) {\n      const promises: Promise<void>[] = [];\n\n      for (const track of tracksToBeUpdated) {\n        promises.push(track.setEnabled(false));\n      }\n      Promise.all(promises).then(() => {\n        this.listener?.onChangeMultiTrackStateRequest({\n          requestedBy: peer as HMSRemotePeer,\n          tracks: tracksToBeUpdated,\n          enabled: false,\n        });\n      });\n    } else {\n      this.listener?.onChangeMultiTrackStateRequest({\n        requestedBy: peer as HMSRemotePeer,\n        tracks: tracksToBeUpdated,\n        type,\n        source,\n        enabled: true,\n      });\n    }\n  }\n\n  /**\n   * Filter the local tracks based on type, source and enabled state\n   * @returns {HMSLocalTrack[]}\n   */\n  private getTracksToBeUpdated({\n    type,\n    source,\n    enabled,\n  }: {\n    type?: 'audio' | 'video';\n    source?: HMSTrackSource;\n    enabled: boolean;\n  }) {\n    const localPeerTracks = this.store.getLocalPeerTracks();\n    let tracks: HMSLocalTrack[] = localPeerTracks;\n    if (type) {\n      tracks = tracks.filter(track => track.type === type);\n    }\n    if (source) {\n      tracks = tracks.filter(track => track.source === source);\n    }\n    // filter out tracks which are already in the desired state\n    return tracks.filter(track => track.enabled !== enabled);\n  }\n}\n","import { HMSAction } from '../../error/ErrorFactory';\nimport { HMSException } from '../../error/HMSException';\nimport { HMSHLS, HMSHLSRecording, HMSRoomUpdate, HMSUpdateListener } from '../../interfaces';\nimport { ServerError } from '../../interfaces/internal';\nimport { IStore } from '../../sdk/store';\nimport { convertDateNumToDate } from '../../utils/date';\nimport HMSLogger from '../../utils/logger';\nimport { HMSNotificationMethod } from '../HMSNotificationMethod';\nimport {\n  HLSNotification,\n  PeerListNotification,\n  PeriodicRoomState,\n  RecordingNotification,\n  RoomState,\n  RTMPNotification,\n} from '../HMSNotifications';\n\nexport class RoomUpdateManager {\n  private readonly TAG = '[RoomUpdateManager]';\n\n  constructor(private store: IStore, public listener?: HMSUpdateListener) {}\n\n  // eslint-disable-next-line complexity\n  handleNotification(method: HMSNotificationMethod, notification: any) {\n    switch (method) {\n      case HMSNotificationMethod.PEER_LIST:\n        this.onRoomState((notification as PeerListNotification).room);\n        break;\n      case HMSNotificationMethod.RTMP_START:\n        this.onRTMPStart(notification as RTMPNotification);\n        break;\n      case HMSNotificationMethod.RTMP_STOP:\n        this.onRTMPStop(notification as RTMPNotification);\n        break;\n      case HMSNotificationMethod.RECORDING_START:\n        this.onRecordingStart(notification as RecordingNotification);\n        break;\n      case HMSNotificationMethod.RECORDING_STOP:\n        this.onRecordingStop(notification as RecordingNotification);\n        break;\n      case HMSNotificationMethod.ROOM_STATE:\n        this.handlePreviewRoomState(notification as PeriodicRoomState);\n        break;\n      default:\n        this.onHLS(method, notification as HLSNotification);\n        break;\n    }\n  }\n\n  private handlePreviewRoomState(notification: PeriodicRoomState) {\n    const { room } = notification;\n    this.onRoomState(room, notification.peer_count);\n  }\n\n  private onRoomState(roomNotification: RoomState, peerCount?: number) {\n    const { recording, streaming, session_id, started_at, name } = roomNotification;\n    const room = this.store.getRoom();\n    if (!room) {\n      HMSLogger.w(this.TAG, 'on room state - room not present');\n      return;\n    }\n\n    room.peerCount = peerCount;\n    room.name = name;\n    room.recording.server.running = !!recording?.sfu.enabled;\n    room.recording.browser.running = !!recording?.browser.enabled;\n    room.rtmp.running = !!streaming?.rtmp?.enabled;\n    room.rtmp.startedAt = convertDateNumToDate(streaming?.rtmp?.started_at);\n    room.recording.server.startedAt = convertDateNumToDate(recording?.sfu.started_at);\n    room.recording.browser.startedAt = convertDateNumToDate(recording?.browser.started_at);\n    room.recording.hls = this.getPeerListHLSRecording(recording);\n    room.hls = this.convertHls(streaming?.hls);\n    room.sessionId = session_id;\n    room.startedAt = convertDateNumToDate(started_at);\n    this.listener?.onRoomUpdate(HMSRoomUpdate.RECORDING_STATE_UPDATED, room);\n  }\n\n  private onRTMPStart(notification: RTMPNotification) {\n    this.setRTMPStatus(!notification.error?.code, notification);\n  }\n\n  private onRTMPStop(notification: RTMPNotification) {\n    this.setRTMPStatus(false, notification);\n  }\n\n  private onRecordingStart(notification: RecordingNotification) {\n    this.setRecordingStatus(!notification.error?.code, notification);\n  }\n\n  private onRecordingStop(notification: RecordingNotification) {\n    this.setRecordingStatus(false, notification);\n  }\n\n  private onHLS(method: string, notification: HLSNotification) {\n    if (![HMSNotificationMethod.HLS_START, HMSNotificationMethod.HLS_STOP].includes(method as HMSNotificationMethod)) {\n      return;\n    }\n    const room = this.store.getRoom();\n    if (!room) {\n      HMSLogger.w(this.TAG, 'on hls - room not present');\n      return;\n    }\n\n    notification.enabled = method === HMSNotificationMethod.HLS_START && !notification.error?.code;\n    room.hls = this.convertHls(notification);\n    room.recording.hls = this.getHLSRecording(notification);\n    this.listener?.onRoomUpdate(HMSRoomUpdate.HLS_STREAMING_STATE_UPDATED, room);\n  }\n\n  private convertHls(hlsNotification?: HLSNotification) {\n    const hls: HMSHLS = {\n      running: !!hlsNotification?.enabled,\n      variants: [],\n      error: this.toSdkError(hlsNotification?.error),\n    };\n    hlsNotification?.variants?.forEach(variant => {\n      hls.variants.push({\n        meetingURL: variant.meeting_url,\n        url: variant.url,\n        metadata: variant.metadata,\n        startedAt: convertDateNumToDate(variant.started_at),\n      });\n    });\n    return hls;\n  }\n\n  private getHLSRecording(hlsNotification?: HLSNotification): HMSHLSRecording {\n    let hlsRecording: HMSHLSRecording = { running: false };\n    if (hlsNotification?.hls_recording) {\n      hlsRecording = {\n        running: !!hlsNotification?.enabled,\n        singleFilePerLayer: !!hlsNotification.hls_recording?.single_file_per_layer,\n        hlsVod: !!hlsNotification.hls_recording?.hls_vod,\n        startedAt: convertDateNumToDate(hlsNotification?.variants?.[0].started_at),\n        error: this.toSdkError(hlsNotification.error),\n      };\n    }\n    return hlsRecording;\n  }\n\n  private getPeerListHLSRecording(recording?: RoomState['recording']): HMSHLSRecording {\n    const hlsNotification = recording?.hls;\n    return {\n      running: !!hlsNotification?.enabled,\n      startedAt: convertDateNumToDate(hlsNotification?.started_at),\n      singleFilePerLayer: !!hlsNotification?.config?.single_file_per_layer,\n      hlsVod: !!hlsNotification?.config?.hls_vod,\n    };\n  }\n\n  private setRecordingStatus(running: boolean, notification: RecordingNotification) {\n    const room = this.store.getRoom();\n    if (!room) {\n      HMSLogger.w(this.TAG, `set recording status running=${running} - room not present`);\n      return;\n    }\n\n    let action: HMSRoomUpdate;\n    if (notification.type === 'sfu') {\n      room.recording.server = {\n        running,\n        startedAt: running ? convertDateNumToDate(notification.started_at) : undefined,\n        error: this.toSdkError(notification.error),\n      };\n      action = HMSRoomUpdate.SERVER_RECORDING_STATE_UPDATED;\n    } else {\n      room.recording.browser = {\n        running,\n        startedAt: running ? convertDateNumToDate(notification.started_at) : undefined,\n        error: this.toSdkError(notification.error),\n      };\n      action = HMSRoomUpdate.BROWSER_RECORDING_STATE_UPDATED;\n    }\n    this.listener?.onRoomUpdate(action, room);\n  }\n\n  private setRTMPStatus(running: boolean, notification: RTMPNotification) {\n    const room = this.store.getRoom();\n    if (!room) {\n      HMSLogger.w(this.TAG, 'on policy change - room not present');\n      return;\n    }\n\n    room.rtmp = {\n      running,\n      startedAt: running ? convertDateNumToDate(notification.started_at) : undefined,\n      error: this.toSdkError(notification.error),\n    };\n    this.listener?.onRoomUpdate(HMSRoomUpdate.RTMP_STREAMING_STATE_UPDATED, room);\n  }\n\n  private toSdkError(error?: ServerError): HMSException | undefined {\n    if (!error?.code) {\n      return undefined;\n    }\n    const errMsg = error.message || 'error in streaming/recording';\n    const sdkError = new HMSException(error.code, 'ServerErrors', HMSAction.NONE, errMsg, errMsg);\n    HMSLogger.e(this.TAG, 'error in streaming/recording', sdkError);\n    return sdkError;\n  }\n}\n","import { HMSUpdateListener, SessionStoreUpdate } from '../../interfaces';\nimport { IStore } from '../../sdk/store';\nimport { convertDateNumToDate } from '../../utils/date';\nimport { HMSNotificationMethod } from '../HMSNotificationMethod';\nimport { MetadataChangeNotification } from '../HMSNotifications';\n\nexport class SessionMetadataManager {\n  constructor(private store: IStore, public listener?: HMSUpdateListener) {}\n\n  handleNotification(method: string, notification: any) {\n    if (method !== HMSNotificationMethod.METADATA_CHANGE) {\n      return;\n    }\n    this.handleMetadataChange(notification);\n  }\n\n  private handleMetadataChange(notification: MetadataChangeNotification) {\n    const updates: SessionStoreUpdate[] = notification.values.map(update => ({\n      key: update.key,\n      value: update.data,\n      updatedAt: convertDateNumToDate(update.updated_at),\n      updatedBy: update.updated_by ? this.store.getPeerById(update.updated_by) : undefined,\n    }));\n    this.listener?.onSessionStoreUpdate(updates);\n  }\n}\n","import { VideoTrackLayerUpdate } from '../../connection/channel-messages';\nimport { EventBus } from '../../events/EventBus';\nimport { HMSPeer, HMSTrackUpdate, HMSUpdateListener } from '../../interfaces';\nimport { HMSRemoteAudioTrack, HMSRemoteTrack, HMSRemoteVideoTrack, HMSTrackType } from '../../media/tracks';\nimport { HMSRemotePeer } from '../../sdk/models/peer';\nimport { IStore } from '../../sdk/store';\nimport HMSLogger from '../../utils/logger';\nimport { OnTrackLayerUpdateNotification, TrackState, TrackStateNotification } from '../HMSNotifications';\n\n/**\n * Handles:\n * - Incoming track meta-data from BIZ(signal) to match a track to a peer.\n * - Incoming MediaStreamTracks(wrapped in HMSTracks) from RTCMediaChannel.\n * - Mute/unmute track meta-data updates from BIZ.\n *\n * Since track meta-data and RTC tracks come in asynchronously,\n * we store the track meta-data(TrackState) in SDK Store and tracks temporarily here in tracksToProcess.\n *\n * Once we have both TrackState and track,\n * we add it to peer, send listener.onTrackUpdate and remove it from tracksToProcess.\n *\n * Gotchas:\n * - TRACK_UPDATE comes before TRACK_ADD -> update state, process pending tracks when TRACK_ADD arrives.\n */\nexport class TrackManager {\n  private readonly TAG = '[TrackManager]';\n  private tracksToProcess: Map<string, HMSRemoteTrack> = new Map();\n\n  constructor(private store: IStore, private eventBus: EventBus, public listener?: HMSUpdateListener) {}\n  /**\n   * Add event from biz on track-add\n   * @param params TrackStateNotification\n   */\n  handleTrackMetadataAdd(params: TrackStateNotification) {\n    HMSLogger.d(this.TAG, `TRACK_METADATA_ADD`, JSON.stringify(params, null, 2));\n\n    for (const trackId in params.tracks) {\n      this.store.setTrackState({\n        peerId: params.peer.peer_id,\n        trackInfo: params.tracks[trackId],\n      });\n    }\n\n    this.processPendingTracks();\n  }\n\n  /**\n   * Sets the tracks to peer and returns the peer\n   */\n  handleTrackAdd = (track: HMSRemoteTrack) => {\n    HMSLogger.d(this.TAG, `ONTRACKADD`, `${track}`);\n    this.store.addTrack(track);\n    this.tracksToProcess.set(track.trackId, track);\n    this.processPendingTracks();\n  };\n\n  /**\n   * Sets the track of corresponding peer to null and returns the peer\n   */\n  handleTrackRemove = (track: HMSRemoteTrack) => {\n    HMSLogger.d(this.TAG, `ONTRACKREMOVE`, `${track}`);\n\n    const trackStateEntry = this.store.getTrackState(track.trackId);\n\n    if (!trackStateEntry) {\n      return;\n    }\n\n    const storeHasTrack = this.store.hasTrack(track);\n    if (!storeHasTrack) {\n      HMSLogger.d(this.TAG, 'Track not found in store');\n      return;\n    }\n\n    // emit this event here as peer will already be removed(if left the room) by the time this event is received\n    track.type === HMSTrackType.AUDIO && this.eventBus.audioTrackRemoved.publish(track as HMSRemoteAudioTrack);\n    this.store.removeTrack(track);\n    const hmsPeer = this.store.getPeerById(trackStateEntry.peerId);\n    if (!hmsPeer) {\n      return;\n    }\n    this.removePeerTracks(hmsPeer, track);\n    this.listener?.onTrackUpdate(HMSTrackUpdate.TRACK_REMOVED, track, hmsPeer);\n  };\n\n  handleTrackLayerUpdate = (params: OnTrackLayerUpdateNotification) => {\n    for (const trackId in params.tracks) {\n      const trackEntry = params.tracks[trackId];\n      const track = this.store.getTrackById(trackId);\n      if (!track) {\n        continue;\n      }\n\n      const peer = this.store.getPeerByTrackId(trackId)!;\n      if (!peer) {\n        continue;\n      }\n\n      if (track instanceof HMSRemoteVideoTrack) {\n        this.setLayer(track, trackEntry);\n      }\n    }\n  };\n\n  handleTrackUpdate = (params: TrackStateNotification) => {\n    const hmsPeer = this.store.getPeerById(params.peer.peer_id);\n    if (!hmsPeer) {\n      HMSLogger.d(this.TAG, 'Track Update ignored - Peer not added to store');\n      return;\n    }\n\n    for (const trackId in params.tracks) {\n      const currentTrackStateInfo = Object.assign({}, this.store.getTrackState(trackId)?.trackInfo);\n\n      const trackEntry = params.tracks[trackId];\n      const track = this.store.getTrackById(trackId);\n\n      this.store.setTrackState({\n        peerId: params.peer.peer_id,\n        trackInfo: { ...currentTrackStateInfo, ...trackEntry },\n      });\n\n      // TRACK_UPDATE came before TRACK_ADD -> update state, process pending tracks when TRACK_ADD arrives.\n      if (!track || this.tracksToProcess.has(trackId)) {\n        this.processPendingTracks();\n      } else {\n        track.setEnabled(!trackEntry.mute);\n        const eventType = this.processTrackUpdate(track as HMSRemoteTrack, currentTrackStateInfo, trackEntry);\n        if (eventType) {\n          this.listener?.onTrackUpdate(eventType, track, hmsPeer);\n        }\n      }\n    }\n  };\n\n  processPendingTracks() {\n    const tracksCopy = new Map(this.tracksToProcess);\n    tracksCopy.forEach(track => {\n      const state = this.store.getTrackState(track.trackId);\n      if (!state) {\n        HMSLogger.d(this.TAG, 'TrackState not added to store', `peerId - ${track.peerId}`, `trackId -${track.trackId}`);\n        return;\n      }\n\n      const hmsPeer = this.store.getPeerById(state.peerId);\n      if (!hmsPeer) {\n        HMSLogger.d(this.TAG, 'Peer not added to store, peerId', state.peerId);\n        return;\n      }\n\n      track.source = state.trackInfo.source;\n      track.peerId = hmsPeer.peerId;\n      // set log identifier to initial name of the peer\n      track.logIdentifier = hmsPeer.name;\n      track.setEnabled(!state.trackInfo.mute);\n      this.addAudioTrack(hmsPeer, track);\n      this.addVideoTrack(hmsPeer, track);\n      /**\n       * Don't call onTrackUpdate for audio elements immediately because the operations(eg: setVolume) performed\n       * on onTrackUpdate can be overriden in AudioSinkManager when audio element is created\n       **/\n      track.type === HMSTrackType.AUDIO\n        ? this.eventBus.audioTrackAdded.publish({ track: track as HMSRemoteAudioTrack, peer: hmsPeer as HMSRemotePeer })\n        : this.listener?.onTrackUpdate(HMSTrackUpdate.TRACK_ADDED, track, hmsPeer);\n      this.tracksToProcess.delete(track.trackId);\n    });\n  }\n\n  private setLayer(track: HMSRemoteVideoTrack, layerUpdate: VideoTrackLayerUpdate) {\n    const peer = this.store.getPeerByTrackId(track.trackId);\n    if (!peer) {\n      return;\n    }\n    const isDegraded = track.setLayerFromServer(layerUpdate);\n    if (isDegraded) {\n      this.listener?.onTrackUpdate(HMSTrackUpdate.TRACK_DEGRADED, track, peer);\n    } else {\n      this.listener?.onTrackUpdate(HMSTrackUpdate.TRACK_RESTORED, track, peer);\n    }\n  }\n\n  private removePeerTracks(hmsPeer: HMSPeer, track: HMSRemoteTrack) {\n    const auxiliaryTrackIndex = hmsPeer.auxiliaryTracks.indexOf(track);\n    if (auxiliaryTrackIndex > -1) {\n      hmsPeer.auxiliaryTracks.splice(auxiliaryTrackIndex, 1);\n      HMSLogger.d(this.TAG, 'auxiliary track removed', `${track}`);\n    } else {\n      if (track.type === HMSTrackType.AUDIO && hmsPeer.audioTrack === track) {\n        hmsPeer.audioTrack = undefined;\n        HMSLogger.d(this.TAG, 'audio track removed', `${track}`);\n      } else if (track.type === HMSTrackType.VIDEO && hmsPeer.videoTrack === track) {\n        hmsPeer.videoTrack = undefined;\n        HMSLogger.d(this.TAG, 'video track removed', `${track}`);\n      }\n    }\n  }\n\n  private addAudioTrack(hmsPeer: HMSPeer, track: HMSRemoteTrack) {\n    if (track.type !== HMSTrackType.AUDIO) {\n      return;\n    }\n    if (track.source === 'regular' && (!hmsPeer.audioTrack || hmsPeer.audioTrack?.trackId === track.trackId)) {\n      hmsPeer.audioTrack = track as HMSRemoteAudioTrack;\n    } else {\n      hmsPeer.auxiliaryTracks.push(track);\n    }\n    HMSLogger.d(this.TAG, 'audio track added', `${track}`);\n  }\n\n  private addVideoTrack(hmsPeer: HMSPeer, track: HMSRemoteTrack) {\n    if (track.type !== HMSTrackType.VIDEO) {\n      return;\n    }\n    const remoteTrack = track as HMSRemoteVideoTrack;\n    const simulcastDefinitions = this.store.getSimulcastDefinitionsForPeer(hmsPeer, remoteTrack.source!);\n    remoteTrack.setSimulcastDefinitons(simulcastDefinitions);\n    if (track.source === 'regular' && (!hmsPeer.videoTrack || hmsPeer.videoTrack?.trackId === track.trackId)) {\n      hmsPeer.videoTrack = remoteTrack;\n    } else {\n      hmsPeer.auxiliaryTracks.push(remoteTrack);\n    }\n    HMSLogger.d(this.TAG, 'video track added', `${track}`);\n  }\n\n  private processTrackUpdate(track: HMSRemoteTrack, currentTrackState: TrackState, trackState: TrackState) {\n    let eventType;\n    if (currentTrackState.mute !== trackState.mute) {\n      eventType = trackState.mute ? HMSTrackUpdate.TRACK_MUTED : HMSTrackUpdate.TRACK_UNMUTED;\n      track.type === HMSTrackType.AUDIO &&\n        this.eventBus.audioTrackUpdate.publish({ track: track as HMSRemoteAudioTrack, enabled: !trackState.mute });\n    } else if (currentTrackState.description !== trackState.description) {\n      eventType = HMSTrackUpdate.TRACK_DESCRIPTION_CHANGED;\n    }\n    return eventType;\n  }\n}\n","import { ActiveSpeakerManager } from './managers/ActiveSpeakerManager';\nimport { BroadcastManager } from './managers/BroadcastManager';\nimport { ConnectionQualityManager } from './managers/ConnectionQualityManager';\nimport { PeerListManager } from './managers/PeerListManager';\nimport { PeerManager } from './managers/PeerManager';\nimport { PolicyChangeManager } from './managers/PolicyChangeManager';\nimport { RequestManager } from './managers/RequestManager';\nimport { RoomUpdateManager } from './managers/RoomUpdateManager';\nimport { SessionMetadataManager } from './managers/SessionMetadataManager';\nimport { TrackManager } from './managers/TrackManager';\nimport { HMSNotificationMethod } from './HMSNotificationMethod';\nimport {\n  ConnectionQualityList,\n  OnTrackLayerUpdateNotification,\n  PolicyParams,\n  SpeakerList,\n  TrackStateNotification,\n} from './HMSNotifications';\nimport { EventBus } from '../events/EventBus';\nimport { HMSAudioListener, HMSConnectionQualityListener, HMSUpdateListener } from '../interfaces';\nimport { HMSRemoteTrack } from '../media/tracks';\nimport { IStore } from '../sdk/store';\nimport HMSLogger from '../utils/logger';\n\nexport class NotificationManager {\n  private readonly TAG = '[HMSNotificationManager]';\n  private trackManager: TrackManager;\n  private peerManager: PeerManager;\n  private peerListManager: PeerListManager;\n  private activeSpeakerManager: ActiveSpeakerManager;\n  private connectionQualityManager: ConnectionQualityManager;\n  private broadcastManager: BroadcastManager;\n  private policyChangeManager: PolicyChangeManager;\n  private requestManager: RequestManager;\n  private roomUpdateManager: RoomUpdateManager;\n  private sessionMetadataManager: SessionMetadataManager;\n  /**\n   * room state can be sent before join in preview stage as well but that is outdated, based on\n   * eventual consistency and doesn't have all data. If we get at least one consistent room update\n   * from that point onwards we can rely on live server updates and ignore periodic room state messages\n   */\n  private hasConsistentRoomStateArrived = false;\n\n  constructor(\n    private store: IStore,\n    eventBus: EventBus,\n    private listener?: HMSUpdateListener,\n    private audioListener?: HMSAudioListener,\n    private connectionQualityListener?: HMSConnectionQualityListener,\n  ) {\n    this.trackManager = new TrackManager(this.store, eventBus, this.listener);\n    this.peerManager = new PeerManager(this.store, this.trackManager, this.listener);\n    this.peerListManager = new PeerListManager(this.store, this.peerManager, this.trackManager, this.listener);\n    this.broadcastManager = new BroadcastManager(this.store, this.listener);\n    this.policyChangeManager = new PolicyChangeManager(this.store, eventBus);\n    this.requestManager = new RequestManager(this.store, this.listener);\n    this.activeSpeakerManager = new ActiveSpeakerManager(this.store, this.listener, this.audioListener);\n    this.connectionQualityManager = new ConnectionQualityManager(this.connectionQualityListener);\n    this.roomUpdateManager = new RoomUpdateManager(this.store, this.listener);\n    this.sessionMetadataManager = new SessionMetadataManager(this.store, this.listener);\n  }\n\n  setListener(listener?: HMSUpdateListener) {\n    this.listener = listener;\n    this.trackManager.listener = listener;\n    this.peerManager.listener = listener;\n    this.peerListManager.listener = listener;\n    this.broadcastManager.listener = listener;\n    this.requestManager.listener = listener;\n    this.activeSpeakerManager.listener = listener;\n    this.roomUpdateManager.listener = listener;\n    this.sessionMetadataManager.listener = listener;\n  }\n\n  setAudioListener(audioListener?: HMSAudioListener) {\n    this.audioListener = audioListener;\n    this.activeSpeakerManager.audioListener = audioListener;\n  }\n\n  setConnectionQualityListener(qualityListener?: HMSConnectionQualityListener) {\n    this.connectionQualityListener = qualityListener;\n    this.connectionQualityManager.listener = qualityListener;\n  }\n\n  handleNotification(message: { method: string; params: any }, isReconnecting = false) {\n    const method = message.method as HMSNotificationMethod;\n    const notification = message.params;\n\n    if (\n      ![\n        HMSNotificationMethod.ACTIVE_SPEAKERS,\n        HMSNotificationMethod.SFU_STATS,\n        HMSNotificationMethod.CONNECTION_QUALITY,\n        undefined, // this is is to ignore notifications without any method\n      ].includes(method)\n    ) {\n      HMSLogger.d(this.TAG, `Received notification - ${method}`, { notification });\n    }\n    if (method === HMSNotificationMethod.SFU_STATS) {\n      if (window.HMS?.ON_SFU_STATS && typeof window.HMS?.ON_SFU_STATS === 'function') {\n        window.HMS.ON_SFU_STATS(message.params);\n      }\n    }\n\n    if (this.ignoreNotification(method)) {\n      return;\n    }\n\n    this.roomUpdateManager.handleNotification(method, notification);\n    this.peerManager.handleNotification(method, notification);\n    this.requestManager.handleNotification(method, notification);\n    this.peerListManager.handleNotification(method, notification, isReconnecting);\n    this.broadcastManager.handleNotification(method, notification);\n    this.sessionMetadataManager.handleNotification(method, notification);\n    this.handleIsolatedMethods(method, notification);\n  }\n\n  // eslint-disable-next-line complexity\n  handleIsolatedMethods(method: string, notification: any) {\n    switch (method) {\n      case HMSNotificationMethod.TRACK_METADATA_ADD: {\n        this.trackManager.handleTrackMetadataAdd(notification as TrackStateNotification);\n        break;\n      }\n      case HMSNotificationMethod.TRACK_UPDATE: {\n        this.trackManager.handleTrackUpdate(notification as TrackStateNotification);\n        break;\n      }\n      case HMSNotificationMethod.ON_SFU_TRACK_LAYER_UPDATE: {\n        this.trackManager.handleTrackLayerUpdate(notification as OnTrackLayerUpdateNotification);\n        break;\n      }\n      case HMSNotificationMethod.ACTIVE_SPEAKERS:\n        this.activeSpeakerManager.handleActiveSpeakers(notification as SpeakerList);\n        break;\n\n      case HMSNotificationMethod.CONNECTION_QUALITY:\n        this.connectionQualityManager.handleQualityUpdate(notification as ConnectionQualityList);\n        break;\n\n      case HMSNotificationMethod.POLICY_CHANGE:\n        this.policyChangeManager.handlePolicyChange(notification as PolicyParams);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  ignoreNotification = (method: string): boolean => {\n    if (method === HMSNotificationMethod.PEER_LIST) {\n      this.hasConsistentRoomStateArrived = true;\n    } else if (method === HMSNotificationMethod.ROOM_STATE) {\n      // ignore periodic inconsistent room state if consistent one has arrived at least once\n      return this.hasConsistentRoomStateArrived;\n    }\n    return false;\n  };\n\n  handleTrackAdd = (track: HMSRemoteTrack) => {\n    this.trackManager.handleTrackAdd(track);\n  };\n\n  handleTrackRemove = (track: HMSRemoteTrack) => {\n    this.trackManager.handleTrackRemove(track);\n  };\n\n  updateLocalPeer = ({ name, metadata }: { name?: string; metadata?: string }) => {\n    const peer = this.store.getLocalPeer();\n    this.peerManager.handlePeerInfoUpdate({ peer, name, data: metadata });\n  };\n}\n","import { VideoTrackLayerUpdate } from '../connection/channel-messages';\nimport { HMSRole } from '../interfaces/role';\nimport { HMSLocalTrack } from '../media/tracks';\nimport { HMSTrack, HMSTrackSource } from '../media/tracks/HMSTrack';\nimport { Track } from '../signal/interfaces';\n\n/**\n * Interfaces for message received from BIZ Signal through Websocket.\n * These messages are handled by NotificationManager\n * which will call the corresponding HMSUpdateListener callbacks.\n */\n\nexport interface ServerError {\n  code: number;\n  message?: string;\n}\n\nexport interface TrackStateNotification {\n  tracks: {\n    [track_id: string]: TrackState;\n  };\n  peer: PeerNotificationInfo;\n}\n\nexport interface OnTrackLayerUpdateNotification {\n  tracks: {\n    [track_id: string]: VideoTrackLayerUpdate;\n  };\n}\n\nexport interface PeerNotificationInfo {\n  peer_id: string;\n  info: Info;\n}\n\nexport interface Info {\n  name: string;\n  data: string;\n  user_id: string;\n}\n\nexport interface PolicyParams {\n  name: string;\n  known_roles: {\n    [role: string]: HMSRole;\n  };\n  template_id: string;\n  app_data?: Record<string, string>;\n}\n\n/**\n * This is in a format biz sends/received the track metadata\n */\nexport class TrackState implements Track {\n  mute: boolean;\n  type: 'audio' | 'video';\n  source: HMSTrackSource;\n  description: string;\n  track_id: string;\n  stream_id: string;\n\n  constructor(track: HMSLocalTrack | Track) {\n    this.type = track.type;\n    this.source = track.source || 'regular';\n    this.description = '';\n    if (track instanceof HMSTrack) {\n      this.mute = !track.enabled;\n      this.track_id = track.publishedTrackId!;\n      this.stream_id = track.stream.id;\n    } else {\n      this.mute = track.mute;\n      this.track_id = track.track_id;\n      this.stream_id = track.stream_id;\n    }\n  }\n}\n\nexport interface PeerNotification {\n  peer_id: string;\n  info: Info;\n  role: string;\n  joined_at?: number;\n  tracks: {\n    [track_id: string]: TrackState;\n  };\n  is_from_room_state?: boolean;\n}\n\nexport interface RoomState {\n  name: string;\n  session_id?: string;\n  started_at?: number;\n  recording?: {\n    sfu: {\n      started_at?: number;\n      enabled: boolean;\n    };\n    browser: {\n      started_at?: number;\n      enabled: boolean;\n    };\n    hls: {\n      started_at?: number;\n      enabled: boolean;\n      config?: {\n        hls_vod: boolean;\n        single_file_per_layer: boolean;\n      };\n    };\n  };\n  streaming?: {\n    enabled: boolean;\n    rtmp: { enabled: boolean; started_at?: number };\n    hls: HLSNotification;\n  };\n}\n\nexport interface PeerListNotification {\n  peers: {\n    [peer_id: string]: PeerNotification;\n  };\n  room: RoomState;\n}\n\nexport interface PeriodicRoomState {\n  peer_count: number;\n  room: RoomState;\n  peers?: {\n    [peer_id: string]: PeerNotification;\n  };\n}\n\ninterface Speaker {\n  peer_id: string;\n  track_id: string;\n  level: number;\n}\n\nexport interface SpeakerList {\n  'speaker-list': Speaker[];\n}\n\ninterface ConnectionQuality {\n  peer_id: string;\n  downlink_score: number;\n}\n\nexport interface ConnectionQualityList {\n  peers: ConnectionQuality[];\n}\n\n/**\n * Represents the role change request received from the server\n */\nexport interface RoleChangeRequestParams {\n  requested_by?: string;\n  role: string;\n  token: string;\n}\n\nexport interface TrackUpdateRequestNotification {\n  requested_by?: string;\n  track_id: string;\n  stream_id: string;\n  mute: boolean;\n}\n\nexport interface ChangeTrackMuteStateNotification {\n  requested_by?: string;\n  roles?: string[];\n  type?: 'audio' | 'video';\n  source?: HMSTrackSource;\n  value: boolean;\n}\n\nexport interface PeerLeaveRequestNotification {\n  requested_by?: string;\n  reason: string;\n  room_end: boolean;\n}\n\nexport interface MessageNotification {\n  peer?: {\n    peer_id: string;\n    info: {\n      name: string;\n      data: any;\n      user_id: string;\n    };\n  };\n  roles?: string[];\n  private: boolean;\n  timestamp: number;\n  info: MessageNotificationInfo;\n}\n\nexport interface SendMessage {\n  info: MessageNotificationInfo;\n  roles?: string[];\n  peer_id?: string;\n}\n\nexport interface MessageNotificationInfo {\n  message: any;\n  type: string;\n}\n\nexport interface RecordingNotification {\n  type: 'sfu' | 'Browser';\n  started_at?: number;\n  peer?: PeerNotificationInfo;\n  error?: ServerError;\n}\n\nexport interface RTMPNotification {\n  peer?: PeerNotificationInfo;\n  started_at?: number;\n  error?: ServerError;\n}\n\nexport interface HLSNotification {\n  enabled: boolean;\n  variants?: Array<HLSVariantInfo>;\n  error?: ServerError;\n  hls_recording?: {\n    hls_vod: boolean;\n    single_file_per_layer: boolean;\n  };\n}\n\nexport interface HLSVariantInfo {\n  url: string;\n  meeting_url?: string;\n  metadata?: string;\n  started_at?: number;\n}\n\nexport interface MetadataChangeNotification {\n  values: {\n    change_version?: number;\n    updated_by?: string;\n    data: any;\n    key: string;\n    updated_at?: number;\n  }[];\n}\n","import HMSLogger from '../utils/logger';\n\nexport class AudioContextManager {\n  private audioContext: AudioContext;\n  private destinationNode?: MediaStreamAudioDestinationNode;\n  private source: MediaElementAudioSourceNode;\n  private readonly TAG = '[AudioContextManager]';\n\n  constructor(element: HTMLMediaElement) {\n    this.audioContext = new AudioContext();\n    this.source = this.audioContext.createMediaElementSource(element);\n    this.source.connect(this.audioContext.destination);\n  }\n\n  /**\n   * Resume AudioContext if it is suspended\n   * Note: when the browser tab is muted by default, AudioContext will be in suspended state\n   * It has to be resumed for the video/audio to be played.\n   */\n  async resumeContext() {\n    if (this.audioContext.state === 'suspended') {\n      await this.audioContext.resume();\n      HMSLogger.d(this.TAG, 'AudioContext is resumed');\n    }\n  }\n\n  getAudioTrack() {\n    // Always create a destinationNode to get new audio track id\n    if (this.destinationNode) {\n      this.source.disconnect(this.destinationNode);\n    }\n    this.destinationNode = this.audioContext.createMediaStreamDestination();\n    this.source.connect(this.destinationNode);\n    return this.destinationNode.stream.getAudioTracks()[0];\n  }\n\n  cleanup() {\n    if (this.audioContext.state !== 'closed') {\n      this.audioContext.close().catch(e => {\n        HMSLogger.d(this.TAG, 'AudioContext close error', e.message);\n      });\n    }\n  }\n}\n","import { EventEmitter2 as EventEmitter } from 'eventemitter2';\n\n/**\n * Typed Event Emitter Reference:\n * https://rjzaworski.com/2019/10/event-emitters-in-typescript#a-typescript-event-emitter-interface\n */\n\nexport type EventMap = Record<string, any>;\n\nexport type EventKey<T extends EventMap> = string & keyof T;\nexport type EventReceiver<T> = (params: T) => void;\n\n// interface Emitter<T extends EventMap> {\n//   on<K extends EventKey<T>>(eventName: K, fn: EventReceiver<T[K]>): void;\n//   off<K extends EventKey<T>>(eventName: K, fn: EventReceiver<T[K]>): void;\n//   emit<K extends EventKey<T>>(eventName: K, params: T[K]): void;\n// }\n\nexport abstract class TypedEventEmitter<T extends EventMap> extends EventEmitter {\n  on<K extends EventKey<T>>(eventName: K, fn: EventReceiver<T[K]>) {\n    return super.on(eventName, fn);\n  }\n\n  off<K extends EventKey<T>>(eventName: K, fn: EventReceiver<T[K]>) {\n    return super.off(eventName, fn);\n  }\n\n  emit<K extends EventKey<T>>(eventName: K, params: T[K]) {\n    return super.emit(eventName, params);\n  }\n\n  listeners<K extends EventKey<T>>(eventName: K): EventReceiver<T[K]>[] {\n    return super.listeners(eventName) as EventReceiver<T[K]>[];\n  }\n}\n","import { AudioContextManager } from './AudioContextManager';\nimport HMSLogger from '../utils/logger';\nimport { TypedEventEmitter } from '../utils/typed-event-emitter';\n\n/**\n * This class handles audio playlist management\n * - An audio element and audio context which processes audio from audio element is created\n *   in the constructor\n * It handles playback in the following steps\n *  - set's the url on the audio element created in the constructor\n *  - oncanplaythrough event of the audio element\n *    - resume the audio context if it is suspended\n *    - play the audio element\n *    - Get audio track from the audio context manager\n *    - The track is passed to playlist manager to publish\n */\nexport class PlaylistAudioManager extends TypedEventEmitter<{ ended: null; progress: Event }> {\n  private audioElement: HTMLAudioElement | null = null;\n  private track?: MediaStreamTrack;\n  private audioContextManager!: AudioContextManager;\n  private readonly TAG = '[PlaylistAudioManager]';\n  // This is to handle audio playing when seekTo is called when audio is paused\n  private seeked = false;\n\n  async play(url: string) {\n    this.audioElement = this.getAudioElement();\n    return new Promise<MediaStreamTrack[]>((resolve, reject) => {\n      this.audioElement = this.getAudioElement();\n      this.audioElement.src = url;\n      this.seeked = false;\n      this.audioElement.onerror = () => {\n        const error = `Error loading ${url}`;\n        HMSLogger.e(this.TAG, error);\n        this.stop();\n        reject(error);\n      };\n      // oncanplaythrough is called when enough media is loaded for play to be possible in two cases -\n      //    * when play is called for the first time\n      //    * when user seeks jumps to any mid track timestamp\n      this.audioElement.oncanplaythrough = async () => {\n        try {\n          if (!this.audioElement) {\n            return;\n          }\n          this.audioContextManager.resumeContext();\n          // Create audio track only once and reuse, it will be updated with current content\n          if (!this.track) {\n            await this.audioElement.play();\n            const audioTrack = this.audioContextManager.getAudioTrack();\n            this.track = audioTrack;\n            resolve([audioTrack]);\n          } else {\n            if (!this.seeked) {\n              // if this was called in response to a play call\n              await this.audioElement.play();\n              resolve([this.track]);\n            } else {\n              // if seek happened, there is no play call/promise to be resolved, just reset seeked\n              this.seeked = false;\n            }\n          }\n        } catch (err) {\n          HMSLogger.e(this.TAG, 'Error playing audio', url, (err as ErrorEvent).message);\n          reject(err);\n        }\n      };\n      this.audioElement.onseeked = () => {\n        this.seeked = true;\n      };\n    });\n  }\n\n  getTracks() {\n    return this.track ? [this.track.id] : [];\n  }\n\n  getElement() {\n    return this.audioElement;\n  }\n\n  stop() {\n    this.audioElement?.pause();\n    this.audioElement?.removeAttribute('src');\n    this.audioElement = null;\n    this.audioContextManager?.cleanup();\n    this.track = undefined;\n  }\n\n  private getAudioElement() {\n    if (this.audioElement) {\n      return this.audioElement;\n    }\n    const audioElement = document.createElement('audio');\n    audioElement.crossOrigin = 'anonymous';\n    audioElement.addEventListener('timeupdate', event => this.emit('progress', event));\n    audioElement.addEventListener('ended', () => {\n      this.emit('ended', null);\n    });\n    this.audioContextManager = new AudioContextManager(audioElement);\n    return audioElement;\n  }\n}\n","import { AudioContextManager } from './AudioContextManager';\nimport HMSLogger from '../utils/logger';\nimport { TypedEventEmitter } from '../utils/typed-event-emitter';\n\n/**\n * This class handles video playlist management\n * - An video element, canvas and audio context which processes audio from video element is created\n *   in the constructor\n * It handles playback in the following steps\n *  - set's the url on the video element created in the constructor\n *  - oncanplaythrough event of the video element\n *    - resume the audio context if it is suspended\n *    - set width/height on canvas\n *    - captureStream on canvas element if not already captured\n *    - play the video element\n *    - on video element is played, it is drawn to canvas\n *    - Get audio track from the audio context manager\n *    - add audioTrack to canvas stream\n *    - The audio and video tracks are passed to playlist manager to publish\n */\nexport class PlaylistVideoManager extends TypedEventEmitter<{ ended: null; progress: Event }> {\n  private readonly TAG = '[PlaylistVideoManager]';\n  private videoElement: HTMLVideoElement | null = null;\n  private canvasContext: CanvasRenderingContext2D | null = null;\n  private canvas!: HTMLCanvasElement;\n  private timer: any;\n  private tracks: MediaStreamTrack[] = [];\n  private audioContextManager!: AudioContextManager;\n  private DEFAUL_FPS = 24;\n  // This is to handle video playing when seekTo is called when video is paused\n  private seeked = false;\n\n  play(url: string) {\n    this.videoElement = this.getVideoElement();\n    this.createCanvas();\n    return new Promise<MediaStreamTrack[]>((resolve, reject) => {\n      this.videoElement = this.getVideoElement();\n      this.videoElement.src = url;\n      this.seeked = false;\n      this.videoElement.onerror = () => {\n        const error = `Error loading ${url}`;\n        HMSLogger.e(this.TAG, error);\n        this.stop();\n        reject(error);\n      };\n      // oncanplaythrough is called when enough media is loaded for play to be possible in two cases -\n      //    * when play is called for the first time\n      //    * when user jumps to any mid track timestamp using seekTo\n      this.videoElement.oncanplaythrough = async () => {\n        try {\n          if (!this.videoElement) {\n            return;\n          }\n          this.canvas.width = this.videoElement.videoWidth;\n          this.canvas.height = this.videoElement.videoHeight;\n          // Capture stream only once and reuse the same tracks. it will be autoupdated with the selected video\n          if (this.tracks.length === 0) {\n            this.clearCanvasAndTracks();\n            //@ts-ignore\n            const stream = this.canvas.captureStream();\n            if (!stream) {\n              HMSLogger.e(this.TAG, 'Browser does not support captureStream');\n              return;\n            }\n            this.videoElement.onplay = this.drawImage;\n            await this.audioContextManager.resumeContext();\n            await this.videoElement.play();\n            const audioTrack = this.audioContextManager.getAudioTrack();\n            stream.addTrack(audioTrack);\n            stream.getTracks().forEach((track: MediaStreamTrack) => {\n              this.tracks.push(track);\n            });\n            resolve(this.tracks);\n          } else {\n            // No need to capture canvas stream/get audio track. They wull be auto updated\n            if (!this.seeked) {\n              // if this was called in response to a play call\n              await this.videoElement.play();\n              resolve(this.tracks);\n            } else {\n              // if seek happened, there is no play call/promise to be resolved, just reset seeked\n              this.seeked = false;\n              // This event will be called on seekTo when paused. Just draw the one frame on canvas.\n              this.canvasContext?.drawImage(this.videoElement, 0, 0, this.canvas?.width, this.canvas?.height);\n            }\n          }\n        } catch (err) {\n          HMSLogger.e(this.TAG, 'Error playing video', url, (err as ErrorEvent).message);\n          reject(err);\n        }\n      };\n      this.videoElement.onseeked = () => {\n        this.seeked = true;\n      };\n    });\n  }\n\n  getTracks() {\n    return this.tracks.map(track => track.id);\n  }\n\n  getElement() {\n    return this.videoElement;\n  }\n\n  stop() {\n    this.videoElement?.pause();\n    this.videoElement?.removeAttribute('src');\n    this.videoElement = null;\n    this.audioContextManager?.cleanup();\n    this.clearCanvasAndTracks();\n  }\n\n  private clearCanvasAndTracks() {\n    this.tracks = [];\n    // clear canvas before playing new video\n    this.canvasContext?.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    clearTimeout(this.timer);\n  }\n\n  private drawImage = () => {\n    if (this.videoElement && !this.videoElement.paused && !this.videoElement.ended) {\n      this.canvasContext?.drawImage(this.videoElement, 0, 0, this.canvas?.width, this.canvas?.height);\n      this.timer = setTimeout(() => {\n        this.drawImage();\n      }, 1000 / this.DEFAUL_FPS);\n    }\n  };\n\n  private getVideoElement() {\n    if (this.videoElement) {\n      return this.videoElement;\n    }\n    const videoElement = document.createElement('video');\n    videoElement.crossOrigin = 'anonymous';\n    videoElement.addEventListener('timeupdate', event => this.emit('progress', event));\n    videoElement.addEventListener('ended', () => {\n      this.emit('ended', null);\n    });\n    this.audioContextManager = new AudioContextManager(videoElement);\n    return videoElement;\n  }\n\n  private createCanvas() {\n    if (!this.canvas) {\n      this.canvas = document.createElement('canvas');\n      this.canvasContext = this.canvas.getContext('2d');\n    }\n  }\n}\n","import { PlaylistAudioManager } from './PlaylistAudioManager';\nimport { PlaylistVideoManager } from './PlaylistVideoManager';\nimport { ErrorFactory, HMSAction } from '../error/ErrorFactory';\nimport { EventBus } from '../events/EventBus';\nimport { HMSPlaylistItem, HMSPlaylistManager, HMSPlaylistProgressEvent, HMSPlaylistType } from '../interfaces';\nimport { HMSLocalTrack } from '../media/tracks';\nimport { HMSSdk } from '../sdk';\nimport { stringifyMediaStreamTrack } from '../utils/json';\nimport HMSLogger from '../utils/logger';\nimport { TypedEventEmitter } from '../utils/typed-event-emitter';\n\ntype PlaylistManagerState<T> = {\n  audio: {\n    list: HMSPlaylistItem<T>[];\n    currentIndex: number;\n    isAutoplayOn: boolean;\n  };\n  video: {\n    list: HMSPlaylistItem<T>[];\n    currentIndex: number;\n    isAutoplayOn: boolean;\n  };\n};\n\nconst INITIAL_STATE: PlaylistManagerState<any> = {\n  audio: {\n    list: [],\n    currentIndex: -1,\n    isAutoplayOn: true,\n  },\n  video: {\n    list: [],\n    currentIndex: -1,\n    isAutoplayOn: true,\n  },\n};\n\nexport class PlaylistManager\n  extends TypedEventEmitter<{\n    newTrackStart: HMSPlaylistItem<any>;\n    playlistEnded: HMSPlaylistType;\n    currentTrackEnded: HMSPlaylistItem<any>;\n  }>\n  implements HMSPlaylistManager\n{\n  private state = { audio: { ...INITIAL_STATE.audio }, video: { ...INITIAL_STATE.video } };\n  private audioManager: PlaylistAudioManager;\n  private videoManager: PlaylistVideoManager;\n  private readonly TAG = '[PlaylistManager]';\n\n  constructor(private sdk: HMSSdk, private eventBus: EventBus) {\n    super();\n    this.audioManager = new PlaylistAudioManager();\n    this.videoManager = new PlaylistVideoManager();\n    this.addListeners();\n  }\n\n  getList<T>(type: HMSPlaylistType = HMSPlaylistType.audio): HMSPlaylistItem<T>[] {\n    return this.state[type].list;\n  }\n\n  setList<T>(list: HMSPlaylistItem<T>[]): void {\n    if (!list || list.length === 0) {\n      HMSLogger.w(this.TAG, `Please pass in a list of HMSPlaylistItem's`);\n      return;\n    }\n    list.forEach((item: HMSPlaylistItem<T>) => {\n      if (!this.state[item.type].list.includes(item)) {\n        this.state[item.type].list.push(item);\n      }\n    });\n  }\n\n  async clearList(type: HMSPlaylistType): Promise<void> {\n    if (this.isPlaying(type)) {\n      await this.stop(type);\n    }\n    this.state[type].list = [];\n  }\n\n  async removeItem(id: string, type: HMSPlaylistType): Promise<boolean> {\n    const { list, currentIndex } = this.state[type];\n    const index = list.findIndex(playItem => id === playItem.id);\n    if (index > -1) {\n      // stop if the item is playing\n      if (currentIndex === index && this.isPlaying(type)) {\n        await this.stop(type);\n      }\n      list.splice(index, 1);\n      return true;\n    }\n    return false;\n  }\n\n  seek(value: number, type: HMSPlaylistType = HMSPlaylistType.audio): void {\n    const { currentIndex } = this.state[type];\n    if (currentIndex === -1) {\n      throw ErrorFactory.PlaylistErrors.NoEntryToPlay(HMSAction.PLAYLIST, 'No item is currently playing');\n    }\n    const element = this.getElement(type);\n    if (element) {\n      const updatedValue = Math.max(element.currentTime + value, 0);\n      element.currentTime = Math.min(updatedValue, element.duration);\n    }\n  }\n\n  seekTo(value: number, type: HMSPlaylistType = HMSPlaylistType.audio): void {\n    const { currentIndex } = this.state[type];\n    if (currentIndex === -1) {\n      throw ErrorFactory.PlaylistErrors.NoEntryToPlay(HMSAction.PLAYLIST, 'No item is currently playing');\n    }\n    if (value < 0) {\n      throw Error('value cannot be negative');\n    }\n    const element = this.getElement(type);\n    if (element) {\n      element.currentTime = Math.min(value, element.duration);\n    }\n  }\n\n  setVolume(value: number, type: HMSPlaylistType = HMSPlaylistType.audio): void {\n    if (value < 0 || value > 100) {\n      throw Error('Please pass a valid number between 0-100');\n    }\n    const element = this.getElement(type);\n    if (element) {\n      element.volume = value * 0.01;\n    }\n  }\n\n  getVolume(type: HMSPlaylistType = HMSPlaylistType.audio): number {\n    const element = this.getElement(type);\n    if (element) {\n      return element.volume * 100;\n    }\n    return 0;\n  }\n\n  getCurrentTime(type: HMSPlaylistType = HMSPlaylistType.audio) {\n    const element = this.getElement(type);\n    return element?.currentTime || 0;\n  }\n\n  getCurrentIndex(type: HMSPlaylistType = HMSPlaylistType.audio) {\n    return this.state[type].currentIndex;\n  }\n\n  getCurrentProgress(type: HMSPlaylistType = HMSPlaylistType.audio) {\n    const { list, currentIndex } = this.state[type];\n    const activeUrl = list[currentIndex]?.url;\n    const element = this.getElement(type);\n    if (!activeUrl || !element) {\n      return 0;\n    }\n    return Math.floor(100 * (element.currentTime / element.duration));\n  }\n\n  getCurrentSelection(type: HMSPlaylistType = HMSPlaylistType.audio) {\n    const { list, currentIndex } = this.state[type];\n    if (currentIndex === -1) {\n      return undefined;\n    }\n    return list[currentIndex];\n  }\n\n  isPlaying(type: HMSPlaylistType = HMSPlaylistType.audio) {\n    const element = this.getElement(type);\n    return !!element && !element.paused;\n  }\n\n  setIsAutoplayOn(type: HMSPlaylistType = HMSPlaylistType.audio, autoplay: boolean) {\n    this.state[type].isAutoplayOn = autoplay;\n  }\n\n  getPlaybackRate(type: HMSPlaylistType = HMSPlaylistType.audio) {\n    const element = this.getElement(type);\n    return element ? element.playbackRate : 1.0;\n  }\n\n  setPlaybackRate(type: HMSPlaylistType = HMSPlaylistType.audio, value: number) {\n    if (value < 0.25 || value > 2.0) {\n      throw Error('Please pass a value between 0.25 and 2.0');\n    }\n    const element = this.getElement(type);\n    if (element) {\n      element.playbackRate = value;\n    }\n  }\n\n  async setEnabled(\n    enabled: boolean,\n    { id, type = HMSPlaylistType.audio }: { id: string; type: HMSPlaylistType },\n  ): Promise<void> {\n    const list = this.state[type].list;\n    const currentIndex = list.findIndex(item => item.id === id);\n    if (!id || currentIndex === -1) {\n      HMSLogger.w(this.TAG, 'Pass a valid id');\n      return;\n    }\n    const url = this.state[type].list[currentIndex].url;\n    if (enabled) {\n      await this.play(url, type);\n    } else {\n      await this.pause(url, type);\n    }\n    this.state[type].currentIndex = currentIndex;\n    this.setDuration(type);\n  }\n\n  async playNext(type: HMSPlaylistType = HMSPlaylistType.audio): Promise<void> {\n    const { list, currentIndex } = this.state[type];\n    if (currentIndex >= list.length - 1) {\n      throw ErrorFactory.PlaylistErrors.NoEntryToPlay(HMSAction.PLAYLIST, 'Reached end of playlist');\n    }\n    await this.play(list[currentIndex + 1].url, type);\n    this.state[type].currentIndex = currentIndex + 1;\n    this.setDuration(type);\n  }\n\n  async playPrevious(type: HMSPlaylistType = HMSPlaylistType.audio): Promise<void> {\n    const { list, currentIndex } = this.state[type];\n    if (currentIndex <= 0) {\n      throw ErrorFactory.PlaylistErrors.NoEntryToPlay(HMSAction.PLAYLIST, 'Reached start of playlist');\n    }\n    await this.play(list[currentIndex - 1].url, type);\n    this.state[type].currentIndex = currentIndex - 1;\n    this.setDuration(type);\n  }\n\n  async stop(type: HMSPlaylistType = HMSPlaylistType.audio): Promise<void> {\n    const manager = type === HMSPlaylistType.audio ? this.audioManager : this.videoManager;\n    manager.getElement()?.pause(); //pause local video/audio and remove tracks in next step\n    await this.removeTracks(type);\n    manager.stop();\n    this.state[type].currentIndex = -1;\n  }\n\n  cleanup() {\n    this.state = { audio: { ...INITIAL_STATE.audio }, video: { ...INITIAL_STATE.video } };\n    this.eventBus.localAudioEnabled.unsubscribe(this.handlePausePlaylist);\n    this.eventBus.localVideoEnabled.unsubscribe(this.handlePausePlaylist);\n    this.audioManager.stop();\n    this.videoManager.stop();\n  }\n\n  onProgress(fn: (progress: HMSPlaylistProgressEvent) => void) {\n    this.videoManager.on('progress', () => {\n      try {\n        fn({\n          type: HMSPlaylistType.video,\n          progress: this.getCurrentProgress(HMSPlaylistType.video),\n        });\n      } catch (error) {\n        HMSLogger.e(this.TAG, 'Error in onProgress callback');\n      }\n    });\n    this.audioManager.on('progress', () => {\n      try {\n        fn({\n          type: HMSPlaylistType.audio,\n          progress: this.getCurrentProgress(HMSPlaylistType.audio),\n        });\n      } catch (error) {\n        HMSLogger.e(this.TAG, 'Error in onProgress callback');\n      }\n    });\n  }\n\n  onNewTrackStart<T>(fn: (item: HMSPlaylistItem<T>) => void) {\n    this.on('newTrackStart', fn);\n  }\n\n  onPlaylistEnded(fn: (type: HMSPlaylistType) => void) {\n    this.on('playlistEnded', fn);\n  }\n\n  onCurrentTrackEnded<T>(fn: (item: HMSPlaylistItem<T>) => void) {\n    this.on('currentTrackEnded', fn);\n  }\n\n  private getElement(type: HMSPlaylistType = HMSPlaylistType.audio) {\n    return type === HMSPlaylistType.audio ? this.audioManager.getElement() : this.videoManager.getElement();\n  }\n\n  private async removeTracks(type: HMSPlaylistType = HMSPlaylistType.audio) {\n    const manager = type === HMSPlaylistType.audio ? this.audioManager : this.videoManager;\n    const tracks = manager.getTracks();\n    for (const trackId of tracks) {\n      await this.removeTrack(trackId);\n    }\n  }\n\n  private async play(url: string, type: HMSPlaylistType = HMSPlaylistType.audio): Promise<void> {\n    const manager = type === HMSPlaylistType.audio ? this.audioManager : this.videoManager;\n    const element = manager.getElement();\n    if (this.isItemCurrentlyPlaying(url, type)) {\n      HMSLogger.w(this.TAG, `The ${type} is currently playing`);\n      return;\n    }\n    if (element?.src.includes(url)) {\n      await element.play();\n    } else {\n      element?.pause();\n      const tracks: MediaStreamTrack[] = await manager.play(url);\n      for (const track of tracks) {\n        await this.addTrack(track, type === HMSPlaylistType.audio ? 'audioplaylist' : 'videoplaylist');\n      }\n    }\n  }\n\n  private isItemCurrentlyPlaying(url: string, type: HMSPlaylistType): boolean {\n    const element = this.getElement(type);\n    return !!(element && !element.paused && element.src.includes(url));\n  }\n\n  private setDuration(type: HMSPlaylistType = HMSPlaylistType.audio) {\n    const element = this.getElement(type);\n    const { list, currentIndex } = this.state[type];\n    if (list[currentIndex]) {\n      list[currentIndex].duration = element?.duration || 0;\n    }\n    this.emit('newTrackStart', list[currentIndex]);\n  }\n\n  private async pause(url: string, type: HMSPlaylistType = HMSPlaylistType.audio): Promise<void> {\n    const el = this.getElement(type);\n    if (el && !el.paused && el.src.includes(url)) {\n      el.pause();\n      HMSLogger.d(this.TAG, 'paused url', url);\n    } else {\n      HMSLogger.w(this.TAG, 'The passed in url is not currently playing');\n    }\n  }\n\n  private handlePausePlaylist = async ({ enabled, track }: { enabled: boolean; track: HMSLocalTrack }) => {\n    if (enabled) {\n      return;\n    }\n    let type: HMSPlaylistType | undefined = undefined;\n    if (track.source === 'audioplaylist') {\n      type = HMSPlaylistType.audio;\n    }\n    if (track.source === 'videoplaylist') {\n      type = HMSPlaylistType.video;\n    }\n    if (!type) {\n      return;\n    }\n    this.getElement(type)?.pause();\n  };\n\n  private addListeners() {\n    this.audioManager.on('ended', () => this.handleEnded(HMSPlaylistType.audio));\n    this.videoManager.on('ended', () => this.handleEnded(HMSPlaylistType.video));\n    this.eventBus.localAudioEnabled.subscribe(this.handlePausePlaylist);\n    this.eventBus.localVideoEnabled.subscribe(this.handlePausePlaylist);\n  }\n\n  /**\n   * Remove tracks if reached the end of list otherwise play next\n   * @param {HMSPlaylistType} type\n   */\n  private async handleEnded(type: HMSPlaylistType = HMSPlaylistType.audio) {\n    const { list, currentIndex, isAutoplayOn } = this.state[type];\n    if (currentIndex === list.length - 1) {\n      await this.stop(type);\n      this.emit('playlistEnded', type);\n    } else {\n      if (isAutoplayOn) {\n        this.playNext(type);\n      } else {\n        // when autoplay not allowed, pause the media element\n        await this.pause(list[currentIndex].url, type);\n      }\n    }\n    this.emit('currentTrackEnded', list[currentIndex]);\n  }\n\n  private addTrack = async (track: MediaStreamTrack, source: string) => {\n    await this.sdk.addTrack(track, source);\n    HMSLogger.d(this.TAG, 'Playlist track added', stringifyMediaStreamTrack(track));\n  };\n\n  private removeTrack = async (trackId: string) => {\n    await this.sdk.removeTrack(trackId, true);\n    HMSLogger.d(this.TAG, 'Playlist track removed', trackId);\n  };\n}\n","import { HMSSessionStore } from '../interfaces';\nimport ITransport from '../transport/ITransport';\nimport { convertDateNumToDate } from '../utils/date';\n\nexport class SessionStore implements HMSSessionStore {\n  private observedKeys: Set<string> = new Set();\n\n  constructor(private transport: ITransport) {}\n\n  async get(key: string) {\n    const { data, updated_at } = await this.transport.getSessionMetadata(key);\n\n    return { value: data, updatedAt: convertDateNumToDate(updated_at) };\n  }\n\n  async set(key: string, data: any) {\n    const { data: value, updated_at } = await this.transport.setSessionMetadata({ key, data });\n    const updatedAt = convertDateNumToDate(updated_at);\n    return { value, updatedAt };\n  }\n\n  async observe(keys: string[]) {\n    const prevObservedKeys = new Set(this.observedKeys);\n    keys.forEach(key => this.observedKeys.add(key));\n\n    if (this.observedKeys.size !== prevObservedKeys.size) {\n      try {\n        await this.transport.listenMetadataChange(Array.from(this.observedKeys));\n      } catch (e) {\n        this.observedKeys = prevObservedKeys;\n        throw e;\n      }\n    }\n  }\n\n  async unobserve(keys: string[]) {\n    const prevObservedKeys = new Set(this.observedKeys);\n    this.observedKeys = new Set([...this.observedKeys].filter(key => !keys.includes(key)));\n\n    if (this.observedKeys.size !== prevObservedKeys.size) {\n      try {\n        await this.transport.listenMetadataChange(Array.from(this.observedKeys));\n      } catch (e) {\n        this.observedKeys = prevObservedKeys;\n        throw e;\n      }\n    }\n  }\n}\n","export class JoinParameters {\n  constructor(\n    public authToken: string,\n    public peerId: string,\n    public peerName: string = '',\n    public data: string = '',\n    public endpoint: string = 'https://prod-init.100ms.live/init',\n    public autoSubscribeVideo: boolean = false,\n  ) {}\n}\n","export enum TransportFailureCategory {\n  ConnectFailed,\n  SignalDisconnect,\n  JoinWSMessageFailed,\n  PublishIceConnectionFailed,\n  SubscribeIceConnectionFailed,\n}\n\nexport const Dependencies = {\n  [TransportFailureCategory.ConnectFailed]: [],\n  [TransportFailureCategory.SignalDisconnect]: [],\n  [TransportFailureCategory.JoinWSMessageFailed]: [TransportFailureCategory.SignalDisconnect],\n  [TransportFailureCategory.PublishIceConnectionFailed]: [TransportFailureCategory.SignalDisconnect],\n  [TransportFailureCategory.SubscribeIceConnectionFailed]: [TransportFailureCategory.SignalDisconnect],\n};\n","export enum TransportState {\n  Disconnected = 'Disconnected',\n  Connecting = 'Connecting',\n  Joined = 'Joined',\n  Preview = 'Preview',\n  Failed = 'Failed',\n  Reconnecting = 'Reconnecting',\n  Leaving = 'Leaving',\n}\n","export interface PromiseCallbacks<T, K = void> {\n  resolve: (value: T) => void;\n  reject: (reason?: any) => void;\n  metadata?: K;\n}\n\nexport class PromiseWithCallbacks<T> {\n  promise: Promise<T>;\n  resolve!: (value: T) => void;\n  reject!: (reason?: any) => void;\n\n  constructor(cb: (resolve: (value: T) => void, reject: (reason?: any) => void) => any) {\n    this.promise = new Promise<T>((resolve, reject) => {\n      this.resolve = resolve;\n      this.reject = reject;\n      cb(resolve, reject);\n    });\n  }\n}\n","import { Dependencies as TFCDependencies, TransportFailureCategory as TFC } from './models/TransportFailureCategory';\nimport { TransportState } from './models/TransportState';\nimport { HMSException } from '../error/HMSException';\nimport { MAX_TRANSPORT_RETRIES, MAX_TRANSPORT_RETRY_DELAY } from '../utils/constants';\nimport HMSLogger from '../utils/logger';\nimport { PromiseWithCallbacks } from '../utils/promise';\n\n/**\n * Task which is executed by [RetryScheduler.schedule] until max retry count\n * is reached.\n *\n * Any exception raised while executing the task assumes that task is failed.\n * Failed tasks are retried if max retry count is not reached.\n *\n * @returns True if the task if successful, otherwise False\n *\n *\n */\ntype RetryTask = () => Promise<boolean>;\n\ninterface ScheduleTaskParams {\n  category: TFC;\n  error: HMSException;\n  task: RetryTask;\n  originalState: TransportState;\n  maxFailedRetries?: number;\n  changeState?: boolean;\n}\n\nexport class RetryScheduler {\n  private readonly TAG = '[RetryScheduler]';\n  private inProgress = new Map<TFC, PromiseWithCallbacks<number>>();\n  private retryTaskIds: number[] = [];\n\n  constructor(\n    private onStateChange: (state: TransportState, error?: HMSException) => Promise<void>,\n    private sendEvent: (error: HMSException, category: TFC) => void,\n  ) {}\n\n  async schedule({\n    category,\n    error,\n    task,\n    originalState,\n    maxFailedRetries = MAX_TRANSPORT_RETRIES,\n    changeState = true,\n  }: ScheduleTaskParams) {\n    await this.scheduleTask({ category, error, changeState, task, originalState, maxFailedRetries });\n  }\n\n  reset() {\n    this.retryTaskIds.forEach(future => clearTimeout(future));\n    this.retryTaskIds = [];\n    this.inProgress.clear();\n  }\n\n  isTaskInProgress(category: TFC) {\n    return !!this.inProgress.get(category);\n  }\n\n  // eslint-disable-next-line complexity\n  private async scheduleTask({\n    category,\n    error,\n    changeState,\n    task,\n    originalState,\n    maxFailedRetries = MAX_TRANSPORT_RETRIES,\n    failedRetryCount = 0,\n  }: ScheduleTaskParams & { failedRetryCount?: number }): Promise<void> {\n    HMSLogger.d(this.TAG, 'schedule: ', { category: TFC[category], error });\n\n    // First schedule call\n    if (failedRetryCount === 0) {\n      const inProgressTask = this.inProgress.get(category);\n      if (inProgressTask) {\n        HMSLogger.d(this.TAG, `schedule: Already a task for ${TFC[category]} scheduled, waiting for its completion`);\n        await inProgressTask.promise;\n        return;\n      }\n\n      const taskPromise = new PromiseWithCallbacks<number>((_, __) => {});\n      this.inProgress.set(category, taskPromise);\n\n      this.sendEvent(error, category);\n    }\n\n    let hasFailedDependency = false;\n    const dependencies = TFCDependencies[category];\n\n    for (const dependencyIndexString in dependencies) {\n      const dependency = dependencies[parseInt(dependencyIndexString)];\n      try {\n        const dependencyTask = this.inProgress.get(dependency);\n        if (dependencyTask) {\n          HMSLogger.d(\n            this.TAG,\n            `schedule: Suspending retry task of ${TFC[category]}, waiting for ${TFC[dependency]} to recover`,\n          );\n          await dependencyTask.promise;\n          HMSLogger.d(\n            this.TAG,\n            `schedule: Resuming retry task ${TFC[category]} as it's dependency ${TFC[dependency]} is recovered`,\n          );\n        }\n      } catch (ex) {\n        HMSLogger.d(\n          this.TAG,\n          `schedule: Stopping retry task of ${TFC[category]} as it's dependency ${TFC[dependency]} failed to recover`,\n        );\n        hasFailedDependency = true;\n        break;\n      }\n    }\n\n    if (failedRetryCount >= maxFailedRetries || hasFailedDependency) {\n      error.description += `. [${TFC[category]}] Could not recover after ${failedRetryCount} tries`;\n\n      if (hasFailedDependency) {\n        error.description += ` Could not recover all of it's required dependencies - [${(dependencies as Array<TFC>)\n          .map(dep => TFC[dep])\n          .toString()}]`;\n      }\n      error.isTerminal = true;\n\n      // @NOTE: Don't reject to throw error for dependencies, use onStateChange\n      // const taskPromise = this.inProgress.get(category);\n      this.inProgress.delete(category);\n      // taskPromise?.reject(error);\n      this.sendEvent(error, category);\n\n      this.reset();\n\n      if (changeState) {\n        this.onStateChange(TransportState.Failed, error);\n      } else {\n        throw error;\n      }\n\n      return;\n    }\n\n    if (changeState) {\n      this.onStateChange(TransportState.Reconnecting, error);\n    }\n\n    const delay = this.getDelayForRetryCount(category, failedRetryCount);\n\n    HMSLogger.i(\n      this.TAG,\n      `schedule: [${TFC[category]}] [failedRetryCount=${failedRetryCount}] Scheduling retry task in ${delay}ms`,\n    );\n\n    let taskSucceeded: boolean;\n    try {\n      taskSucceeded = await this.setTimeoutPromise(task, delay);\n    } catch (ex) {\n      taskSucceeded = false;\n      HMSLogger.w(\n        this.TAG,\n        `[${TFC[category]}] Un-caught exception ${(ex as HMSException).name} in retry-task, initiating retry`,\n        ex,\n      );\n    }\n\n    if (taskSucceeded) {\n      const taskPromise = this.inProgress.get(category);\n      this.inProgress.delete(category);\n      taskPromise?.resolve(failedRetryCount);\n\n      if (changeState && this.inProgress.size === 0) {\n        this.onStateChange(originalState);\n      }\n      HMSLogger.i(this.TAG, `schedule: [${TFC[category]}] [failedRetryCount=${failedRetryCount}] Recovered ♻️`);\n    } else {\n      await this.scheduleTask({\n        category,\n        error,\n        changeState,\n        task,\n        originalState,\n        maxFailedRetries,\n        failedRetryCount: failedRetryCount + 1,\n      });\n    }\n  }\n\n  private getBaseDelayForTask(category: TFC, n: number) {\n    if (category === TFC.JoinWSMessageFailed) {\n      // linear backoff(2 + jitter for every retry)\n      return 2;\n    }\n    // exponential backoff\n    return Math.pow(2, n);\n  }\n\n  private getDelayForRetryCount(category: TFC, n: number) {\n    const delay = this.getBaseDelayForTask(category, n);\n    const jitter = category === TFC.JoinWSMessageFailed ? Math.random() * 2 : Math.random();\n    return Math.round(Math.min(delay + jitter, MAX_TRANSPORT_RETRY_DELAY) * 1000);\n  }\n\n  private async setTimeoutPromise<T>(task: () => Promise<T>, delay: number): Promise<T> {\n    return new Promise((resolve, reject) => {\n      const timeoutId = window.setTimeout(async () => {\n        try {\n          const value: T = await task();\n          value && this.retryTaskIds.splice(this.retryTaskIds.indexOf(timeoutId), 1);\n          resolve(value);\n        } catch (error) {\n          reject(error);\n        }\n      }, delay);\n\n      this.retryTaskIds.push(timeoutId);\n    });\n  }\n}\n","import { ANALYTICS_BUFFER_SIZE } from '../../utils/constants';\nimport { LocalStorage } from '../../utils/local-storage';\nimport { Queue } from '../../utils/queue';\nimport AnalyticsEvent from '../AnalyticsEvent';\n\nexport class LocalStorageEvents extends Queue<AnalyticsEvent> {\n  private localStorage = new LocalStorage<AnalyticsEvent[]>('hms-analytics');\n\n  constructor() {\n    super(ANALYTICS_BUFFER_SIZE);\n    // @TODO: Currently we don't send failed events of old sessions. So reset localstorage for every session.\n    // Once support for failed events from old sessions is added, remove clear and init queue from localstorage.\n    this.localStorage.clear();\n    this.initLocalStorageQueue();\n  }\n\n  enqueue(event: AnalyticsEvent) {\n    super.enqueue(event);\n    this.localStorage.set(this.storage);\n  }\n\n  dequeue() {\n    const removedEvent = super.dequeue();\n    this.localStorage.set(this.storage);\n    return removedEvent;\n  }\n\n  private initLocalStorageQueue() {\n    this.localStorage.get()?.forEach(event => {\n      const eventInstance = new AnalyticsEvent(event);\n      super.enqueue(eventInstance);\n    });\n  }\n}\n","import AnalyticsEvent from './AnalyticsEvent';\nimport { HTTPAnalyticsTransport } from './HTTPAnalyticsTransport';\nimport { IAnalyticsTransportProvider } from './IAnalyticsTransportProvider';\nimport HMSLogger from '../utils/logger';\nimport { Queue } from '../utils/queue';\n\nexport abstract class AnalyticsTransport {\n  abstract transportProvider: IAnalyticsTransportProvider;\n  abstract failedEvents: Queue<AnalyticsEvent>;\n  private readonly TAG = '[AnalyticsTransport]';\n\n  sendEvent(event: AnalyticsEvent) {\n    try {\n      this.sendSingleEvent(event);\n      this.flushFailedEvents();\n    } catch (error) {\n      HMSLogger.w(this.TAG, 'sendEvent failed', error);\n    }\n  }\n\n  flushFailedEvents(currentPeerId?: string) {\n    try {\n      HMSLogger.d(this.TAG, 'Flushing failed events', this.failedEvents);\n      while (this.failedEvents.size() > 0) {\n        const event = this.failedEvents.dequeue();\n        if (event) {\n          const isEventFromCurrentPeer = event.metadata?.peer.peer_id === currentPeerId;\n          if (isEventFromCurrentPeer || !event.metadata.peer.peer_id) {\n            this.sendSingleEvent(event);\n          } else {\n            HTTPAnalyticsTransport.sendEvent(event);\n          }\n        }\n      }\n    } catch (error) {\n      HMSLogger.w(this.TAG, 'flushFailedEvents failed', error);\n    }\n  }\n\n  private sendSingleEvent(event: AnalyticsEvent) {\n    try {\n      this.transportProvider.sendEvent(event);\n      HMSLogger.d(this.TAG, 'Sent event', event.name, event);\n    } catch (error) {\n      HMSLogger.w(this.TAG, `${this.transportProvider.TAG}.sendEvent failed, adding to local storage events`, {\n        event,\n        error,\n      });\n      this.failedEvents.enqueue(event);\n      throw error;\n    }\n  }\n}\n","import { LocalStorageEvents } from './LocalStoageEvents';\nimport { ISignal } from '../../signal/ISignal';\nimport { AnalyticsTransport } from '../AnalyticsTransport';\n\nexport class SignalAnalyticsTransport extends AnalyticsTransport {\n  failedEvents = new LocalStorageEvents();\n\n  constructor(public transportProvider: ISignal) {\n    super();\n  }\n}\n","// Sent in trickle messages as target - biz understands only 0 and 1\nexport enum HMSConnectionRole {\n  Publish = 0,\n  Subscribe = 1,\n}\n\nexport interface HMSTrickle {\n  candidate: RTCIceCandidateInit;\n  target: HMSConnectionRole;\n}\n","import * as sdpTransform from 'sdp-transform';\nimport { isPresent } from './validations';\nimport { TrackState } from '../notification-manager';\n\n/**\n * @DISCUSS: Should we have a wrapper over RTCSessionDescriptionInit(SDP) and have these methods in it?\n */\n\nexport function fixMsid(desc: RTCSessionDescriptionInit, tracks?: Map<string, TrackState>): RTCSessionDescriptionInit {\n  const parsedSdp = sdpTransform.parse(desc.sdp!);\n\n  if (!parsedSdp.origin?.username.startsWith('mozilla')) {\n    // This isn't firefox, so we return the original offer without doing anything\n    return desc;\n  }\n\n  const mediaTracks = tracks ? Array.from(tracks.values()) : [];\n\n  parsedSdp.media.forEach(m => {\n    const streamId = m.msid?.split(' ')[0];\n    // check for both type and streamid as both video and screenshare have same type but different stream_id\n    const trackId = mediaTracks.find(val => val.type === m.type && val.stream_id === streamId)?.track_id;\n    if (trackId) {\n      m.msid = m.msid?.replace(/\\s(.+)/, ` ${trackId}`);\n    }\n  });\n\n  return { type: desc.type, sdp: sdpTransform.write(parsedSdp) };\n}\n\n/**\n * Get the track ID from the SDP using the transceiver's mid from RTCTrackEvent\n * @TODO: This could take more processing time in a large room and when the SDP is big.\n * Consider using this for Firefox only?\n */\nexport function getSdpTrackIdForMid(\n  desc?: RTCSessionDescriptionInit | null,\n  mid?: RTCRtpTransceiver['mid'],\n): string | undefined {\n  if (!desc?.sdp || !mid) {\n    return undefined;\n  }\n  const parsedSdp = sdpTransform.parse(desc.sdp);\n  const trackSection = parsedSdp.media.find(media => isPresent(media.mid) && parseInt(media.mid!) === parseInt(mid));\n  const trackId = trackSection?.msid?.split(' ')[1];\n  return trackId;\n}\n\nexport function enableOpusDtx(desc: RTCSessionDescriptionInit): RTCSessionDescriptionInit {\n  if (desc.sdp!.includes('usedtx=1')) {\n    return desc;\n  }\n\n  return { type: desc.type, sdp: desc.sdp!.replace('useinbandfec=1', 'useinbandfec=1;usedtx=1') };\n}\n","import HMSLogger from './logger';\nimport { ErrorFactory } from '../error/ErrorFactory';\n\nconst TAG = `[VALIDATIONS]`;\n\n/**\n * Check only for presence(not truthy) of a value.\n * Use in places where 0, false need to be considered valid.\n */\nexport function isPresent(value: any) {\n  return value !== undefined && value !== null;\n}\n\n/**\n * checks if RTCPeerConnection constructor is available\n */\nexport const validateRTCPeerConnection = () => {\n  if (!isPresent(RTCPeerConnection)) {\n    const error = ErrorFactory.GenericErrors.MissingRTCPeerConnection();\n    HMSLogger.e(TAG, error);\n    throw error;\n  }\n};\n\n/**\n * navigator.mediaDevices is undefined in insecure contexts served over HTTP protocol\n */\nexport const validateMediaDevicesExistence = () => {\n  if (!isPresent(navigator.mediaDevices)) {\n    const error = ErrorFactory.GenericErrors.MissingMediaDevices();\n    HMSLogger.e(TAG, error);\n    throw error;\n  }\n};\n","import { HMSConnectionRole } from './model';\nimport { ErrorFactory, HMSAction } from '../error/ErrorFactory';\nimport { HMSLocalTrack, HMSLocalVideoTrack } from '../media/tracks';\nimport { TrackState } from '../notification-manager';\nimport { ISignal } from '../signal/ISignal';\nimport HMSLogger from '../utils/logger';\nimport { enableOpusDtx, fixMsid } from '../utils/session-description';\n\nconst TAG = '[HMSConnection]';\ninterface RTCIceCandidatePair {\n  local: RTCIceCandidate;\n  remote: RTCIceCandidate;\n}\n\nexport default abstract class HMSConnection {\n  readonly role: HMSConnectionRole;\n  protected readonly signal: ISignal;\n\n  abstract readonly nativeConnection: RTCPeerConnection;\n  /**\n   * We keep a list of pending IceCandidates received\n   * from the signalling server. When the peer-connection\n   * is initialized we call [addIceCandidate] for each.\n   *\n   * WARN:\n   *  - [HMSPublishConnection] keeps the complete list of candidates (for\n   *      ice-connection failed/disconnect) forever.\n   *  - [HMSSubscribeConnection] clears this list as soon as we call [addIceCandidate]\n   */\n  readonly candidates = new Array<RTCIceCandidateInit>();\n\n  selectedCandidatePair?: RTCIceCandidatePair;\n\n  protected constructor(role: HMSConnectionRole, signal: ISignal) {\n    this.role = role;\n    this.signal = signal;\n  }\n\n  public get iceConnectionState(): RTCIceConnectionState {\n    return this.nativeConnection.iceConnectionState;\n  }\n\n  public get connectionState(): RTCPeerConnectionState {\n    return this.nativeConnection.connectionState;\n  }\n\n  private get action(): HMSAction {\n    return this.role === HMSConnectionRole.Publish ? HMSAction.PUBLISH : HMSAction.SUBSCRIBE;\n  }\n\n  addTransceiver(track: MediaStreamTrack, init: RTCRtpTransceiverInit): RTCRtpTransceiver {\n    return this.nativeConnection.addTransceiver(track, init);\n  }\n\n  async createOffer(tracks?: Map<string, TrackState>, options?: RTCOfferOptions): Promise<RTCSessionDescriptionInit> {\n    try {\n      const offer = await this.nativeConnection.createOffer(options);\n      HMSLogger.d(TAG, `[role=${this.role}] createOffer offer=${JSON.stringify(offer, null, 1)}`);\n      return enableOpusDtx(fixMsid(offer, tracks));\n    } catch (error) {\n      throw ErrorFactory.WebrtcErrors.CreateOfferFailed(this.action, (error as Error).message);\n    }\n  }\n\n  async createAnswer(options: RTCOfferOptions | undefined = undefined): Promise<RTCSessionDescriptionInit> {\n    try {\n      const answer = await this.nativeConnection.createAnswer(options);\n      HMSLogger.d(TAG, `[role=${this.role}] createAnswer answer=${JSON.stringify(answer, null, 1)}`);\n      return answer;\n    } catch (error) {\n      throw ErrorFactory.WebrtcErrors.CreateAnswerFailed(this.action, (error as Error).message);\n    }\n  }\n\n  async setLocalDescription(description: RTCSessionDescriptionInit): Promise<void> {\n    try {\n      HMSLogger.d(TAG, `[role=${this.role}] setLocalDescription description=${JSON.stringify(description, null, 1)}`);\n      await this.nativeConnection.setLocalDescription(description);\n    } catch (error) {\n      throw ErrorFactory.WebrtcErrors.SetLocalDescriptionFailed(this.action, (error as Error).message);\n    }\n  }\n\n  async setRemoteDescription(description: RTCSessionDescriptionInit): Promise<void> {\n    try {\n      HMSLogger.d(TAG, `[role=${this.role}] setRemoteDescription description=${JSON.stringify(description, null, 1)}`);\n      await this.nativeConnection.setRemoteDescription(description);\n    } catch (error) {\n      throw ErrorFactory.WebrtcErrors.SetRemoteDescriptionFailed(this.action, (error as Error).message);\n    }\n  }\n\n  async addIceCandidate(candidate: RTCIceCandidateInit): Promise<void> {\n    if (this.nativeConnection.signalingState === 'closed') {\n      HMSLogger.d(TAG, `[role=${this.role}] addIceCandidate signalling state closed`);\n      return;\n    }\n    HMSLogger.d(TAG, `[role=${this.role}] addIceCandidate candidate=${JSON.stringify(candidate, null, 1)}`);\n    await this.nativeConnection.addIceCandidate(candidate);\n  }\n\n  public get remoteDescription(): RTCSessionDescription | null {\n    return this.nativeConnection.remoteDescription;\n  }\n\n  getSenders(): Array<RTCRtpSender> {\n    return this.nativeConnection.getSenders();\n  }\n\n  logSelectedIceCandidatePairs() {\n    /**\n     * for the very first peer in the room we don't have any subscribe ice candidates\n     * because the peer hasn't subscribed to anything.\n     *\n     * For all peers joining after this peer, we have published and subscribed at the time of join itself\n     * so we're able to log both publish and subscribe ice candidates.\n     * Added try catch for the whole section as the getSenders and getReceivers is throwing errors in load test\n     */\n    try {\n      const transmitters = this.role === HMSConnectionRole.Publish ? this.getSenders() : this.getReceivers();\n\n      transmitters.forEach(transmitter => {\n        const kindOfTrack = transmitter.track?.kind;\n        if (transmitter.transport) {\n          const iceTransport = transmitter.transport.iceTransport;\n\n          const logSelectedCandidate = () => {\n            // @ts-expect-error\n            if (typeof iceTransport.getSelectedCandidatePair === 'function') {\n              // @ts-expect-error\n              this.selectedCandidatePair = iceTransport.getSelectedCandidatePair();\n              HMSLogger.d(\n                TAG,\n                `${HMSConnectionRole[this.role]} connection`,\n                `selected ${kindOfTrack || 'unknown'} candidate pair`,\n                JSON.stringify(this.selectedCandidatePair, null, 2),\n              );\n            }\n          };\n\n          // @ts-expect-error\n          if (typeof iceTransport.onselectedcandidatepairchange === 'function') {\n            // @ts-expect-error\n            iceTransport.onselectedcandidatepairchange = logSelectedCandidate;\n          }\n          logSelectedCandidate();\n        }\n      });\n    } catch (error) {\n      HMSLogger.w(\n        TAG,\n        `Error in logging selected ice candidate pair for ${HMSConnectionRole[this.role]} connection`,\n        error,\n      );\n    }\n  }\n\n  removeTrack(sender: RTCRtpSender) {\n    if (this.nativeConnection.signalingState !== 'closed') {\n      this.nativeConnection.removeTrack(sender);\n    }\n  }\n\n  async setMaxBitrateAndFramerate(track: HMSLocalTrack) {\n    const maxBitrate = track.settings.maxBitrate;\n    const maxFramerate = track instanceof HMSLocalVideoTrack && track.settings.maxFramerate;\n    const sender = this.getSenders().find(s => s?.track?.id === track.getTrackIDBeingSent());\n\n    if (sender) {\n      const params = sender.getParameters();\n      if (params.encodings.length > 0) {\n        if (maxBitrate) {\n          params.encodings[0].maxBitrate = maxBitrate * 1000;\n        }\n        if (maxFramerate) {\n          // @ts-ignore\n          params.encodings[0].maxFramerate = maxFramerate;\n        }\n      }\n      await sender.setParameters(params);\n    } else {\n      HMSLogger.w(\n        TAG,\n        `no sender found to setMaxBitrate for track - ${track.trackId}, sentTrackId - ${track.getTrackIDBeingSent()}`,\n      );\n    }\n  }\n\n  async getStats() {\n    return await this.nativeConnection.getStats();\n  }\n\n  async close() {\n    this.nativeConnection.close();\n  }\n\n  private getReceivers() {\n    return this.nativeConnection.getReceivers();\n  }\n}\n","import { IPublishConnectionObserver } from './IPublishConnectionObserver';\nimport { ISignal } from '../../signal/ISignal';\nimport { API_DATA_CHANNEL } from '../../utils/constants';\nimport HMSLogger from '../../utils/logger';\nimport HMSConnection from '../HMSConnection';\nimport { HMSConnectionRole } from '../model';\n\nexport default class HMSPublishConnection extends HMSConnection {\n  private readonly TAG = '[HMSPublishConnection]';\n  private readonly observer: IPublishConnectionObserver;\n  readonly nativeConnection: RTCPeerConnection;\n\n  constructor(signal: ISignal, config: RTCConfiguration, observer: IPublishConnectionObserver) {\n    super(HMSConnectionRole.Publish, signal);\n    this.observer = observer;\n\n    this.nativeConnection = new RTCPeerConnection(config);\n    this.nativeConnection.createDataChannel(API_DATA_CHANNEL, {\n      protocol: 'SCTP',\n    });\n\n    this.nativeConnection.onicecandidate = ({ candidate }) => {\n      if (candidate) {\n        signal.trickle(this.role, candidate);\n      }\n    };\n\n    this.nativeConnection.oniceconnectionstatechange = () => {\n      this.observer.onIceConnectionChange(this.nativeConnection.iceConnectionState);\n    };\n\n    // @TODO(eswar): Remove this. Use iceconnectionstate change with interval and threshold.\n    this.nativeConnection.onconnectionstatechange = () => {\n      this.observer.onConnectionStateChange(this.nativeConnection.connectionState);\n    };\n  }\n\n  initAfterJoin() {\n    this.nativeConnection.onnegotiationneeded = async () => {\n      HMSLogger.d(this.TAG, `onnegotiationneeded`);\n      await this.observer.onRenegotiationNeeded();\n    };\n  }\n}\n","import EventEmitter from 'eventemitter2';\nimport { v4 as uuid } from 'uuid';\nimport ISubscribeConnectionObserver from './ISubscribeConnectionObserver';\nimport HMSRemoteStream from '../../media/streams/HMSRemoteStream';\nimport { HMSRemoteAudioTrack } from '../../media/tracks/HMSRemoteAudioTrack';\nimport { HMSRemoteVideoTrack } from '../../media/tracks/HMSRemoteVideoTrack';\nimport { ISignal } from '../../signal/ISignal';\nimport { API_DATA_CHANNEL } from '../../utils/constants';\nimport HMSLogger from '../../utils/logger';\nimport { getSdpTrackIdForMid } from '../../utils/session-description';\nimport { sleep } from '../../utils/timer-utils';\nimport { PreferAudioLayerParams, PreferLayerResponse, PreferVideoLayerParams } from '../channel-messages';\nimport HMSConnection from '../HMSConnection';\nimport HMSDataChannel from '../HMSDataChannel';\nimport { HMSConnectionRole } from '../model';\n\nexport default class HMSSubscribeConnection extends HMSConnection {\n  private readonly TAG = '[HMSSubscribeConnection]';\n  private readonly remoteStreams = new Map<string, HMSRemoteStream>();\n  private readonly observer: ISubscribeConnectionObserver;\n  private readonly MAX_RETRIES = 3;\n\n  readonly nativeConnection: RTCPeerConnection;\n\n  private pendingMessageQueue: string[] = [];\n\n  private apiChannel?: HMSDataChannel;\n  private eventEmitter = new EventEmitter({ maxListeners: 60 });\n\n  private initNativeConnectionCallbacks() {\n    this.nativeConnection.oniceconnectionstatechange = () => {\n      this.observer.onIceConnectionChange(this.nativeConnection.iceConnectionState);\n    };\n\n    // @TODO(eswar): Remove this. Use iceconnectionstate change with interval and threshold.\n    this.nativeConnection.onconnectionstatechange = () => {\n      this.observer.onConnectionStateChange(this.nativeConnection.connectionState);\n    };\n\n    this.nativeConnection.ondatachannel = e => {\n      if (e.channel.label !== API_DATA_CHANNEL) {\n        // TODO: this.observer.onDataChannel(e.channel);\n        return;\n      }\n\n      this.apiChannel = new HMSDataChannel(\n        e.channel,\n        {\n          onMessage: (value: string) => {\n            this.eventEmitter.emit('message', value);\n            this.observer.onApiChannelMessage(value);\n          },\n        },\n        `role=${this.role}`,\n      );\n\n      e.channel.onopen = this.handlePendingApiMessages;\n    };\n\n    this.nativeConnection.onicecandidate = e => {\n      if (e.candidate !== null) {\n        this.signal.trickle(this.role, e.candidate);\n      }\n    };\n\n    this.nativeConnection.ontrack = e => {\n      const stream = e.streams[0];\n      const streamId = stream.id;\n\n      if (!this.remoteStreams.has(streamId)) {\n        const remote = new HMSRemoteStream(stream, this);\n        this.remoteStreams.set(streamId, remote);\n      }\n\n      stream.addEventListener('removetrack', (ev: MediaStreamTrackEvent) => {\n        if (ev.track.id !== e.track.id) {\n          return;\n        }\n        /*\n         * this match has to be with nativetrack.id instead of track.trackId as the latter refers to sdp track id for\n         * ease of correlating update messages coming from the backend. The two track ids are usually the same, but\n         * can be different for some browsers. checkout sdptrackid field in HMSTrack for more details.\n         */\n        const toRemoveTrackIdx = remote.tracks.findIndex(\n          track => track.nativeTrack.id === ev.track.id && e.transceiver.mid === track.transceiver?.mid,\n        );\n        if (toRemoveTrackIdx >= 0) {\n          const toRemoveTrack = remote.tracks[toRemoveTrackIdx];\n          this.observer.onTrackRemove(toRemoveTrack);\n          remote.tracks.splice(toRemoveTrackIdx, 1);\n          // If the length becomes 0 we assume that stream is removed entirely\n          if (remote.tracks.length === 0) {\n            this.remoteStreams.delete(streamId);\n          }\n        }\n      });\n\n      const remote = this.remoteStreams.get(streamId)!;\n      const TrackCls = e.track.kind === 'audio' ? HMSRemoteAudioTrack : HMSRemoteVideoTrack;\n      const track = new TrackCls(remote, e.track);\n      track.transceiver = e.transceiver;\n      const trackId = getSdpTrackIdForMid(this.remoteDescription, e.transceiver?.mid);\n      trackId && track.setSdpTrackId(trackId);\n      remote.tracks.push(track);\n      this.observer.onTrackAdd(track);\n    };\n  }\n\n  constructor(signal: ISignal, config: RTCConfiguration, observer: ISubscribeConnectionObserver) {\n    super(HMSConnectionRole.Subscribe, signal);\n    this.observer = observer;\n\n    this.nativeConnection = new RTCPeerConnection(config);\n    this.initNativeConnectionCallbacks();\n  }\n\n  sendOverApiDataChannel(message: string) {\n    if (this.apiChannel && this.apiChannel.readyState === 'open') {\n      this.apiChannel.send(message);\n    } else {\n      HMSLogger.w(this.TAG, `API Data channel not ${this.apiChannel ? 'open' : 'present'}, queueing`, message);\n      this.pendingMessageQueue.push(message);\n    }\n  }\n\n  async sendOverApiDataChannelWithResponse<T extends PreferAudioLayerParams | PreferVideoLayerParams>(\n    message: T,\n    requestId?: string,\n  ): Promise<PreferLayerResponse> {\n    const id = uuid();\n    const request = JSON.stringify({\n      id: requestId || id,\n      jsonrpc: '2.0',\n      ...message,\n    });\n    return this.sendMessage(request, id);\n  }\n\n  async close() {\n    await super.close();\n    this.apiChannel?.close();\n  }\n\n  private handlePendingApiMessages = () => {\n    this.eventEmitter.emit('open', true);\n    if (this.pendingMessageQueue.length > 0) {\n      HMSLogger.d(this.TAG, 'Found pending message queue, sending messages');\n      this.pendingMessageQueue.forEach(msg => this.sendOverApiDataChannel(msg));\n      this.pendingMessageQueue.length = 0;\n    }\n  };\n\n  // eslint-disable-next-line complexity\n  private sendMessage = async (request: string, requestId: string): Promise<PreferLayerResponse> => {\n    if (this.apiChannel?.readyState !== 'open') {\n      await this.eventEmitter.waitFor('open');\n    }\n    let response: PreferLayerResponse;\n    for (let i = 0; i < this.MAX_RETRIES; i++) {\n      this.apiChannel!.send(request);\n      response = await this.waitForResponse(requestId);\n      const error = response.error;\n      if (error) {\n        // Don't retry or do anything, track is already removed\n        if (error.code === 404) {\n          HMSLogger.d(this.TAG, `Track not found ${requestId}`, { request, try: i + 1, error });\n          break;\n        }\n        HMSLogger.e(this.TAG, `Failed sending ${requestId}`, { request, try: i + 1, error });\n        const shouldRetry = error.code / 100 === 5 || error.code === 429;\n        if (!shouldRetry) {\n          throw Error(`code=${error.code}, message=${error.message}`);\n        }\n        const delay = (2 + Math.random() * 2) * 1000;\n        await sleep(delay);\n      } else {\n        break;\n      }\n    }\n    return response!;\n  };\n\n  private waitForResponse = async (requestId: string): Promise<PreferLayerResponse> => {\n    const res = await this.eventEmitter.waitFor('message', function (value) {\n      return value.includes(requestId);\n    });\n    const response = JSON.parse(res[0] as string);\n    HMSLogger.d(this.TAG, `response for ${requestId} -`, JSON.stringify(response, null, 2));\n    return response;\n  };\n}\n","import HMSLogger from '../utils/logger';\n\nexport interface DataChannelObserver {\n  onMessage(value: string): void;\n}\n\nexport default class HMSDataChannel {\n  private readonly TAG = '[HMSDataChannel]';\n  private readonly nativeChannel: RTCDataChannel;\n  private readonly observer: DataChannelObserver;\n  private readonly metadata: string;\n\n  public get id() {\n    return this.nativeChannel.id;\n  }\n\n  public get label() {\n    return this.nativeChannel.label;\n  }\n\n  public get readyState() {\n    return this.nativeChannel.readyState;\n  }\n\n  constructor(nativeChannel: RTCDataChannel, observer: DataChannelObserver, metadata = '') {\n    this.nativeChannel = nativeChannel;\n    this.observer = observer;\n    this.metadata = metadata;\n\n    nativeChannel.onmessage = e => {\n      // HMSLogger.d(this.TAG, `[${this.metadata}] onMessage: label=${this.label}, message=${e.data}`);\n      this.observer.onMessage(e.data);\n    };\n  }\n\n  send(message: string) {\n    HMSLogger.d(this.TAG, `[${this.metadata}] Sending [size=${message.length}] message=${message}`);\n    this.nativeChannel.send(message);\n  }\n\n  close() {\n    this.nativeChannel.close();\n  }\n}\n","import {\n  HMSPeerStats,\n  HMSTrackStats,\n  MissingInboundStats,\n  PeerConnectionType,\n  RTCRemoteInboundRtpStreamStats,\n} from '../interfaces/webrtc-stats';\nimport { HMSLocalTrack, HMSRemoteTrack } from '../media/tracks';\nimport HMSLogger from '../utils/logger';\nimport { isPresent } from '../utils/validations';\n\nexport const getLocalTrackStats = async (\n  track: HMSLocalTrack,\n  peerName?: string,\n  prevTrackStats?: Record<string, HMSTrackStats>,\n): Promise<Record<string, HMSTrackStats> | undefined> => {\n  let trackReport: RTCStatsReport | undefined;\n  const trackStats: Record<string, HMSTrackStats> = {};\n  if (!track.transceiver?.sender.track) {\n    return;\n  }\n  try {\n    trackReport = await track.transceiver.sender.getStats();\n    const mimeTypes: { [key: string]: string } = {}; // codecId -> mimeType\n    const outbound: Record<string, RTCOutboundRtpStreamStats> = {};\n    const inbound: Record<string, RTCInboundRtpStreamStats & MissingInboundStats> = {};\n    trackReport?.forEach(stat => {\n      switch (stat.type) {\n        case 'outbound-rtp':\n          outbound[stat.id] = stat;\n          break;\n        case 'remote-inbound-rtp':\n          inbound[stat.ssrc] = stat;\n          break;\n        case 'codec':\n          mimeTypes[stat.id] = stat.mimeType;\n          break;\n        default:\n          break;\n      }\n    });\n\n    Object.keys({ ...outbound }).forEach(stat => {\n      const codecId = outbound[stat]?.codecId;\n      const mimeType = codecId ? mimeTypes[codecId] : undefined;\n      let codec: string | undefined;\n      if (mimeType) {\n        codec = mimeType.substring(mimeType.indexOf('/') + 1);\n      }\n      const out = outbound[stat];\n      const inStats = inbound[out.ssrc];\n      trackStats[stat] = {\n        ...out,\n        bitrate: computeBitrate('bytesSent', out, prevTrackStats?.[stat]),\n        packetsLost: inStats?.packetsLost,\n        jitter: inStats?.jitter,\n        roundTripTime: inStats?.roundTripTime,\n        totalRoundTripTime: inStats?.totalRoundTripTime,\n        peerName,\n        peerID: track.peerId,\n        codec,\n      };\n    });\n  } catch (err) {\n    HMSLogger.w('[HMSWebrtcStats]', 'Error in getting local track stats', track, err, (err as Error).name);\n  }\n  return trackStats;\n};\n\nexport const getTrackStats = async (\n  track: HMSRemoteTrack,\n  peerName?: string,\n  prevTrackStats?: HMSTrackStats,\n): Promise<HMSTrackStats | undefined> => {\n  let trackReport: RTCStatsReport | undefined;\n  try {\n    trackReport = await track.transceiver?.receiver.getStats();\n  } catch (err) {\n    HMSLogger.w('[HMSWebrtcStats]', 'Error in getting remote track stats', track, err);\n  }\n  const trackStats = getRelevantStatsFromTrackReport(trackReport);\n\n  const bitrate = computeBitrate('bytesReceived', trackStats, prevTrackStats);\n\n  const packetsLostRate = computeStatRate('packetsLost', trackStats, prevTrackStats);\n\n  if (trackStats?.remote) {\n    Object.assign(trackStats.remote, {\n      packetsLostRate: computeStatRate('packetsLost', trackStats.remote, prevTrackStats?.remote),\n    });\n  }\n\n  return (\n    trackStats &&\n    Object.assign(trackStats, {\n      bitrate,\n      packetsLostRate,\n      peerId: track.peerId,\n      peerName,\n      codec: trackStats.codec,\n    })\n  );\n};\n\nconst getRelevantStatsFromTrackReport = (trackReport?: RTCStatsReport) => {\n  let streamStats: RTCInboundRtpStreamStats | RTCOutboundRtpStreamStats | undefined;\n  // Valid by Webrtc spec, not in TS\n  // let remoteStreamStats: RTCRemoteInboundRtpStreamStats | RTCRemoteOutboundRtpStreamStats;\n  let remoteStreamStats: RTCRemoteInboundRtpStreamStats | undefined;\n\n  const mimeTypes: { [key: string]: string } = {}; // codecId -> mimeType\n  trackReport?.forEach(stat => {\n    switch (stat.type) {\n      case 'inbound-rtp':\n        streamStats = stat;\n        break;\n      case 'outbound-rtp':\n        streamStats = stat;\n        break;\n      case 'remote-inbound-rtp':\n        remoteStreamStats = stat;\n        break;\n      case 'codec':\n        mimeTypes[stat.id] = stat.mimeType;\n        break;\n      default:\n        break;\n    }\n  });\n\n  const mimeType = streamStats?.codecId ? mimeTypes[streamStats.codecId] : undefined;\n  let codec: string | undefined;\n  if (mimeType) {\n    codec = mimeType.substring(mimeType.indexOf('/') + 1);\n  }\n\n  return (\n    streamStats &&\n    Object.assign(streamStats, {\n      remote: remoteStreamStats,\n      codec: codec,\n    })\n  );\n};\n\nexport const getLocalPeerStatsFromReport = (\n  type: PeerConnectionType,\n  report?: RTCStatsReport,\n  prevStats?: HMSPeerStats,\n): (RTCIceCandidatePairStats & { bitrate: number }) | undefined => {\n  const activeCandidatePair = getActiveCandidatePairFromReport(report);\n  const bitrate = computeBitrate(\n    (type === 'publish' ? 'bytesSent' : 'bytesReceived') as any,\n    activeCandidatePair,\n    prevStats && prevStats[type],\n  );\n\n  return activeCandidatePair && Object.assign(activeCandidatePair, { bitrate });\n};\n\nexport const getActiveCandidatePairFromReport = (report?: RTCStatsReport): RTCIceCandidatePairStats | undefined => {\n  let activeCandidatePair: RTCIceCandidatePairStats | undefined;\n  report?.forEach(stat => {\n    if (stat.type === 'transport') {\n      // TS doesn't have correct types for RTCStatsReports\n      // @ts-expect-error\n      activeCandidatePair = report?.get(stat.selectedCandidatePairId);\n    }\n  });\n\n  // Fallback for Firefox.\n  if (!activeCandidatePair) {\n    report?.forEach(stat => {\n      if (stat.type === 'candidate-pair' && stat.selected) {\n        activeCandidatePair = stat;\n      }\n    });\n  }\n\n  return activeCandidatePair;\n};\n\nexport const getPacketsLostAndJitterFromReport = (report?: RTCStatsReport): { packetsLost: number; jitter: number } => {\n  const result = { packetsLost: 0, jitter: 0 };\n  report?.forEach(stat => {\n    if (stat.packetsLost) {\n      result.packetsLost += stat.packetsLost;\n    }\n    if (stat.jitter > result.jitter) {\n      result.jitter = stat.jitter;\n    }\n  });\n\n  return result;\n};\n\nexport const union = <T>(arr1: T[], arr2: T[]): T[] => {\n  return Array.from(new Set(arr1.concat(arr2)));\n};\n\n/**\n * Ref: https://github.dev/peermetrics/webrtc-stats/blob/b5c1fed68325543e6f563c6d3f4450a4b51e12b7/src/utils.ts#L62\n */\nexport const computeBitrate = <T extends HMSTrackStats>(\n  statName: keyof T,\n  newReport?: Partial<T>,\n  oldReport?: Partial<T>,\n): number => computeStatRate(statName, newReport, oldReport) * 8; // Bytes to bits\n\nconst computeStatRate = <T extends HMSTrackStats>(\n  statName: keyof T,\n  newReport?: Partial<T>,\n  oldReport?: Partial<T>,\n): number => {\n  const newVal = newReport && newReport[statName];\n  const oldVal = oldReport ? oldReport[statName] : null;\n  const conditions = [newReport, oldReport, isPresent(newVal), isPresent(oldVal)];\n  if (conditions.every(condition => !!condition)) {\n    // Type not null checked in `isPresent`\n    // * 1000 - ms to s\n    return (\n      computeNumberRate(\n        newVal as unknown as number,\n        oldVal as unknown as number,\n        newReport?.timestamp,\n        oldReport?.timestamp,\n      ) * 1000\n    );\n  } else {\n    return 0;\n  }\n};\n\nexport const computeNumberRate = (newVal?: number, oldVal?: number, newTimestamp?: number, oldTimestamp?: number) => {\n  if (isPresent(newVal) && isPresent(oldVal) && newTimestamp && oldTimestamp) {\n    return ((newVal as number) - (oldVal as number)) / (newTimestamp - oldTimestamp);\n  } else {\n    return 0;\n  }\n};\n","import {\n  computeNumberRate,\n  getLocalPeerStatsFromReport,\n  getLocalTrackStats,\n  getPacketsLostAndJitterFromReport,\n  getTrackStats,\n  union,\n} from './utils';\nimport { HMSPeerStats, HMSTrackStats, PeerConnectionType } from '../interfaces/webrtc-stats';\nimport { HMSLocalTrack, HMSRemoteAudioTrack, HMSRemoteTrack, HMSRemoteVideoTrack } from '../media/tracks';\nimport { IStore } from '../sdk/store';\nimport HMSLogger from '../utils/logger';\n\nexport class HMSWebrtcStats {\n  private readonly TAG = '[HMSWebrtcStats]';\n  private localPeerID?: string;\n  private peerStats: Record<string, HMSPeerStats> = {};\n  private remoteTrackStats: Record<string, HMSTrackStats> = {};\n  private localTrackStats: Record<string, Record<string, HMSTrackStats>> = {};\n\n  /**\n   * Removed localPeerID check in other places as it will be present before\n   * this is initialized\n   */\n  constructor(\n    private getStats: Record<PeerConnectionType, RTCPeerConnection['getStats'] | undefined>,\n    private store: IStore,\n  ) {\n    this.localPeerID = this.store.getLocalPeer()?.peerId;\n  }\n\n  getLocalPeerStats = (): HMSPeerStats | undefined => {\n    return this.peerStats[this.localPeerID!];\n  };\n\n  getRemoteTrackStats = (trackId: string): HMSTrackStats | undefined => {\n    return this.remoteTrackStats[trackId];\n  };\n\n  getLocalTrackStats = () => {\n    return this.localTrackStats;\n  };\n\n  /**\n   * @internal\n   */\n  updateStats = async () => {\n    await this.updateLocalPeerStats();\n    await this.updateLocalTrackStats();\n    await this.updateRemoteTrackStats();\n  };\n\n  private updateLocalPeerStats = async () => {\n    const prevLocalPeerStats = this.getLocalPeerStats();\n    let publishReport: RTCStatsReport | undefined;\n    try {\n      publishReport = await this.getStats.publish?.();\n    } catch (err) {\n      HMSLogger.w(this.TAG, 'Error in getting publish stats', err);\n    }\n    const publishStats: HMSPeerStats['publish'] | undefined =\n      publishReport && getLocalPeerStatsFromReport('publish', publishReport, prevLocalPeerStats);\n\n    let subscribeReport: RTCStatsReport | undefined;\n    try {\n      subscribeReport = await this.getStats.subscribe?.();\n    } catch (err) {\n      HMSLogger.w(this.TAG, 'Error in getting subscribe stats', err);\n    }\n    const baseSubscribeStats =\n      subscribeReport && getLocalPeerStatsFromReport('subscribe', subscribeReport, prevLocalPeerStats);\n    const { packetsLost, jitter } = getPacketsLostAndJitterFromReport(subscribeReport);\n    const packetsLostRate = computeNumberRate(\n      packetsLost,\n      prevLocalPeerStats?.subscribe?.packetsLost,\n      baseSubscribeStats?.timestamp,\n      prevLocalPeerStats?.subscribe?.timestamp,\n    );\n\n    const subscribeStats: HMSPeerStats['subscribe'] =\n      baseSubscribeStats && Object.assign(baseSubscribeStats, { packetsLostRate, jitter, packetsLost });\n\n    this.peerStats[this.localPeerID!] = { publish: publishStats, subscribe: subscribeStats };\n  };\n\n  private updateRemoteTrackStats = async () => {\n    const tracks = Array.from(this.store.getTracksMap().values()).filter(\n      track => track instanceof HMSRemoteVideoTrack || track instanceof HMSRemoteAudioTrack,\n    );\n    const trackIds = tracks.map(track => track.trackId);\n    Object.keys(this.remoteTrackStats).forEach(trackId => {\n      if (!trackIds.includes(trackId)) {\n        delete this.remoteTrackStats[trackId];\n      }\n    });\n    for (const track of tracks) {\n      const peerName = track.peerId && this.store.getPeerById(track.peerId)?.name;\n      const prevTrackStats = this.getRemoteTrackStats(track.trackId);\n      const trackStats = await getTrackStats(track as HMSRemoteTrack, peerName, prevTrackStats);\n      if (trackStats) {\n        this.remoteTrackStats[track.trackId] = trackStats;\n      }\n    }\n  };\n\n  private updateLocalTrackStats = async () => {\n    const tracks = this.store.getLocalPeerTracks().reduce<Record<string, HMSLocalTrack>>((res, track) => {\n      res[track.getTrackIDBeingSent()] = track;\n      return res;\n    }, {});\n    const trackIDs = union(Object.keys(this.localTrackStats), Object.keys(tracks));\n    for (const trackID of trackIDs) {\n      const track = tracks[trackID] as HMSLocalTrack;\n      if (track) {\n        const peerName = this.store.getLocalPeer()?.name;\n        const trackStats = await getLocalTrackStats(track, peerName, this.localTrackStats[trackID]);\n        if (trackStats) {\n          this.localTrackStats[trackID] = trackStats;\n        }\n      } else {\n        delete this.localTrackStats[trackID];\n      }\n    }\n  };\n}\n","import { HMSWebrtcStats } from './HMSWebrtcStats';\nimport { EventBus } from '../events/EventBus';\nimport { IStore } from '../sdk/store';\nimport { RTC_STATS_MONITOR_INTERVAL } from '../utils/constants';\nimport HMSLogger from '../utils/logger';\nimport { sleep } from '../utils/timer-utils';\n\nexport class HMSWebrtcInternals {\n  private readonly TAG = '[HMSWebrtcInternals]';\n  private readonly interval = RTC_STATS_MONITOR_INTERVAL;\n  private isMonitored = false;\n  private hmsStats?: HMSWebrtcStats;\n\n  constructor(\n    private readonly store: IStore,\n    private readonly eventBus: EventBus,\n    private publishConnection?: RTCPeerConnection,\n    private subscribeConnection?: RTCPeerConnection,\n  ) {}\n\n  getPublishPeerConnection() {\n    return this.publishConnection;\n  }\n\n  getSubscribePeerConnection() {\n    return this.subscribeConnection;\n  }\n\n  getCurrentStats() {\n    return this.hmsStats;\n  }\n\n  onStatsChange(statsChangeCb: (stats: HMSWebrtcStats) => void) {\n    this.eventBus.statsUpdate.subscribe(statsChangeCb);\n    return () => {\n      this.eventBus.statsUpdate.unsubscribe(statsChangeCb);\n    };\n  }\n\n  private handleStatsUpdate = async () => {\n    await this.hmsStats?.updateStats();\n    this.eventBus.statsUpdate.publish(this.hmsStats);\n  };\n\n  /**\n   *\n   * @internal\n   */\n  setPeerConnections({ publish, subscribe }: { publish?: RTCPeerConnection; subscribe?: RTCPeerConnection }) {\n    this.publishConnection = publish;\n    this.subscribeConnection = subscribe;\n\n    this.hmsStats = new HMSWebrtcStats(\n      {\n        publish: this.publishConnection?.getStats.bind(this.publishConnection),\n        subscribe: this.subscribeConnection?.getStats.bind(this.subscribeConnection),\n      },\n      this.store,\n    );\n  }\n\n  /**\n   * @internal\n   */\n  async start() {\n    if (this.isMonitored) {\n      HMSLogger.d(this.TAG, 'Already started');\n      return;\n    }\n    this.stop();\n    this.isMonitored = true;\n    HMSLogger.d(this.TAG, 'Starting Webrtc Stats Monitor');\n    this.startLoop()\n      .then(() => HMSLogger.d(this.TAG, 'Stopping Webrtc Stats Monitor'))\n      .catch(e => HMSLogger.e(this.TAG, e.message));\n  }\n\n  private stop() {\n    this.isMonitored = false;\n  }\n\n  private async startLoop() {\n    while (this.isMonitored) {\n      await this.handleStatsUpdate();\n      await sleep(this.interval);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  cleanUp() {\n    this.stop();\n    this.eventBus.statsUpdate.removeAllListeners();\n  }\n}\n","import { InitConfig } from './models';\nimport { ErrorFactory, HMSAction } from '../../error/ErrorFactory';\nimport HMSLogger from '../../utils/logger';\n\nconst TAG = '[InitService]';\nexport default class InitService {\n  private static handleError(response: Response, body: { code: number; message: string }) {\n    switch (response.status) {\n      case 404:\n        throw ErrorFactory.APIErrors.EndpointUnreachable(HMSAction.INIT, body.message || response.statusText);\n      case 200:\n        break;\n      default:\n        throw ErrorFactory.APIErrors.ServerErrors(\n          body.code || response.status,\n          HMSAction.INIT,\n          body.message || response?.statusText,\n        );\n    }\n  }\n\n  static async fetchInitConfig({\n    token,\n    peerId,\n    userAgent,\n    initEndpoint = 'https://prod-init.100ms.live',\n    region = '',\n  }: {\n    token: string;\n    peerId: string;\n    userAgent: string;\n    initEndpoint?: string;\n    region?: string;\n  }): Promise<InitConfig> {\n    HMSLogger.d(TAG, `fetchInitConfig: initEndpoint=${initEndpoint} token=${token} peerId=${peerId} region=${region} `);\n    const url = getUrl(initEndpoint, peerId, userAgent, region);\n    try {\n      const response = await fetch(url, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n      try {\n        const config = await response.clone().json();\n        this.handleError(response, config);\n        HMSLogger.d(TAG, `config is ${JSON.stringify(config, null, 2)}`);\n        return transformInitConfig(config);\n      } catch (err) {\n        const text = await response.text();\n        HMSLogger.e(TAG, 'json error', (err as Error).message, text);\n        throw ErrorFactory.APIErrors.ServerErrors(response.status, HMSAction.INIT, text);\n      }\n    } catch (err) {\n      const error = err as Error;\n      if (['Failed to fetch', 'NetworkError', 'ECONNRESET'].some(message => error.message.includes(message))) {\n        throw ErrorFactory.APIErrors.EndpointUnreachable(HMSAction.INIT, error.message);\n      }\n      throw error;\n    }\n  }\n}\n\nexport function getUrl(endpoint: string, peerId: string, userAgent: string, region?: string) {\n  try {\n    const url = new URL('/init', endpoint);\n\n    if (region && region.trim().length > 0) {\n      url.searchParams.set('region', region.trim());\n    }\n    url.searchParams.set('peer_id', peerId);\n    url.searchParams.set('user_agent_v2', userAgent);\n    return url.toString();\n  } catch (err) {\n    const error = err as Error;\n    HMSLogger.e(TAG, error.name, error.message);\n    throw error;\n  }\n}\n\nexport function transformInitConfig(config: any): InitConfig {\n  return {\n    ...config,\n    rtcConfiguration: { ...config.rtcConfiguration, iceServers: config.rtcConfiguration?.ice_servers },\n  };\n}\n","/**\n * Thresholds for the network quality scores in kbps.\n * ex: { 1: { low: 300, high: 400 }}\n */\nexport type ScoreMap = Record<\n  number,\n  {\n    low: number;\n    high?: number;\n  }\n>;\n\n/**\n * Informantion necessary to test network quality. it provides a url to be\n * downloaded and timeout for the url download. And also the scores to be\n * assigned based on the downloaded data and time.\n */\nexport interface NetworkHealth {\n  url: string;\n  timeout: number;\n  scoreMap: ScoreMap;\n}\nexport interface InitConfig {\n  readonly endpoint: string;\n  readonly log_level: string;\n  readonly policy: string;\n  readonly rtcConfiguration: RTCConfiguration;\n  readonly pingTimeout?: number;\n  readonly config: {\n    readonly enabledFlags?: Array<InitFlags>;\n    readonly networkHealth: NetworkHealth;\n  };\n}\n\nexport enum InitFlags {\n  FLAG_SERVER_SUB_DEGRADATION = 'subscribeDegradation',\n  FLAG_SERVER_SIMULCAST = 'simulcast',\n  FLAG_NON_WEBRTC_DISABLE_OFFER = 'nonWebRTCDisableOffer',\n}\n","import { v4 as uuid } from 'uuid';\nimport { convertSignalMethodtoErrorAction, HMSSignalMethod, JsonRpcRequest, JsonRpcResponse } from './models';\nimport AnalyticsEvent from '../../analytics/AnalyticsEvent';\nimport { HMSConnectionRole, HMSTrickle } from '../../connection/model';\nimport { ErrorFactory, HMSAction } from '../../error/ErrorFactory';\nimport { HMSException } from '../../error/HMSException';\nimport Message from '../../sdk/models/HMSMessage';\nimport {\n  DEFAULT_SIGNAL_PING_INTERVAL,\n  DEFAULT_SIGNAL_PING_TIMEOUT,\n  PONG_RESPONSE_TIMES_SIZE,\n} from '../../utils/constants';\nimport HMSLogger from '../../utils/logger';\nimport { PromiseCallbacks } from '../../utils/promise';\nimport { Queue } from '../../utils/queue';\nimport { isPageHidden } from '../../utils/support';\nimport { sleep } from '../../utils/timer-utils';\nimport {\n  AcceptRoleChangeParams,\n  BroadcastResponse,\n  GetSessionMetadataResponse,\n  HLSRequestParams,\n  HLSTimedMetadataParams,\n  MultiTrackUpdateRequestParams,\n  RemovePeerRequest,\n  RequestForBulkRoleChangeParams,\n  RequestForRoleChangeParams,\n  SetSessionMetadataParams,\n  SetSessionMetadataResponse,\n  StartRTMPOrRecordingRequestParams,\n  Track,\n  TrackUpdateRequestParams,\n  UpdatePeerRequestParams,\n} from '../interfaces';\nimport { ISignal } from '../ISignal';\nimport { ISignalEventsObserver } from '../ISignalEventsObserver';\n\nexport default class JsonRpcSignal implements ISignal {\n  readonly TAG = '[SIGNAL]: ';\n  readonly observer: ISignalEventsObserver;\n  readonly pongResponseTimes = new Queue<number>(PONG_RESPONSE_TIMES_SIZE);\n\n  /**\n   * Sometimes before [join] is completed, there could be a lot of trickles\n   * Sending [HMSTrickle]` before [join] web socket message leads to\n   * error: [500] no rtc transport exists for this Peer\n   *\n   * We keep a list of pending trickles and send them immediately after [join]\n   * is done.\n   */\n  private isJoinCompleted = false;\n  private pendingTrickle: Array<HMSTrickle> = [];\n\n  private socket: WebSocket | null = null;\n\n  private callbacks = new Map<string, PromiseCallbacks<string, { method: HMSSignalMethod }>>();\n\n  private _isConnected = false;\n  private id = 0;\n\n  private onCloseHandler: (event: CloseEvent) => void = () => {};\n\n  public get isConnected(): boolean {\n    return this._isConnected;\n  }\n\n  public setIsConnected(newValue: boolean, reason = '') {\n    HMSLogger.d(this.TAG, `isConnected set id: ${this.id}, oldValue: ${this._isConnected}, newValue: ${newValue}`);\n    if (this._isConnected === newValue) {\n      return;\n    }\n\n    if (this._isConnected && !newValue) {\n      // went offline\n      this._isConnected = newValue;\n      this.rejectPendingCalls(reason);\n      this.observer.onOffline(reason);\n    } else if (!this._isConnected && newValue) {\n      // went online\n      this._isConnected = newValue;\n      this.observer.onOnline();\n    }\n  }\n\n  constructor(observer: ISignalEventsObserver) {\n    this.observer = observer;\n    window.addEventListener('offline', this.offlineListener);\n    window.addEventListener('online', this.onlineListener);\n\n    this.onMessageHandler = this.onMessageHandler.bind(this);\n  }\n\n  getPongResponseTimes() {\n    return this.pongResponseTimes.toList();\n  }\n\n  private async internalCall<T>(method: string, params: any): Promise<T> {\n    const id = uuid();\n    const message = { method, params, id, jsonrpc: '2.0' } as JsonRpcRequest;\n\n    this.socket?.send(JSON.stringify(message));\n\n    try {\n      const response = await new Promise<any>((resolve, reject) => {\n        this.callbacks.set(id, { resolve, reject, metadata: { method: method as HMSSignalMethod } });\n      });\n\n      return response;\n    } catch (ex) {\n      if (ex instanceof HMSException) {\n        throw ex;\n      }\n\n      const error = ex as JsonRpcResponse['error'];\n      throw ErrorFactory.WebsocketMethodErrors.ServerErrors(\n        Number(error.code),\n        convertSignalMethodtoErrorAction(method as HMSSignalMethod),\n        error.message,\n      );\n    }\n  }\n\n  private notify(method: string, params: any) {\n    const message = { method, params };\n\n    if (this.socket?.readyState === WebSocket.OPEN) {\n      this.socket?.send(JSON.stringify(message));\n    }\n  }\n\n  open(uri: string): Promise<void> {\n    return new Promise((resolve, reject) => {\n      let promiseSettled = false;\n      // cleanup\n      if (this.socket) {\n        this.socket.close();\n        this.socket.removeEventListener('close', this.onCloseHandler);\n        this.socket.removeEventListener('message', this.onMessageHandler);\n      }\n\n      this.socket = new WebSocket(uri); // @DISCUSS: Inject WebSocket as a dependency so that it can be easier to mock and test\n\n      const errorListener = (error: Event) => {\n        /**\n         * there was an error received from websocket leading to disconnection, this can happen either if server\n         * disconnects the websocket for some reason, there is a network disconnect or a firewall/antivirus on user's\n         * device is breaking the websocket connecting(which can happen even after a successful connect).\n         */\n        HMSLogger.e(this.TAG, 'Error from websocket', error);\n        promiseSettled = true;\n        // above error does not contain any description hence not sent here\n        reject(\n          ErrorFactory.WebSocketConnectionErrors.FailedToConnect(HMSAction.JOIN, `Error opening websocket connection`),\n        );\n      };\n\n      this.onCloseHandler = (event: CloseEvent) => {\n        HMSLogger.e(`Websocket closed code=${event.code}`);\n        if (promiseSettled) {\n          this.setIsConnected(false, `code: ${event.code}${event.code !== 1000 ? ', unexpected websocket close' : ''}`);\n        } else {\n          promiseSettled = true;\n          reject(\n            ErrorFactory.WebSocketConnectionErrors.AbnormalClose(\n              HMSAction.JOIN,\n              `Error opening websocket connection - websocket closed unexpectedly with code=${event.code}`,\n            ),\n          );\n        }\n      };\n\n      this.socket.addEventListener('error', errorListener);\n\n      const openHandler = () => {\n        promiseSettled = true;\n        resolve();\n        this.setIsConnected(true);\n        this.id++;\n        this.socket?.removeEventListener('open', openHandler);\n        this.socket?.removeEventListener('error', errorListener);\n        this.pingPongLoop(this.id);\n      };\n\n      this.socket.addEventListener('open', openHandler);\n      this.socket.addEventListener('close', this.onCloseHandler);\n      this.socket.addEventListener('message', this.onMessageHandler);\n    });\n  }\n\n  async close(): Promise<void> {\n    window.removeEventListener('offline', this.offlineListener);\n    window.removeEventListener('online', this.onlineListener);\n\n    // For `1000` Refer: https://tools.ietf.org/html/rfc6455#section-7.4.1\n    if (this.socket) {\n      this.socket.close(1000, 'Normal Close');\n      this.setIsConnected(false, 'code: 1000, normal websocket close');\n      this.socket.removeEventListener('close', this.onCloseHandler);\n      this.socket.removeEventListener('message', this.onMessageHandler);\n    } else {\n      this.setIsConnected(false, 'websocket not connected yet');\n    }\n  }\n\n  async join(\n    name: string,\n    data: string,\n    disableVidAutoSub: boolean,\n    serverSubDegrade: boolean,\n    simulcast: boolean,\n    offer?: RTCSessionDescriptionInit,\n  ): Promise<RTCSessionDescriptionInit> {\n    if (!this.isConnected) {\n      throw ErrorFactory.WebSocketConnectionErrors.WebSocketConnectionLost(\n        HMSAction.JOIN,\n        'Failed to send join over WS connection',\n      );\n    }\n    const params = { name, disableVidAutoSub, data, offer, server_sub_degrade: serverSubDegrade, simulcast };\n    const response: RTCSessionDescriptionInit = await this.internalCall(HMSSignalMethod.JOIN, params);\n\n    this.isJoinCompleted = true;\n    this.pendingTrickle.forEach(({ target, candidate }) => this.trickle(target, candidate));\n    this.pendingTrickle.length = 0;\n\n    HMSLogger.d(this.TAG, `join: response=${JSON.stringify(response, null, 1)}`);\n    return response;\n  }\n\n  trickle(target: HMSConnectionRole, candidate: RTCIceCandidateInit) {\n    if (this.isJoinCompleted) {\n      this.notify(HMSSignalMethod.TRICKLE, { target, candidate });\n    } else {\n      this.pendingTrickle.push({ target, candidate });\n    }\n  }\n\n  async offer(desc: RTCSessionDescriptionInit, tracks: Map<string, any>): Promise<RTCSessionDescriptionInit> {\n    const response = await this.call(HMSSignalMethod.OFFER, {\n      desc,\n      tracks: Object.fromEntries(tracks),\n    });\n    return response as RTCSessionDescriptionInit;\n  }\n\n  answer(desc: RTCSessionDescriptionInit) {\n    this.notify(HMSSignalMethod.ANSWER, { desc });\n  }\n\n  trackUpdate(tracks: Map<string, Track>) {\n    this.notify(HMSSignalMethod.TRACK_UPDATE, { version: '1.0', tracks: Object.fromEntries(tracks) });\n  }\n\n  async broadcast(message: Message) {\n    return await this.call<BroadcastResponse>(HMSSignalMethod.BROADCAST, {\n      version: '1.0',\n      ...message.toSignalParams(),\n    });\n  }\n\n  leave() {\n    this.notify(HMSSignalMethod.LEAVE, { version: '1.0' });\n  }\n\n  async endRoom(lock: boolean, reason: string) {\n    await this.call(HMSSignalMethod.END_ROOM, { lock, reason });\n  }\n\n  sendEvent(event: AnalyticsEvent) {\n    if (!this.isConnected) {\n      throw Error(`${this.TAG} not connected. Could not send event ${event}`);\n    }\n    this.notify(HMSSignalMethod.ANALYTICS, event.toSignalParams());\n  }\n\n  ping(timeout: number): Promise<number> {\n    const pingTime = Date.now();\n    const timer: Promise<number> = new Promise(resolve => {\n      setTimeout(() => {\n        resolve(Date.now() - pingTime);\n      }, timeout + 1);\n    });\n    const pongTimeDiff = this.internalCall(HMSSignalMethod.PING, { timestamp: pingTime })\n      .then(() => Date.now() - pingTime)\n      .catch(() => Date.now() - pingTime);\n\n    return Promise.race([timer, pongTimeDiff]);\n  }\n\n  async requestRoleChange(params: RequestForRoleChangeParams) {\n    await this.call(HMSSignalMethod.ROLE_CHANGE_REQUEST, params);\n  }\n\n  async requestBulkRoleChange(params: RequestForBulkRoleChangeParams) {\n    await this.call(HMSSignalMethod.ROLE_CHANGE_REQUEST, params);\n  }\n\n  async acceptRoleChangeRequest(params: AcceptRoleChangeParams) {\n    await this.call(HMSSignalMethod.ROLE_CHANGE, params);\n  }\n\n  async requestTrackStateChange(params: TrackUpdateRequestParams) {\n    await this.call(HMSSignalMethod.TRACK_UPDATE_REQUEST, params);\n  }\n\n  async requestMultiTrackStateChange(params: MultiTrackUpdateRequestParams) {\n    await this.call(HMSSignalMethod.CHANGE_TRACK_MUTE_STATE_REQUEST, params);\n  }\n\n  async removePeer(params: RemovePeerRequest) {\n    await this.call(HMSSignalMethod.PEER_LEAVE_REQUEST, params);\n  }\n\n  async startRTMPOrRecording(params: StartRTMPOrRecordingRequestParams) {\n    await this.call(HMSSignalMethod.START_RTMP_OR_RECORDING_REQUEST, { version: '1.0', ...params });\n  }\n\n  async stopRTMPAndRecording() {\n    await this.call(HMSSignalMethod.STOP_RTMP_AND_RECORDING_REQUEST, { version: '1.0' });\n  }\n\n  async startHLSStreaming(params: HLSRequestParams): Promise<void> {\n    await this.call(HMSSignalMethod.START_HLS_STREAMING, { version: '1.0', ...params });\n  }\n\n  async stopHLSStreaming(params?: HLSRequestParams): Promise<void> {\n    await this.call(HMSSignalMethod.STOP_HLS_STREAMING, { version: '1.0', ...params });\n  }\n\n  async sendHLSTimedMetadata(params?: HLSTimedMetadataParams): Promise<void> {\n    await this.call(HMSSignalMethod.HLS_TIMED_METADATA, { version: '1.0', ...params });\n  }\n\n  async updatePeer(params: UpdatePeerRequestParams) {\n    await this.call(HMSSignalMethod.UPDATE_PEER_METADATA, { version: '1.0', ...params });\n  }\n\n  setSessionMetadata(params: SetSessionMetadataParams) {\n    if (!this.isConnected) {\n      throw ErrorFactory.WebSocketConnectionErrors.WebSocketConnectionLost(\n        HMSAction.RECONNECT_SIGNAL,\n        'Failed to set session store value due to network disconnection',\n      );\n    }\n    return this.call<SetSessionMetadataResponse>(HMSSignalMethod.SET_METADATA, { version: '1.1', ...params });\n  }\n\n  listenMetadataChange(keys: string[]): Promise<void> {\n    if (!this.isConnected) {\n      throw ErrorFactory.WebSocketConnectionErrors.WebSocketConnectionLost(\n        HMSAction.RECONNECT_SIGNAL,\n        'Failed to observe session store key due to network disconnection',\n      );\n    }\n    return this.call(HMSSignalMethod.LISTEN_METADATA_CHANGE, { version: '1.1', keys });\n  }\n\n  getSessionMetadata(key?: string) {\n    if (!this.isConnected) {\n      throw ErrorFactory.WebSocketConnectionErrors.WebSocketConnectionLost(\n        HMSAction.RECONNECT_SIGNAL,\n        'Failed to set session store value due to network disconnection',\n      );\n    }\n    return this.call<GetSessionMetadataResponse>(HMSSignalMethod.GET_METADATA, { key, version: '1.1' });\n  }\n\n  private onMessageHandler(event: MessageEvent) {\n    const text: string = event.data;\n    const response = JSON.parse(text);\n    this.resolvePingOnAnyResponse();\n    if (response.id) {\n      this.handleResponseWithId(response);\n    } else if (response.method) {\n      this.handleResponseWithMethod(response);\n    } else {\n      throw Error(`WebSocket message has no 'method' or 'id' field, message=${response}`);\n    }\n  }\n\n  private handleResponseWithId(response: any) {\n    /** This is a response to [call] */\n    const typedResponse = response as JsonRpcResponse;\n    const id: string = typedResponse.id;\n    if (this.callbacks.has(id)) {\n      const cb = this.callbacks.get(id)!;\n      this.callbacks.delete(id);\n      if (typedResponse.result) {\n        cb.resolve(typedResponse.result);\n      } else {\n        cb.reject(typedResponse.error);\n      }\n    } else {\n      this.observer.onNotification(typedResponse);\n    }\n  }\n\n  private handleResponseWithMethod(response: any) {\n    switch (response.method) {\n      case HMSSignalMethod.OFFER:\n        this.observer.onOffer(response.params);\n        break;\n      case HMSSignalMethod.TRICKLE:\n        this.observer.onTrickle(response.params);\n        break;\n      case HMSSignalMethod.SERVER_ERROR:\n        this.observer.onServerError(\n          ErrorFactory.WebsocketMethodErrors.ServerErrors(\n            Number(response.params.code),\n            HMSAction.NONE,\n            response.params.message,\n          ),\n        );\n        break;\n      case HMSSignalMethod.SERVER_WARNING:\n        HMSLogger.w(this.TAG, response.params);\n        break;\n      default:\n        this.observer.onNotification(response);\n        break;\n    }\n  }\n\n  private resolvePingOnAnyResponse = () => {\n    this.callbacks.forEach((callback, key) => {\n      if (callback.metadata?.method === HMSSignalMethod.PING) {\n        //@ts-ignore\n        callback.resolve({ timestamp: Date.now() });\n        this.callbacks.delete(key);\n      }\n    });\n  };\n\n  private rejectPendingCalls(reason = '') {\n    this.callbacks.forEach((callback, id) => {\n      if (callback.metadata?.method !== HMSSignalMethod.PING) {\n        HMSLogger.e(this.TAG, `rejecting pending callback ${callback.metadata?.method}, id=${id}`);\n        callback.reject(\n          ErrorFactory.WebSocketConnectionErrors.WebSocketConnectionLost(\n            callback.metadata?.method\n              ? convertSignalMethodtoErrorAction(callback.metadata?.method)\n              : HMSAction.RECONNECT_SIGNAL,\n            reason,\n          ),\n        );\n        this.callbacks.delete(id);\n      }\n    });\n  }\n\n  private async pingPongLoop(id: number) {\n    const pingTimeout = window.HMS?.PING_TIMEOUT || DEFAULT_SIGNAL_PING_TIMEOUT;\n    if (this.isConnected) {\n      const pongTimeDiff = await this.ping(pingTimeout);\n      this.pongResponseTimes.enqueue(pongTimeDiff);\n      if (pongTimeDiff > pingTimeout) {\n        HMSLogger.d(this.TAG, `Pong timeout ${id}, pageHidden=${isPageHidden()}`);\n        if (this.id === id) {\n          this.setIsConnected(false, 'ping pong failure');\n        }\n      } else {\n        setTimeout(() => this.pingPongLoop(id), window.HMS?.PING_INTERVAL || DEFAULT_SIGNAL_PING_INTERVAL);\n      }\n    }\n  }\n\n  private async call<T>(method: HMSSignalMethod, params: Record<string, any>): Promise<T> {\n    const MAX_RETRIES = 3;\n    let error: HMSException = ErrorFactory.WebsocketMethodErrors.ServerErrors(500, method, `Default ${method} error`);\n\n    let retry;\n    for (retry = 1; retry <= MAX_RETRIES; retry++) {\n      try {\n        HMSLogger.d(this.TAG, `Try number ${retry} sending ${method}`, params);\n        return await this.internalCall(method, params);\n      } catch (err) {\n        error = err as HMSException;\n        HMSLogger.e(this.TAG, `Failed sending ${method} try: ${retry}`, { method, params, error });\n        const shouldRetry = parseInt(`${error.code / 100}`) === 5 || error.code === 429;\n        if (!shouldRetry) {\n          break;\n        }\n\n        const delay = (2 + Math.random() * 2) * 1000;\n        await sleep(delay);\n      }\n    }\n    HMSLogger.e(`Sending ${method} over WS failed after ${Math.min(retry, MAX_RETRIES)} retries`, {\n      method,\n      params,\n      error,\n    });\n    throw error;\n  }\n\n  private offlineListener = () => {\n    HMSLogger.d(this.TAG, 'Window network offline');\n    this.setIsConnected(false, 'Window network offline');\n  };\n\n  private onlineListener = () => {\n    HMSLogger.d(this.TAG, 'Window network online');\n    this.observer.onNetworkOnline();\n  };\n}\n","// @ts-nocheck\nimport { isBrowser } from './support';\n\nexport const getNetworkInfo = () => {\n  if (!isBrowser || typeof navigator.connection === 'undefined') {\n    return;\n  }\n\n  const connection = navigator.connection;\n  const networkInfo = {\n    downlink: connection.downlink,\n    downlinkMax: connection.downlinkMax,\n    effectiveType: connection.effectiveType,\n    rtt: connection.rtt,\n    saveData: connection.saveData,\n    type: connection.type,\n  };\n  return networkInfo;\n};\n","import { JoinParameters } from './models/JoinParameters';\nimport { TransportFailureCategory } from './models/TransportFailureCategory';\nimport { TransportState } from './models/TransportState';\nimport ITransport from './ITransport';\nimport ITransportObserver from './ITransportObserver';\nimport { RetryScheduler } from './RetryScheduler';\nimport { AdditionalAnalyticsProperties } from '../analytics/AdditionalAnalyticsProperties';\nimport AnalyticsEvent from '../analytics/AnalyticsEvent';\nimport AnalyticsEventFactory from '../analytics/AnalyticsEventFactory';\nimport { AnalyticsEventsService } from '../analytics/AnalyticsEventsService';\nimport { AnalyticsTimer, TimedEvent } from '../analytics/AnalyticsTimer';\nimport { HTTPAnalyticsTransport } from '../analytics/HTTPAnalyticsTransport';\nimport { SignalAnalyticsTransport } from '../analytics/signal-transport/SignalAnalyticsTransport';\nimport { HMSConnectionRole, HMSTrickle } from '../connection/model';\nimport { IPublishConnectionObserver } from '../connection/publish/IPublishConnectionObserver';\nimport HMSPublishConnection from '../connection/publish/publishConnection';\nimport ISubscribeConnectionObserver from '../connection/subscribe/ISubscribeConnectionObserver';\nimport HMSSubscribeConnection from '../connection/subscribe/subscribeConnection';\nimport { DeviceManager } from '../device-manager';\nimport { ErrorCodes } from '../error/ErrorCodes';\nimport { ErrorFactory, HMSAction } from '../error/ErrorFactory';\nimport { HMSException } from '../error/HMSException';\nimport { EventBus } from '../events/EventBus';\nimport { HLSConfig, HLSTimedMetadata, HMSPeer, HMSRole, HMSRoleChangeRequest } from '../interfaces';\nimport { RTMPRecordingConfig } from '../interfaces/rtmp-recording-config';\nimport HMSLocalStream from '../media/streams/HMSLocalStream';\nimport { HMSLocalTrack, HMSLocalVideoTrack, HMSTrack } from '../media/tracks';\nimport { TrackState } from '../notification-manager';\nimport { HMSWebrtcInternals } from '../rtc-stats/HMSWebrtcInternals';\nimport Message from '../sdk/models/HMSMessage';\nimport { IStore } from '../sdk/store';\nimport InitService from '../signal/init';\nimport { InitConfig, InitFlags } from '../signal/init/models';\nimport {\n  HLSRequestParams,\n  HLSTimedMetadataParams,\n  HLSVariant,\n  MultiTrackUpdateRequestParams,\n  SetSessionMetadataParams,\n  StartRTMPOrRecordingRequestParams,\n  TrackUpdateRequestParams,\n} from '../signal/interfaces';\nimport { ISignal } from '../signal/ISignal';\nimport { ISignalEventsObserver } from '../signal/ISignalEventsObserver';\nimport JsonRpcSignal from '../signal/jsonrpc';\nimport {\n  ICE_DISCONNECTION_TIMEOUT,\n  MAX_TRANSPORT_RETRIES,\n  RENEGOTIATION_CALLBACK_ID,\n  SUBSCRIBE_ICE_CONNECTION_CALLBACK_ID,\n  SUBSCRIBE_TIMEOUT,\n} from '../utils/constants';\nimport HMSLogger from '../utils/logger';\nimport { getNetworkInfo } from '../utils/network-info';\nimport { PromiseCallbacks } from '../utils/promise';\n\nconst TAG = '[HMSTransport]:';\n\n// @DISCUSS: action and extra are not used at all.\ninterface CallbackTriple {\n  promise: PromiseCallbacks<boolean>;\n  action: HMSAction;\n  extra: any;\n}\n\ninterface NegotiateJoinParams {\n  name: string;\n  data: string;\n  autoSubscribeVideo: boolean;\n}\n\nexport default class HMSTransport implements ITransport {\n  private state: TransportState = TransportState.Disconnected;\n  private trackStates: Map<string, TrackState> = new Map();\n  private publishConnection: HMSPublishConnection | null = null;\n  private subscribeConnection: HMSSubscribeConnection | null = null;\n  private initConfig?: InitConfig;\n  private endpoint!: string;\n  private joinParameters?: JoinParameters;\n  private retryScheduler: RetryScheduler;\n  private webrtcInternals?: HMSWebrtcInternals;\n  private maxSubscribeBitrate = 0;\n  joinRetryCount = 0;\n\n  constructor(\n    private observer: ITransportObserver,\n    private deviceManager: DeviceManager,\n    private store: IStore,\n    private eventBus: EventBus,\n    private analyticsEventsService: AnalyticsEventsService,\n    private analyticsTimer: AnalyticsTimer,\n  ) {\n    this.webrtcInternals = new HMSWebrtcInternals(\n      this.store,\n      this.eventBus,\n      this.publishConnection?.nativeConnection,\n      this.subscribeConnection?.nativeConnection,\n    );\n\n    const onStateChange = async (state: TransportState, error?: HMSException) => {\n      if (state !== this.state) {\n        this.state = state;\n        await this.observer.onStateChange(this.state, error);\n      }\n    };\n    this.retryScheduler = new RetryScheduler(onStateChange, this.sendErrorAnalyticsEvent.bind(this));\n\n    this.eventBus.statsUpdate.subscribe(stats => {\n      const currentSubscribeBitrate = stats.getLocalPeerStats()?.subscribe?.bitrate || 0;\n      this.maxSubscribeBitrate = Math.max(this.maxSubscribeBitrate, currentSubscribeBitrate);\n    });\n\n    this.eventBus.localAudioEnabled.subscribe(({ track }) => this.trackUpdate(track));\n    this.eventBus.localVideoEnabled.subscribe(({ track }) => this.trackUpdate(track));\n  }\n\n  /**\n   * Map of callbacks used to wait for an event to fire.\n   * Used here for:\n   *  1. publish/unpublish waits for [IPublishConnectionObserver.onRenegotiationNeeded] to complete\n   */\n  private readonly callbacks = new Map<string, CallbackTriple>();\n\n  private signalObserver: ISignalEventsObserver = {\n    onOffer: async (jsep: RTCSessionDescriptionInit) => {\n      try {\n        if (!this.subscribeConnection) {\n          return;\n        }\n        await this.subscribeConnection.setRemoteDescription(jsep);\n        HMSLogger.d(\n          TAG,\n          `[SUBSCRIBE] Adding ${this.subscribeConnection.candidates.length} ice-candidates`,\n          this.subscribeConnection.candidates,\n        );\n        for (const candidate of this.subscribeConnection.candidates) {\n          await this.subscribeConnection.addIceCandidate(candidate);\n        }\n        this.subscribeConnection.candidates.length = 0;\n        const answer = await this.subscribeConnection.createAnswer();\n        await this.subscribeConnection.setLocalDescription(answer);\n        this.signal.answer(answer);\n        HMSLogger.d(TAG, '[role=SUBSCRIBE] onOffer renegotiation DONE ✅');\n      } catch (err) {\n        HMSLogger.d(TAG, '[role=SUBSCRIBE] onOffer renegotiation FAILED ❌', err);\n        this.state = TransportState.Failed;\n        let ex: HMSException;\n        if (err instanceof HMSException) {\n          ex = err;\n        } else {\n          ex = ErrorFactory.GenericErrors.Unknown(HMSAction.PUBLISH, (err as Error).message);\n        }\n        this.observer.onFailure(ex);\n        this.eventBus.analytics.publish(AnalyticsEventFactory.subscribeFail(ex));\n      }\n    },\n\n    onTrickle: async (trickle: HMSTrickle) => {\n      const connection =\n        trickle.target === HMSConnectionRole.Publish ? this.publishConnection : this.subscribeConnection;\n      if (!connection?.remoteDescription) {\n        // ICE candidates can't be added without any remote session description\n        connection?.candidates.push(trickle.candidate);\n      } else {\n        await connection.addIceCandidate(trickle.candidate);\n      }\n    },\n\n    onNotification: (message: any) => this.observer.onNotification(message),\n\n    onServerError: async (error: HMSException) => {\n      await this.observer.onStateChange(TransportState.Failed, error);\n    },\n\n    onFailure: (error: HMSException) => {\n      // @DISCUSS: Should we remove this? Pong failure would have already scheduled signal retry.\n      if (this.joinParameters) {\n        this.retryScheduler.schedule({\n          category: TransportFailureCategory.SignalDisconnect,\n          error,\n          task: this.retrySignalDisconnectTask,\n          originalState: this.state,\n        });\n      }\n    },\n\n    onOffline: async (reason: string) => {\n      HMSLogger.d(TAG, 'socket offline', TransportState[this.state]);\n      try {\n        if (this.state !== TransportState.Leaving && this.joinParameters) {\n          this.retryScheduler.schedule({\n            category: TransportFailureCategory.SignalDisconnect,\n            error: ErrorFactory.WebSocketConnectionErrors.WebSocketConnectionLost(HMSAction.RECONNECT_SIGNAL, reason),\n            task: this.retrySignalDisconnectTask,\n            originalState: this.state,\n          });\n        }\n      } catch (e) {\n        console.error(e);\n      }\n    },\n\n    // this is called when socket connection is successful\n    onOnline: () => {\n      HMSLogger.d(TAG, 'socket online', TransportState[this.state]);\n      this.analyticsSignalTransport.flushFailedEvents(this.store.getLocalPeer()?.peerId);\n    },\n    // this is called when window.online event is triggered\n    onNetworkOnline: () => {\n      this.analyticsEventsService.flushFailedClientEvents();\n    },\n  };\n\n  private signal: ISignal = new JsonRpcSignal(this.signalObserver);\n  private analyticsSignalTransport = new SignalAnalyticsTransport(this.signal);\n\n  private publishConnectionObserver: IPublishConnectionObserver = {\n    onRenegotiationNeeded: async () => {\n      await this.performPublishRenegotiation();\n    },\n\n    onIceConnectionChange: async (newState: RTCIceConnectionState) => {\n      const log = newState === 'disconnected' ? HMSLogger.w.bind(HMSLogger) : HMSLogger.d.bind(HMSLogger);\n      log(TAG, `Publish ice connection state change: ${newState}`);\n\n      // @TODO: Uncomment this and remove connectionstatechange\n      if (newState === 'failed') {\n        // await this.handleIceConnectionFailure(HMSConnectionRole.Publish);\n      }\n    },\n\n    // @TODO(eswar): Remove this. Use iceconnectionstate change with interval and threshold.\n    onConnectionStateChange: async (newState: RTCPeerConnectionState) => {\n      const log = newState === 'disconnected' ? HMSLogger.w.bind(HMSLogger) : HMSLogger.d.bind(HMSLogger);\n      log(TAG, `Publish connection state change: ${newState}`);\n\n      if (newState === 'connected') {\n        this.publishConnection?.logSelectedIceCandidatePairs();\n      }\n\n      if (newState === 'disconnected') {\n        // if state stays disconnected for 5 seconds, retry\n        setTimeout(() => {\n          if (this.publishConnection?.connectionState === 'disconnected') {\n            this.handleIceConnectionFailure(\n              HMSConnectionRole.Publish,\n              ErrorFactory.WebrtcErrors.ICEDisconnected(\n                HMSAction.PUBLISH,\n                `local candidate - ${this.publishConnection?.selectedCandidatePair?.local.candidate}; remote candidate - ${this.publishConnection?.selectedCandidatePair?.remote.candidate}`,\n              ),\n            );\n          }\n        }, ICE_DISCONNECTION_TIMEOUT);\n      }\n\n      if (newState === 'failed') {\n        await this.handleIceConnectionFailure(\n          HMSConnectionRole.Publish,\n          ErrorFactory.WebrtcErrors.ICEFailure(\n            HMSAction.PUBLISH,\n            `local candidate - ${this.publishConnection?.selectedCandidatePair?.local.candidate}; remote candidate - ${this.publishConnection?.selectedCandidatePair?.remote.candidate}`,\n          ),\n        );\n      }\n    },\n  };\n\n  private subscribeConnectionObserver: ISubscribeConnectionObserver = {\n    onApiChannelMessage: (message: string) => {\n      this.observer.onNotification(JSON.parse(message));\n    },\n\n    onTrackAdd: (track: HMSTrack) => {\n      HMSLogger.d(TAG, '[Subscribe] onTrackAdd', `${track}`);\n      this.observer.onTrackAdd(track);\n    },\n\n    onTrackRemove: (track: HMSTrack) => {\n      HMSLogger.d(TAG, '[Subscribe] onTrackRemove', `${track}`);\n      this.observer.onTrackRemove(track);\n    },\n\n    onIceConnectionChange: async (newState: RTCIceConnectionState) => {\n      const log = newState === 'disconnected' ? HMSLogger.w.bind(HMSLogger) : HMSLogger.d.bind(HMSLogger);\n      log(TAG, `Subscribe ice connection state change: ${newState}`);\n\n      if (newState === 'failed') {\n        // await this.handleIceConnectionFailure(HMSConnectionRole.Subscribe);\n      }\n\n      if (newState === 'connected') {\n        const callback = this.callbacks.get(SUBSCRIBE_ICE_CONNECTION_CALLBACK_ID);\n        this.callbacks.delete(SUBSCRIBE_ICE_CONNECTION_CALLBACK_ID);\n\n        if (callback) {\n          callback.promise.resolve(true);\n        }\n      }\n    },\n\n    // @TODO(eswar): Remove this. Use iceconnectionstate change with interval and threshold.\n    onConnectionStateChange: async (newState: RTCPeerConnectionState) => {\n      const log = newState === 'disconnected' ? HMSLogger.w.bind(HMSLogger) : HMSLogger.d.bind(HMSLogger);\n      log(TAG, `Subscribe connection state change: ${newState}`);\n\n      if (newState === 'failed') {\n        await this.handleIceConnectionFailure(\n          HMSConnectionRole.Subscribe,\n          ErrorFactory.WebrtcErrors.ICEFailure(\n            HMSAction.SUBSCRIBE,\n            `local candidate - ${this.subscribeConnection?.selectedCandidatePair?.local.candidate}; remote candidate - ${this.subscribeConnection?.selectedCandidatePair?.remote.candidate}`,\n          ),\n        );\n      }\n\n      if (newState === 'disconnected') {\n        setTimeout(() => {\n          if (this.subscribeConnection?.connectionState === 'disconnected') {\n            this.handleIceConnectionFailure(\n              HMSConnectionRole.Subscribe,\n              ErrorFactory.WebrtcErrors.ICEDisconnected(\n                HMSAction.SUBSCRIBE,\n                `local candidate - ${this.subscribeConnection?.selectedCandidatePair?.local.candidate}; remote candidate - ${this.subscribeConnection?.selectedCandidatePair?.remote.candidate}`,\n              ),\n            );\n          }\n        }, ICE_DISCONNECTION_TIMEOUT);\n      }\n\n      if (newState === 'connected') {\n        this.handleSubscribeConnectionConnected();\n      }\n    },\n  };\n\n  getWebrtcInternals() {\n    return this.webrtcInternals;\n  }\n\n  isFlagEnabled(flag: InitFlags) {\n    const config = this.initConfig?.config;\n    const flags = config?.enabledFlags || [];\n    return flags.includes(flag);\n  }\n\n  async preview(\n    token: string,\n    endpoint: string,\n    peerId: string,\n    customData: { name: string; metaData: string },\n    autoSubscribeVideo = false,\n  ): Promise<InitConfig | void> {\n    const initConfig = await this.connect(token, endpoint, peerId, customData, autoSubscribeVideo);\n    this.state = TransportState.Preview;\n    this.observer.onStateChange(this.state);\n    return initConfig;\n  }\n\n  async join(\n    authToken: string,\n    peerId: string,\n    customData: { name: string; metaData: string },\n    initEndpoint: string,\n    autoSubscribeVideo = false,\n  ): Promise<void> {\n    HMSLogger.d(TAG, 'join: started ⏰');\n    try {\n      if (!this.signal.isConnected || !this.initConfig) {\n        await this.connect(authToken, initEndpoint, peerId, customData, autoSubscribeVideo);\n      }\n\n      this.validateNotDisconnected('connect');\n\n      if (this.initConfig) {\n        await this.waitForLocalRoleAvailability();\n        await this.createConnectionsAndNegotiateJoin(customData, autoSubscribeVideo);\n        await this.initRtcStatsMonitor();\n\n        HMSLogger.d(TAG, '✅ join: Negotiated over PUBLISH connection');\n      }\n    } catch (error) {\n      HMSLogger.e(TAG, `join: failed ❌ [token=${authToken}]`, error);\n      this.state = TransportState.Failed;\n      const ex = error as HMSException;\n      // set isTerminal to true if not already when error code is 500(internal biz server error)\n      ex.isTerminal = ex.isTerminal || ex.code === 500;\n      await this.observer.onStateChange(this.state, ex);\n      throw ex;\n    }\n\n    HMSLogger.i(TAG, '✅ join: successful');\n    this.state = TransportState.Joined;\n    this.observer.onStateChange(this.state);\n  }\n\n  async connect(\n    token: string,\n    endpoint: string,\n    peerId: string,\n    customData: { name: string; metaData: string },\n    autoSubscribeVideo = false,\n  ): Promise<InitConfig | void> {\n    this.setTransportStateForConnect();\n    this.joinParameters = new JoinParameters(\n      token,\n      peerId,\n      customData.name,\n      customData.metaData,\n      endpoint,\n      autoSubscribeVideo,\n    );\n    try {\n      const response = await this.internalConnect(token, endpoint, peerId);\n      return response;\n    } catch (error) {\n      const shouldRetry =\n        error instanceof HMSException &&\n        ([\n          ErrorCodes.WebSocketConnectionErrors.WEBSOCKET_CONNECTION_LOST,\n          ErrorCodes.WebSocketConnectionErrors.FAILED_TO_CONNECT,\n          ErrorCodes.WebSocketConnectionErrors.ABNORMAL_CLOSE,\n          ErrorCodes.APIErrors.ENDPOINT_UNREACHABLE,\n        ].includes(error.code) ||\n          error.code.toString().startsWith('5') ||\n          error.code.toString().startsWith('429'));\n\n      if (shouldRetry) {\n        const task = async () => {\n          await this.internalConnect(token, endpoint, peerId);\n          return Boolean(this.initConfig && this.initConfig.endpoint);\n        };\n\n        await this.retryScheduler.schedule({\n          category: TransportFailureCategory.ConnectFailed,\n          error,\n          task,\n          originalState: this.state,\n          maxFailedRetries: MAX_TRANSPORT_RETRIES,\n          changeState: false,\n        });\n      } else {\n        throw error;\n      }\n    }\n  }\n\n  async leave(notifyServer: boolean): Promise<void> {\n    this.retryScheduler.reset();\n    this.joinParameters = undefined;\n    HMSLogger.d(TAG, 'leaving in transport');\n    try {\n      this.state = TransportState.Leaving;\n      this.webrtcInternals?.cleanUp();\n      await this.publishConnection?.close();\n      await this.subscribeConnection?.close();\n      if (notifyServer) {\n        try {\n          this.signal.leave();\n          HMSLogger.d(TAG, 'signal leave done');\n        } catch (err) {\n          HMSLogger.w(TAG, 'failed to send leave on websocket to server', err);\n        }\n      }\n      this.analyticsEventsService.flushFailedClientEvents();\n      this.analyticsEventsService.reset();\n      await this.signal.close();\n    } catch (err) {\n      this.eventBus.analytics.publish(AnalyticsEventFactory.disconnect(err as Error));\n      HMSLogger.e(TAG, 'leave: FAILED ❌', err);\n    } finally {\n      this.state = TransportState.Disconnected;\n      this.observer.onStateChange(this.state);\n    }\n  }\n\n  handleLocalRoleUpdate = async ({ oldRole, newRole }: { oldRole: HMSRole; newRole: HMSRole }) => {\n    const changedFromNonWebRTCToWebRTC = !this.doesRoleNeedWebRTC(oldRole) && this.doesRoleNeedWebRTC(newRole);\n    if (!changedFromNonWebRTCToWebRTC) {\n      return;\n    }\n\n    HMSLogger.d(\n      TAG,\n      'Local peer role updated to webrtc role, creating PeerConnections and performing inital publish negotiation ⏳',\n    );\n    this.createPeerConnections();\n    await this.negotiateOnFirstPublish();\n  };\n\n  async publish(tracks: Array<HMSLocalTrack>): Promise<void> {\n    for (const track of tracks) {\n      try {\n        await this.publishTrack(track);\n      } catch (error) {\n        this.eventBus.analytics.publish(\n          AnalyticsEventFactory.publish({\n            devices: this.deviceManager.getDevices(),\n            error: error as Error,\n          }),\n        );\n      }\n    }\n  }\n\n  async unpublish(tracks: Array<HMSLocalTrack>): Promise<void> {\n    for (const track of tracks) {\n      await this.unpublishTrack(track);\n    }\n  }\n\n  async sendMessage(message: Message) {\n    return await this.signal.broadcast(message);\n  }\n\n  /**\n   * TODO: check if track.publishedTrackId be used instead of the hack to match with track with same type and\n   * source. The hack won't work if there are multiple tracks with same source and type.\n   */\n  trackUpdate(track: HMSLocalTrack) {\n    const currentTrackStates = Array.from(this.trackStates.values());\n    const originalTrackState = currentTrackStates.find(\n      trackState => track.type === trackState.type && track.source === trackState.source,\n    );\n    if (originalTrackState) {\n      const newTrackState = new TrackState({\n        ...originalTrackState,\n        mute: !track.enabled,\n      });\n      this.trackStates.set(originalTrackState.track_id, newTrackState);\n      HMSLogger.d(TAG, 'Track Update', this.trackStates, track);\n      this.signal.trackUpdate(new Map([[originalTrackState.track_id, newTrackState]]));\n    }\n  }\n\n  async changeRole(forPeer: HMSPeer, toRole: string, force = false) {\n    await this.signal.requestRoleChange({\n      requested_for: forPeer.peerId,\n      role: toRole,\n      force,\n    });\n  }\n\n  async changeRoleOfPeer(forPeer: HMSPeer, toRole: string, force: boolean) {\n    await this.signal.requestRoleChange({\n      requested_for: forPeer.peerId,\n      role: toRole,\n      force,\n    });\n  }\n\n  async changeRoleOfPeersWithRoles(roles: HMSRole[], toRole: string) {\n    await this.signal.requestBulkRoleChange({\n      roles: roles.map((role: HMSRole) => role.name),\n      role: toRole,\n      force: true,\n    });\n  }\n\n  async acceptRoleChange(request: HMSRoleChangeRequest) {\n    await this.signal.acceptRoleChangeRequest({\n      requested_by: request.requestedBy?.peerId,\n      role: request.role.name,\n      token: request.token,\n    });\n  }\n\n  async endRoom(lock: boolean, reason: string) {\n    await this.signal.endRoom(lock, reason);\n  }\n\n  async removePeer(peerId: string, reason: string) {\n    await this.signal.removePeer({ requested_for: peerId, reason });\n  }\n\n  async startRTMPOrRecording(params: RTMPRecordingConfig) {\n    const signalParams: StartRTMPOrRecordingRequestParams = {\n      meeting_url: params.meetingURL,\n      record: params.record,\n    };\n\n    if (params.rtmpURLs?.length) {\n      signalParams.rtmp_urls = params.rtmpURLs;\n    }\n\n    if (params.resolution) {\n      signalParams.resolution = params.resolution;\n    }\n\n    await this.signal.startRTMPOrRecording(signalParams);\n  }\n\n  async stopRTMPOrRecording() {\n    await this.signal.stopRTMPAndRecording();\n  }\n\n  async startHLSStreaming(params?: HLSConfig) {\n    const hlsParams: HLSRequestParams = {};\n    if (params && params.variants && params.variants.length > 0) {\n      hlsParams.variants = params.variants.map(variant => {\n        const hlsVariant: HLSVariant = { meeting_url: variant.meetingURL };\n        if (variant.metadata) {\n          hlsVariant.metadata = variant.metadata;\n        }\n        return hlsVariant;\n      });\n    }\n    if (params?.recording) {\n      hlsParams.hls_recording = {\n        single_file_per_layer: params.recording.singleFilePerLayer,\n        hls_vod: params.recording.hlsVod,\n      };\n    }\n    await this.signal.startHLSStreaming(hlsParams);\n  }\n\n  async stopHLSStreaming(params?: HLSConfig) {\n    if (params) {\n      const hlsParams: HLSRequestParams = {\n        variants: params?.variants?.map(variant => {\n          const hlsVariant: HLSVariant = { meeting_url: variant.meetingURL };\n          if (variant.metadata) {\n            hlsVariant.metadata = variant.metadata;\n          }\n          return hlsVariant;\n        }),\n      };\n      await this.signal.stopHLSStreaming(hlsParams);\n    }\n    await this.signal.stopHLSStreaming();\n  }\n\n  async sendHLSTimedMetadata(metadataList: HLSTimedMetadata[]) {\n    if (metadataList.length > 0) {\n      const hlsMtParams: HLSTimedMetadataParams = {\n        metadata_objs: metadataList,\n      };\n\n      await this.signal.sendHLSTimedMetadata(hlsMtParams);\n    }\n  }\n  async changeName(name: string) {\n    const peer = this.store.getLocalPeer();\n    if (peer && peer.name !== name) {\n      await this.signal.updatePeer({\n        name: name,\n      });\n    }\n  }\n\n  async changeMetadata(metadata: string) {\n    await this.signal.updatePeer({\n      data: metadata,\n    });\n  }\n\n  getSessionMetadata(key?: string) {\n    return this.signal.getSessionMetadata(key);\n  }\n\n  setSessionMetadata(params: SetSessionMetadataParams) {\n    return this.signal.setSessionMetadata(params);\n  }\n\n  listenMetadataChange(keys: string[]): Promise<void> {\n    return this.signal.listenMetadataChange(keys);\n  }\n\n  async changeTrackState(trackUpdateRequest: TrackUpdateRequestParams) {\n    await this.signal.requestTrackStateChange(trackUpdateRequest);\n  }\n\n  async changeMultiTrackState(trackUpdateRequest: MultiTrackUpdateRequestParams) {\n    await this.signal.requestMultiTrackStateChange(trackUpdateRequest);\n  }\n\n  private async publishTrack(track: HMSLocalTrack): Promise<void> {\n    track.publishedTrackId = track.getTrackIDBeingSent();\n    HMSLogger.d(\n      TAG,\n      `⏳ publishTrack: trackId=${track.trackId}, toPublishTrackId=${track.publishedTrackId}`,\n      `${track}`,\n    );\n    this.trackStates.set(track.publishedTrackId, new TrackState(track));\n    const p = new Promise<boolean>((resolve, reject) => {\n      this.callbacks.set(RENEGOTIATION_CALLBACK_ID, {\n        promise: { resolve, reject },\n        action: HMSAction.PUBLISH,\n        extra: {},\n      });\n    });\n    const stream = track.stream as HMSLocalStream;\n    stream.setConnection(this.publishConnection!);\n    const simulcastLayers = this.store.getSimulcastLayers(track.source!);\n    stream.addTransceiver(track, simulcastLayers);\n    HMSLogger.time(`publish-${track.trackId}-${track.type}`);\n    await p;\n    HMSLogger.timeEnd(`publish-${track.trackId}-${track.type}`);\n    // add track to store after publish\n    this.store.addTrack(track);\n\n    await stream\n      .setMaxBitrateAndFramerate(track)\n      .then(() => {\n        HMSLogger.d(\n          TAG,\n          `Setting maxBitrate=${track.settings.maxBitrate} kpbs${\n            track instanceof HMSLocalVideoTrack ? ` and maxFramerate=${track.settings.maxFramerate}` : ''\n          } for ${track.source} ${track.type} ${track.trackId}`,\n        );\n      })\n      .catch(error => HMSLogger.w(TAG, 'Failed setting maxBitrate and maxFramerate', error));\n\n    track.isPublished = true;\n\n    HMSLogger.d(TAG, `✅ publishTrack: trackId=${track.trackId}`, `${track}`, this.callbacks);\n  }\n\n  private async unpublishTrack(track: HMSLocalTrack): Promise<void> {\n    HMSLogger.d(TAG, `⏳ unpublishTrack: trackId=${track.trackId}`, `${track}`);\n    if (track.publishedTrackId && this.trackStates.has(track.publishedTrackId)) {\n      this.trackStates.delete(track.publishedTrackId);\n    } else {\n      // TODO: hotfix to unpublish replaced video track id, solve it properly\n      // it won't work when there are multiple regular video tracks, hmslocalvideotrack can store\n      // the original initial track id for a proper fix\n      const currentTrackStates = Array.from(this.trackStates.values());\n      const originalTrackState = currentTrackStates.find(\n        trackState => track.type === trackState.type && track.source === trackState.source,\n      );\n      if (originalTrackState) {\n        this.trackStates.delete(originalTrackState.track_id);\n      }\n    }\n    const p = new Promise<boolean>((resolve, reject) => {\n      this.callbacks.set(RENEGOTIATION_CALLBACK_ID, {\n        promise: { resolve, reject },\n        action: HMSAction.UNPUBLISH,\n        extra: {},\n      });\n    });\n    const stream = track.stream as HMSLocalStream;\n    stream.removeSender(track);\n    await p;\n    await track.cleanup();\n    // remove track from store on unpublish\n    this.store.removeTrack(track);\n    HMSLogger.d(TAG, `✅ unpublishTrack: trackId=${track.trackId}`, this.callbacks);\n  }\n\n  private waitForLocalRoleAvailability() {\n    if (this.store.hasRoleDetailsArrived()) {\n      return;\n    } else {\n      return new Promise<void>(resolve => {\n        this.eventBus.policyChange.subscribeOnce(() => resolve());\n      });\n    }\n  }\n\n  private async createConnectionsAndNegotiateJoin(\n    customData: { name: string; metaData: string },\n    autoSubscribeVideo = false,\n  ) {\n    const isWebRTC = this.doesLocalPeerNeedWebRTC();\n    if (isWebRTC) {\n      this.createPeerConnections();\n    }\n\n    this.analyticsTimer.start(TimedEvent.JOIN_RESPONSE);\n    await this.negotiateJoinWithRetry({\n      name: customData.name,\n      data: customData.metaData,\n      autoSubscribeVideo,\n      isWebRTC,\n    });\n    this.analyticsTimer.end(TimedEvent.JOIN_RESPONSE);\n  }\n\n  private createPeerConnections() {\n    if (this.initConfig) {\n      if (!this.publishConnection) {\n        this.publishConnection = new HMSPublishConnection(\n          this.signal,\n          this.initConfig.rtcConfiguration,\n          this.publishConnectionObserver,\n        );\n      }\n\n      if (!this.subscribeConnection) {\n        this.subscribeConnection = new HMSSubscribeConnection(\n          this.signal,\n          this.initConfig.rtcConfiguration,\n          this.subscribeConnectionObserver,\n        );\n      }\n    }\n  }\n\n  private async negotiateJoinWithRetry({\n    name,\n    data,\n    autoSubscribeVideo,\n    isWebRTC = true,\n  }: NegotiateJoinParams & { isWebRTC: boolean }) {\n    try {\n      await this.negotiateJoin({ name, data, autoSubscribeVideo, isWebRTC });\n    } catch (error) {\n      HMSLogger.e(TAG, 'Join negotiation failed ❌', error);\n      const hmsError =\n        error instanceof HMSException\n          ? error\n          : ErrorFactory.WebsocketMethodErrors.ServerErrors(\n              500,\n              HMSAction.JOIN,\n              `Websocket join error - ${(error as Error).message}`,\n            );\n      const shouldRetry =\n        parseInt(`${hmsError.code / 100}`) === 5 ||\n        [ErrorCodes.WebSocketConnectionErrors.WEBSOCKET_CONNECTION_LOST, 429].includes(hmsError.code);\n\n      if (shouldRetry) {\n        this.joinRetryCount = 0;\n        hmsError.isTerminal = false;\n        const task = async () => {\n          this.joinRetryCount++;\n          return await this.negotiateJoin({ name, data, autoSubscribeVideo, isWebRTC });\n        };\n\n        await this.retryScheduler.schedule({\n          category: TransportFailureCategory.JoinWSMessageFailed,\n          error: hmsError,\n          task,\n          originalState: TransportState.Joined,\n          maxFailedRetries: 3,\n          changeState: false,\n        });\n      } else {\n        throw error;\n      }\n    }\n  }\n\n  private async negotiateJoin({\n    name,\n    data,\n    autoSubscribeVideo,\n    isWebRTC = true,\n  }: NegotiateJoinParams & { isWebRTC: boolean }): Promise<boolean> {\n    if (isWebRTC) {\n      return await this.negotiateJoinWebRTC({ name, data, autoSubscribeVideo });\n    } else {\n      return await this.negotiateJoinNonWebRTC({ name, data, autoSubscribeVideo });\n    }\n  }\n\n  private async negotiateJoinWebRTC({ name, data, autoSubscribeVideo }: NegotiateJoinParams): Promise<boolean> {\n    HMSLogger.d(TAG, '⏳ join: Negotiating over PUBLISH connection');\n    if (!this.publishConnection) {\n      HMSLogger.e(TAG, 'Publish peer connection not found, cannot negotiate');\n      return false;\n    }\n    const offer = await this.publishConnection.createOffer();\n    await this.publishConnection.setLocalDescription(offer);\n    const serverSubDegrade = this.isFlagEnabled(InitFlags.FLAG_SERVER_SUB_DEGRADATION);\n    const simulcast = this.isFlagEnabled(InitFlags.FLAG_SERVER_SIMULCAST);\n    const answer = await this.signal.join(name, data, !autoSubscribeVideo, serverSubDegrade, simulcast, offer);\n    await this.publishConnection.setRemoteDescription(answer);\n    for (const candidate of this.publishConnection.candidates) {\n      await this.publishConnection.addIceCandidate(candidate);\n    }\n\n    this.publishConnection.initAfterJoin();\n    return !!answer;\n  }\n\n  private async negotiateJoinNonWebRTC({ name, data, autoSubscribeVideo }: NegotiateJoinParams): Promise<boolean> {\n    HMSLogger.d(TAG, '⏳ join: Negotiating Non-WebRTC');\n    const serverSubDegrade = this.isFlagEnabled(InitFlags.FLAG_SERVER_SUB_DEGRADATION);\n    const simulcast = this.isFlagEnabled(InitFlags.FLAG_SERVER_SIMULCAST);\n    const response = await this.signal.join(name, data, !autoSubscribeVideo, serverSubDegrade, simulcast);\n    return !!response;\n  }\n\n  /**\n   * Negotiate on first publish after changing role from non-webrtc peer to webrtc peer by sending offer\n   */\n  private async negotiateOnFirstPublish() {\n    HMSLogger.d(TAG, '⏳ Negotiating offer over PUBLISH connection');\n    if (!this.publishConnection) {\n      HMSLogger.e(TAG, 'Publish peer connection not found, cannot negotiate');\n      return false;\n    }\n    const offer = await this.publishConnection.createOffer(this.trackStates);\n    await this.publishConnection.setLocalDescription(offer);\n    const answer = await this.signal.offer(offer, this.trackStates);\n    await this.publishConnection.setRemoteDescription(answer);\n    for (const candidate of this.publishConnection.candidates) {\n      await this.publishConnection.addIceCandidate(candidate);\n    }\n\n    this.publishConnection.initAfterJoin();\n    return !!answer;\n  }\n\n  private async performPublishRenegotiation(constraints?: RTCOfferOptions) {\n    HMSLogger.d(TAG, `⏳ [role=PUBLISH] onRenegotiationNeeded START`, this.trackStates);\n    const callback = this.callbacks.get(RENEGOTIATION_CALLBACK_ID);\n    if (!callback) {\n      return;\n    }\n\n    if (!this.publishConnection) {\n      HMSLogger.e(TAG, 'Publish peer connection not found, cannot renegotiate');\n      return;\n    }\n\n    try {\n      const offer = await this.publishConnection.createOffer(this.trackStates, constraints);\n      await this.publishConnection.setLocalDescription(offer);\n      HMSLogger.time(`renegotiation-offer-exchange`);\n      const answer = await this.signal.offer(offer, this.trackStates);\n      this.callbacks.delete(RENEGOTIATION_CALLBACK_ID);\n      HMSLogger.timeEnd(`renegotiation-offer-exchange`);\n      await this.publishConnection.setRemoteDescription(answer);\n      callback.promise.resolve(true);\n      HMSLogger.d(TAG, `[role=PUBLISH] onRenegotiationNeeded DONE ✅`);\n    } catch (err) {\n      let ex: HMSException;\n      if (err instanceof HMSException) {\n        ex = err;\n      } else {\n        ex = ErrorFactory.GenericErrors.Unknown(HMSAction.PUBLISH, (err as Error).message);\n      }\n\n      callback!.promise.reject(ex);\n      HMSLogger.d(TAG, `[role=PUBLISH] onRenegotiationNeeded FAILED ❌`);\n    }\n  }\n\n  private async handleIceConnectionFailure(role: HMSConnectionRole, error: HMSException) {\n    // ice retry is already in progress(from disconnect state)\n    if (\n      this.retryScheduler.isTaskInProgress(\n        HMSConnectionRole.Publish\n          ? TransportFailureCategory.PublishIceConnectionFailed\n          : TransportFailureCategory.SubscribeIceConnectionFailed,\n      )\n    ) {\n      return;\n    }\n\n    if (role === HMSConnectionRole.Publish) {\n      this.retryScheduler.schedule({\n        category: TransportFailureCategory.PublishIceConnectionFailed,\n        error,\n        task: this.retryPublishIceFailedTask,\n        originalState: TransportState.Joined,\n      });\n    } else {\n      this.retryScheduler.schedule({\n        category: TransportFailureCategory.SubscribeIceConnectionFailed,\n        error,\n        task: this.retrySubscribeIceFailedTask,\n        originalState: TransportState.Joined,\n        maxFailedRetries: 1,\n      });\n    }\n  }\n\n  private async internalConnect(token: string, initEndpoint: string, peerId: string) {\n    HMSLogger.d(TAG, 'connect: started ⏰');\n    const connectRequestedAt = new Date();\n    try {\n      this.analyticsTimer.start(TimedEvent.INIT);\n      this.initConfig = await InitService.fetchInitConfig({\n        token,\n        peerId,\n        userAgent: this.store.getUserAgent(),\n        initEndpoint,\n      });\n      this.analyticsTimer.end(TimedEvent.INIT);\n      HTTPAnalyticsTransport.setWebsocketEndpoint(this.initConfig.endpoint);\n      // if leave was called while init was going on, don't open websocket\n      this.validateNotDisconnected('post init');\n      await this.openSignal(token, peerId);\n      this.store.setSimulcastEnabled(this.isFlagEnabled(InitFlags.FLAG_SERVER_SIMULCAST));\n      HMSLogger.d(TAG, 'Adding Analytics Transport: JsonRpcSignal');\n      this.analyticsEventsService.setTransport(this.analyticsSignalTransport);\n      this.analyticsEventsService.flush();\n      return this.initConfig;\n    } catch (error) {\n      if (this.state !== TransportState.Reconnecting) {\n        this.eventBus.analytics.publish(\n          AnalyticsEventFactory.connect(\n            error as Error,\n            this.getAdditionalAnalyticsProperties(),\n            connectRequestedAt,\n            new Date(),\n            initEndpoint,\n          ),\n        );\n      }\n      HMSLogger.e(TAG, '❌ internal connect: failed', error);\n      throw error;\n    }\n  }\n\n  // leave could be called between any two async tasks, which would make\n  // the state disconnected instead of connecting, throw error for those cases.\n  private validateNotDisconnected(stage: string) {\n    if (this.state === TransportState.Disconnected) {\n      HMSLogger.w(TAG, 'aborting join as transport state is disconnected');\n      throw ErrorFactory.GenericErrors.ValidationFailed(`leave called before join could complete - stage=${stage}`);\n    }\n  }\n\n  private async openSignal(token: string, peerId: string) {\n    if (!this.initConfig) {\n      throw ErrorFactory.APIErrors.InitConfigNotAvailable(HMSAction.INIT, 'Init Config not found');\n    }\n\n    HMSLogger.d(TAG, '⏳ internal connect: connecting to ws endpoint', this.initConfig.endpoint);\n    const url = new URL(this.initConfig.endpoint);\n    url.searchParams.set('peer', peerId);\n    url.searchParams.set('token', token);\n    url.searchParams.set('user_agent_v2', this.store.getUserAgent());\n    this.endpoint = url.toString();\n    this.analyticsTimer.start(TimedEvent.WEBSOCKET_CONNECT);\n    await this.signal.open(this.endpoint);\n    this.analyticsTimer.end(TimedEvent.WEBSOCKET_CONNECT);\n    this.analyticsTimer.start(TimedEvent.ON_POLICY_CHANGE);\n    this.analyticsTimer.start(TimedEvent.ROOM_STATE);\n    HMSLogger.d(TAG, '✅ internal connect: connected to ws endpoint');\n  }\n\n  private async initRtcStatsMonitor() {\n    this.webrtcInternals?.setPeerConnections({\n      publish: this.publishConnection?.nativeConnection,\n      subscribe: this.subscribeConnection?.nativeConnection,\n    });\n  }\n\n  /**\n   * Role does not need WebRTC(peer connections to communicate to SFU) if it cannot publish or subscribe to anything\n   * @returns boolean denoting if a peer cannot publish(video, audio or screen) and cannot subscribe to any role\n   */\n  private doesRoleNeedWebRTC(role: HMSRole) {\n    if (!this.isFlagEnabled(InitFlags.FLAG_NON_WEBRTC_DISABLE_OFFER)) {\n      return true;\n    }\n\n    const isPublishing = Boolean(role.publishParams.allowed && role.publishParams.allowed?.length > 0);\n    const isSubscribing = Boolean(\n      role.subscribeParams.subscribeToRoles && role.subscribeParams.subscribeToRoles?.length > 0,\n    );\n\n    return isPublishing || isSubscribing;\n  }\n\n  private doesLocalPeerNeedWebRTC() {\n    const localRole = this.store.getLocalPeer()?.role;\n    if (!localRole) {\n      return true;\n    }\n\n    return this.doesRoleNeedWebRTC(localRole);\n  }\n\n  private retryPublishIceFailedTask = async () => {\n    /**\n     * Proceed with the retry even if the connection state is connected as the offer could have failed\n     * which will cause missing tiles if it is not sent again.\n     * Do iceRestart only if not connected\n     */\n    if (this.publishConnection) {\n      const p = new Promise<boolean>((resolve, reject) => {\n        this.callbacks.set(RENEGOTIATION_CALLBACK_ID, {\n          promise: { resolve, reject },\n          action: HMSAction.RESTART_ICE,\n          extra: {},\n        });\n      });\n      await this.performPublishRenegotiation({ iceRestart: this.publishConnection.connectionState !== 'connected' });\n      await p;\n    }\n\n    return true;\n  };\n\n  private retrySubscribeIceFailedTask = async () => {\n    if (this.subscribeConnection && this.subscribeConnection.connectionState !== 'connected') {\n      const p = new Promise<boolean>((resolve, reject) => {\n        // Use subscribe constant string\n        this.callbacks.set(SUBSCRIBE_ICE_CONNECTION_CALLBACK_ID, {\n          promise: { resolve, reject },\n          action: HMSAction.RESTART_ICE,\n          extra: {},\n        });\n      });\n\n      const timeout = new Promise(resolve => {\n        setTimeout(resolve, SUBSCRIBE_TIMEOUT, false);\n      });\n\n      return Promise.race([p, timeout]) as Promise<boolean>;\n    }\n\n    return true;\n  };\n\n  private retrySignalDisconnectTask = async () => {\n    HMSLogger.d(TAG, 'retrySignalDisconnectTask', { signalConnected: this.signal.isConnected });\n    // Check if ws is disconnected - otherwise if only publishIce fails\n    // and ws connect is success then we don't need to reconnect to WebSocket\n    if (!this.signal.isConnected) {\n      await this.internalConnect(\n        this.joinParameters!.authToken,\n        this.joinParameters!.endpoint,\n        this.joinParameters!.peerId,\n      );\n    }\n\n    // Only retry publish failed task after joining the call - not needed in preview signal reconnect\n    const ok = this.store.getRoom()?.joinedAt\n      ? this.signal.isConnected && (await this.retryPublishIceFailedTask())\n      : this.signal.isConnected;\n    // Send track update to sync local track state changes during reconnection\n    this.signal.trackUpdate(this.trackStates);\n\n    return ok;\n  };\n\n  private handleSubscribeConnectionConnected() {\n    this.subscribeConnection?.logSelectedIceCandidatePairs();\n    const callback = this.callbacks.get(SUBSCRIBE_ICE_CONNECTION_CALLBACK_ID);\n    this.callbacks.delete(SUBSCRIBE_ICE_CONNECTION_CALLBACK_ID);\n\n    if (callback) {\n      callback.promise.resolve(true);\n    }\n  }\n\n  private setTransportStateForConnect() {\n    if (this.state === TransportState.Failed) {\n      this.state = TransportState.Disconnected;\n    }\n\n    if (this.state !== TransportState.Disconnected && this.state !== TransportState.Reconnecting) {\n      throw ErrorFactory.WebsocketMethodErrors.AlreadyJoined(\n        HMSAction.JOIN,\n        `Cannot join a meeting in ${this.state} state`,\n      );\n    }\n\n    if (this.state === TransportState.Disconnected) {\n      this.state = TransportState.Connecting;\n      this.observer.onStateChange(this.state);\n    }\n  }\n\n  private sendErrorAnalyticsEvent(error: HMSException, category: TransportFailureCategory) {\n    const additionalProps = this.getAdditionalAnalyticsProperties();\n    let event: AnalyticsEvent;\n    switch (category) {\n      case TransportFailureCategory.ConnectFailed:\n        event = AnalyticsEventFactory.connect(error, additionalProps);\n        break;\n      case TransportFailureCategory.SignalDisconnect:\n        event = AnalyticsEventFactory.disconnect(error, additionalProps);\n        break;\n      case TransportFailureCategory.JoinWSMessageFailed:\n        event = AnalyticsEventFactory.join({\n          error,\n          time: this.analyticsTimer.getTimeTaken(TimedEvent.JOIN),\n          init_response_time: this.analyticsTimer.getTimeTaken(TimedEvent.INIT),\n          ws_connect_time: this.analyticsTimer.getTimeTaken(TimedEvent.WEBSOCKET_CONNECT),\n          on_policy_change_time: this.analyticsTimer.getTimeTaken(TimedEvent.ON_POLICY_CHANGE),\n          local_audio_track_time: this.analyticsTimer.getTimeTaken(TimedEvent.LOCAL_AUDIO_TRACK),\n          local_video_track_time: this.analyticsTimer.getTimeTaken(TimedEvent.LOCAL_VIDEO_TRACK),\n          retries_join: this.joinRetryCount,\n        });\n        break;\n      case TransportFailureCategory.PublishIceConnectionFailed:\n        event = AnalyticsEventFactory.publish({ error });\n        break;\n      case TransportFailureCategory.SubscribeIceConnectionFailed:\n        event = AnalyticsEventFactory.subscribeFail(error);\n        break;\n    }\n    this.eventBus.analytics.publish(event!);\n  }\n\n  getAdditionalAnalyticsProperties(): AdditionalAnalyticsProperties {\n    const network_info = getNetworkInfo();\n    const document_hidden = typeof document !== 'undefined' && document.hidden;\n    const num_degraded_tracks = this.store.getRemoteVideoTracks().filter(track => track.degraded).length;\n    const publishBitrate = this.getWebrtcInternals()?.getCurrentStats()?.getLocalPeerStats()?.publish?.bitrate;\n    const subscribeBitrate = this.getWebrtcInternals()?.getCurrentStats()?.getLocalPeerStats()?.subscribe?.bitrate;\n\n    return {\n      network_info,\n      document_hidden,\n      num_degraded_tracks,\n      bitrate: {\n        publish: publishBitrate,\n        subscribe: subscribeBitrate,\n      },\n      max_sub_bitrate: this.maxSubscribeBitrate,\n      recent_pong_response_times: this.signal.getPongResponseTimes(),\n      transport_state: this.state,\n    };\n  }\n}\n","import { ErrorFactory, HMSAction } from '../error/ErrorFactory';\n\n/**\n * @param retryCodes codes from the server reponse that needs to be retried\n */\n// eslint-disable-next-line complexity\nexport const fetchWithRetry = async (\n  url: RequestInfo,\n  options: RequestInit,\n  retryCodes?: number[],\n): Promise<Response> => {\n  const MAX_RETRIES = 4;\n  let error = Error('something went wrong during fetch');\n  for (let i = 0; i < MAX_RETRIES; i++) {\n    try {\n      // fetch will throw error if there's a browser-level issue\n      const response = await fetch(url, options);\n      const data = await response.clone().json();\n      // throw error for additional codes to retry based on server's response\n      if (retryCodes && retryCodes.length && !response.ok && retryCodes.includes(data.code)) {\n        throw ErrorFactory.APIErrors.ServerErrors(data.code, HMSAction.GET_TOKEN, data.message, false);\n      }\n\n      return response;\n    } catch (err) {\n      error = err as unknown as Error;\n    }\n  }\n  if (['Failed to fetch', 'NetworkError'].some(message => error.message.includes(message))) {\n    throw ErrorFactory.APIErrors.EndpointUnreachable(HMSAction.GET_TOKEN, error.message);\n  }\n  throw error;\n};\n","import { ErrorFactory, HMSAction } from '../error/ErrorFactory';\n\nexport interface AuthToken {\n  roomId: string;\n  userId: string;\n  role: string;\n}\n\nexport default function decodeJWT(token?: string): AuthToken {\n  if (!token || token.length === 0) {\n    throw ErrorFactory.APIErrors.InvalidTokenFormat(\n      HMSAction.INIT,\n      'Token cannot be an empty string or undefined or null',\n    );\n  }\n\n  const parts = token.split('.');\n  if (parts.length !== 3) {\n    throw ErrorFactory.APIErrors.InvalidTokenFormat(\n      HMSAction.INIT,\n      `Expected 3 '.' separate fields - header, payload and signature respectively`,\n    );\n  }\n\n  const payloadStr = atob(parts[1]);\n  try {\n    const payload = JSON.parse(payloadStr);\n    return {\n      roomId: payload.room_id,\n      userId: payload.user_id,\n      role: payload.role,\n    } as AuthToken;\n  } catch (err) {\n    throw ErrorFactory.APIErrors.InvalidTokenFormat(\n      HMSAction.INIT,\n      `couldn't parse to json - ${(err as Error).message}`,\n    );\n  }\n}\n","import Message from './models/HMSMessage';\nimport HMSRoom from './models/HMSRoom';\nimport { HMSLocalPeer, HMSPeer, HMSRemotePeer } from './models/peer';\nimport { LocalTrackManager } from './LocalTrackManager';\nimport { NetworkTestManager } from './NetworkTestManager';\nimport RoleChangeManager from './RoleChangeManager';\nimport { IStore, Store } from './store';\nimport { WakeLockManager } from './WakeLockManager';\nimport AnalyticsEvent from '../analytics/AnalyticsEvent';\nimport AnalyticsEventFactory from '../analytics/AnalyticsEventFactory';\nimport { HMSAnalyticsLevel } from '../analytics/AnalyticsEventLevel';\nimport { AnalyticsEventsService } from '../analytics/AnalyticsEventsService';\nimport { AnalyticsTimer, TimedEvent } from '../analytics/AnalyticsTimer';\nimport { AudioSinkManager } from '../audio-sink-manager';\nimport { AudioOutputManager, DeviceManager } from '../device-manager';\nimport { DeviceStorageManager } from '../device-manager/DeviceStorage';\nimport { ErrorCodes } from '../error/ErrorCodes';\nimport { ErrorFactory, HMSAction } from '../error/ErrorFactory';\nimport { HMSException } from '../error/HMSException';\nimport { EventBus } from '../events/EventBus';\nimport {\n  HMSChangeMultiTrackStateParams,\n  HMSConfig,\n  HMSConnectionQualityListener,\n  HMSDeviceChangeEvent,\n  HMSFrameworkInfo,\n  HMSMessageInput,\n  HMSPlaylistType,\n  HMSPreviewConfig,\n  HMSRole,\n  HMSRoleChangeRequest,\n  HMSScreenShareConfig,\n  TokenRequest,\n  TokenRequestOptions,\n} from '../interfaces';\nimport { DeviceChangeListener } from '../interfaces/devices';\nimport { IErrorListener } from '../interfaces/error-listener';\nimport { HLSConfig, HLSTimedMetadata } from '../interfaces/hls-config';\nimport HMSInterface from '../interfaces/hms';\nimport { HMSLeaveRoomRequest } from '../interfaces/leave-room-request';\nimport { HMSPreviewListener } from '../interfaces/preview-listener';\nimport { RTMPRecordingConfig } from '../interfaces/rtmp-recording-config';\nimport InitialSettings from '../interfaces/settings';\nimport { HMSAudioListener, HMSTrackUpdate, HMSUpdateListener } from '../interfaces/update-listener';\nimport HMSLocalStream from '../media/streams/HMSLocalStream';\nimport {\n  HMSLocalAudioTrack,\n  HMSLocalTrack,\n  HMSLocalVideoTrack,\n  HMSRemoteTrack,\n  HMSTrackSource,\n  HMSTrackType,\n  HMSVideoTrack,\n} from '../media/tracks';\nimport { HMSNotificationMethod, NotificationManager, PeerLeaveRequestNotification } from '../notification-manager';\nimport { PlaylistManager } from '../playlist-manager';\nimport { SessionStore } from '../session-store';\nimport { InitConfig } from '../signal/init/models';\nimport HMSTransport from '../transport';\nimport ITransportObserver from '../transport/ITransportObserver';\nimport { TransportState } from '../transport/models/TransportState';\nimport { fetchWithRetry } from '../utils/fetch';\nimport decodeJWT from '../utils/jwt';\nimport HMSLogger, { HMSLogLevel } from '../utils/logger';\nimport { HMSAudioContextHandler } from '../utils/media';\nimport { isNode } from '../utils/support';\nimport { validateMediaDevicesExistence, validateRTCPeerConnection } from '../utils/validations';\n\nconst INITIAL_STATE = {\n  published: false,\n  isInitialised: false,\n  isReconnecting: false,\n  isPreviewInProgress: false,\n  isPreviewCalled: false,\n  isJoinInProgress: false,\n  deviceManagersInitialised: false,\n};\n\nexport class HMSSdk implements HMSInterface {\n  private transport!: HMSTransport;\n  private readonly TAG = '[HMSSdk]:';\n  private listener?: HMSUpdateListener;\n  private errorListener?: IErrorListener;\n  private deviceChangeListener?: DeviceChangeListener;\n  private audioListener?: HMSAudioListener;\n  private store!: IStore;\n  private notificationManager!: NotificationManager;\n  private deviceManager!: DeviceManager;\n  private audioSinkManager!: AudioSinkManager;\n  private playlistManager!: PlaylistManager;\n  private audioOutput!: AudioOutputManager;\n  private transportState: TransportState = TransportState.Disconnected;\n  private roleChangeManager?: RoleChangeManager;\n  private localTrackManager!: LocalTrackManager;\n  private analyticsEventsService!: AnalyticsEventsService;\n  private analyticsTimer = new AnalyticsTimer();\n  private eventBus!: EventBus;\n  private networkTestManager!: NetworkTestManager;\n  private wakeLockManager!: WakeLockManager;\n  private sessionStore!: SessionStore;\n  private sdkState = { ...INITIAL_STATE };\n  private frameworkInfo?: HMSFrameworkInfo;\n\n  private initStoreAndManagers() {\n    if (this.sdkState.isInitialised) {\n      /**\n       * Set listener after both join and preview, since they can have different listeners\n       */\n      this.notificationManager.setListener(this.listener);\n      this.audioSinkManager.setListener(this.listener);\n      return;\n    }\n\n    this.sdkState.isInitialised = true;\n    this.store = new Store();\n    this.eventBus = new EventBus();\n    this.wakeLockManager = new WakeLockManager();\n    this.networkTestManager = new NetworkTestManager(this.eventBus, this.listener);\n    this.playlistManager = new PlaylistManager(this, this.eventBus);\n    this.notificationManager = new NotificationManager(this.store, this.eventBus, this.listener, this.audioListener);\n    this.deviceManager = new DeviceManager(this.store, this.eventBus);\n    this.audioSinkManager = new AudioSinkManager(this.store, this.deviceManager, this.eventBus);\n    this.audioOutput = new AudioOutputManager(this.deviceManager, this.audioSinkManager);\n    this.audioSinkManager.setListener(this.listener);\n    this.eventBus.autoplayError.subscribe(this.handleAutoplayError);\n    this.localTrackManager = new LocalTrackManager(\n      this.store,\n      this.observer,\n      this.deviceManager,\n      this.eventBus,\n      this.analyticsTimer,\n    );\n    this.analyticsEventsService = new AnalyticsEventsService(this.store);\n    this.transport = new HMSTransport(\n      this.observer,\n      this.deviceManager,\n      this.store,\n      this.eventBus,\n      this.analyticsEventsService,\n      this.analyticsTimer,\n    );\n    this.sessionStore = new SessionStore(this.transport);\n\n    /**\n     * Note: Subscribe to events here right after creating stores and managers\n     * to not miss events that are published before the handlers are subscribed.\n     */\n    this.eventBus.analytics.subscribe(this.sendAnalyticsEvent);\n    this.eventBus.deviceChange.subscribe(this.handleDeviceChange);\n    this.eventBus.audioPluginFailed.subscribe(this.handleAudioPluginError);\n  }\n\n  private validateJoined(name: string) {\n    if (!this.localPeer) {\n      throw ErrorFactory.GenericErrors.NotConnected(HMSAction.VALIDATION, `Not connected - ${name}`);\n    }\n  }\n\n  // @ts-ignore\n  private sendHLSAnalytics(error: HMSException) {\n    this.sendAnalyticsEvent(AnalyticsEventFactory.hlsPlayerError(error));\n  }\n\n  async refreshDevices() {\n    this.validateJoined('refreshDevices');\n    await this.deviceManager.init(true);\n  }\n\n  getWebrtcInternals() {\n    return this.transport?.getWebrtcInternals();\n  }\n\n  getSessionStore() {\n    return this.sessionStore;\n  }\n\n  getPlaylistManager(): PlaylistManager {\n    return this.playlistManager;\n  }\n\n  getRecordingState() {\n    return this.store.getRoom()?.recording;\n  }\n\n  getRTMPState() {\n    return this.store.getRoom()?.rtmp;\n  }\n\n  getHLSState() {\n    return this.store.getRoom()?.hls;\n  }\n\n  getTemplateAppData() {\n    return this.store.getTemplateAppData();\n  }\n\n  private handleAutoplayError = (error: HMSException) => {\n    this.errorListener?.onError?.(error);\n  };\n\n  private get localPeer(): HMSLocalPeer | undefined {\n    return this.store?.getLocalPeer();\n  }\n\n  private observer: ITransportObserver = {\n    onNotification: (message: any) => {\n      if (message.method === HMSNotificationMethod.PEER_LEAVE_REQUEST) {\n        this.handlePeerLeaveRequest(message.params as PeerLeaveRequestNotification);\n        return;\n      }\n\n      switch (message.method) {\n        case HMSNotificationMethod.POLICY_CHANGE:\n          this.analyticsTimer.end(TimedEvent.ON_POLICY_CHANGE);\n          break;\n        case HMSNotificationMethod.PEER_LIST:\n          this.analyticsTimer.end(TimedEvent.PEER_LIST);\n          this.sendJoinAnalyticsEvent(this.sdkState.isPreviewCalled);\n          break;\n        case HMSNotificationMethod.ROOM_STATE:\n          this.analyticsTimer.end(TimedEvent.ROOM_STATE);\n          break;\n        default:\n      }\n\n      this.notificationManager.handleNotification(message, this.sdkState.isReconnecting);\n    },\n\n    onTrackAdd: (track: HMSRemoteTrack) => {\n      this.notificationManager.handleTrackAdd(track);\n    },\n\n    onTrackRemove: (track: HMSRemoteTrack) => {\n      this.notificationManager.handleTrackRemove(track);\n    },\n\n    onFailure: (exception: HMSException) => {\n      this.errorListener?.onError(exception);\n    },\n\n    onStateChange: async (state: TransportState, error?: HMSException) => {\n      const handleFailedState = async (error?: HMSException) => {\n        await this.internalLeave(true, error);\n        /**\n         * no need to call onError here when preview/join is in progress\n         * since preview/join will call onError when they receive leave event from the above call\n         */\n        if (!this.sdkState.isPreviewInProgress && !this.sdkState.isJoinInProgress) {\n          this.errorListener?.onError?.(error!);\n        }\n        this.sdkState.isReconnecting = false;\n      };\n\n      switch (state) {\n        case TransportState.Preview:\n        case TransportState.Joined:\n          if (this.transportState === TransportState.Reconnecting) {\n            this.listener?.onReconnected();\n          }\n          break;\n        case TransportState.Failed:\n          await handleFailedState(error);\n          break;\n        case TransportState.Reconnecting:\n          this.sdkState.isReconnecting = true;\n          this.listener?.onReconnecting(error!);\n          break;\n      }\n\n      this.transportState = state;\n      HMSLogger.d(this.TAG, 'Transport State Change', this.transportState);\n    },\n  };\n\n  private handlePeerLeaveRequest = (message: PeerLeaveRequestNotification) => {\n    const peer = message.requested_by ? this.store.getPeerById(message.requested_by) : undefined;\n    const request: HMSLeaveRoomRequest = {\n      roomEnded: message.room_end,\n      reason: message.reason,\n      requestedBy: peer,\n    };\n    this.listener?.onRemovedFromRoom(request);\n    this.internalLeave(false);\n  };\n\n  async preview(config: HMSPreviewConfig, listener: HMSPreviewListener) {\n    validateMediaDevicesExistence();\n    validateRTCPeerConnection();\n\n    if (this.sdkState.isPreviewInProgress) {\n      return Promise.reject(\n        ErrorFactory.GenericErrors.PreviewAlreadyInProgress(HMSAction.PREVIEW, 'Preview already called'),\n      );\n    }\n\n    this.analyticsTimer.start(TimedEvent.PREVIEW);\n    this.setUpPreview(config, listener);\n\n    // Request permissions and populate devices before waiting for policy\n    if (config.alwaysRequestPermissions) {\n      this.localTrackManager.requestPermissions().then(async () => {\n        await this.initDeviceManagers();\n      });\n    }\n\n    let initSuccessful = false;\n    let networkTestFinished = false;\n    const timerId = setTimeout(() => {\n      // If init or network is not done by 3s send -1\n      if (!initSuccessful || !networkTestFinished) {\n        this.listener?.onNetworkQuality?.(-1);\n      }\n    }, 3000);\n    return new Promise<void>((resolve, reject) => {\n      const policyHandler = async () => {\n        if (this.localPeer) {\n          const newRole = config.asRole && this.store.getPolicyForRole(config.asRole);\n          this.localPeer.asRole = newRole || this.localPeer.role;\n        }\n        const tracks = await this.localTrackManager.getTracksToPublish(config.settings);\n        tracks.forEach(track => this.setLocalPeerTrack(track));\n        this.localPeer?.audioTrack && this.initPreviewTrackAudioLevelMonitor();\n        await this.initDeviceManagers();\n        this.sdkState.isPreviewInProgress = false;\n        this.analyticsTimer.end(TimedEvent.PREVIEW);\n        const room = this.store.getRoom();\n        if (room) {\n          listener.onPreview(room, tracks);\n        }\n        this.sendPreviewAnalyticsEvent();\n        resolve();\n      };\n\n      const errorHandler = (ex?: HMSException) => {\n        this.analyticsTimer.end(TimedEvent.PREVIEW);\n        ex && this.errorListener?.onError(ex);\n        this.sendPreviewAnalyticsEvent(ex);\n        this.sdkState.isPreviewInProgress = false;\n        reject(ex as HMSException);\n      };\n\n      this.eventBus.policyChange.subscribeOnce(policyHandler);\n      this.eventBus.leave.subscribeOnce(errorHandler);\n\n      this.transport\n        .preview(\n          config.authToken,\n          config.initEndpoint!,\n          this.localPeer!.peerId,\n          { name: config.userName, metaData: config.metaData || '' },\n          config.autoVideoSubscribe,\n        )\n        .then((initConfig: InitConfig | void) => {\n          initSuccessful = true;\n          clearTimeout(timerId);\n          if (initConfig && config.captureNetworkQualityInPreview) {\n            this.networkTestManager.start(initConfig.config?.networkHealth).then(() => {\n              networkTestFinished = true;\n            });\n          }\n        })\n        .catch(errorHandler);\n    });\n  }\n\n  private handleDeviceChange = (event: HMSDeviceChangeEvent) => {\n    HMSLogger.d(this.TAG, 'Device Change event', event);\n    this.deviceChangeListener?.onDeviceChange?.(event);\n    if (event.error && event.type) {\n      const track = event.type.includes('audio') ? this.localPeer?.audioTrack : this.localPeer?.videoTrack;\n      this.errorListener?.onError(event.error);\n      if (\n        [\n          ErrorCodes.TracksErrors.CANT_ACCESS_CAPTURE_DEVICE,\n          ErrorCodes.TracksErrors.DEVICE_IN_USE,\n          ErrorCodes.TracksErrors.DEVICE_NOT_AVAILABLE,\n        ].includes(event.error.code) &&\n        track\n      ) {\n        track.setEnabled(false);\n        this.listener?.onTrackUpdate(HMSTrackUpdate.TRACK_MUTED, track, this.localPeer!);\n      }\n    }\n  };\n\n  private handleAudioPluginError = (error: HMSException) => {\n    HMSLogger.e(this.TAG, 'Audio Plugin Error event', error);\n    this.errorListener?.onError(error);\n  };\n\n  async join(config: HMSConfig, listener: HMSUpdateListener) {\n    validateMediaDevicesExistence();\n    validateRTCPeerConnection();\n\n    if (this.sdkState.isPreviewInProgress) {\n      throw ErrorFactory.GenericErrors.NotReady(HMSAction.JOIN, \"Preview is in progress, can't join\");\n    }\n\n    this.analyticsTimer.start(TimedEvent.JOIN);\n    this.sdkState.isJoinInProgress = true;\n\n    const { roomId, userId, role } = decodeJWT(config.authToken);\n    const previewRole = this.localPeer?.asRole?.name || this.localPeer?.role?.name;\n    this.networkTestManager?.stop();\n    this.listener = listener;\n    this.commonSetup(config, roomId, listener);\n    this.removeDevicesFromConfig(config);\n    this.store.setConfig(config);\n    /** set after config since we need config to get env for user agent */\n    this.store.createAndSetUserAgent(this.frameworkInfo);\n    HMSAudioContextHandler.resumeContext();\n    // acquire screen lock to stay awake while in call\n    const storeConfig = this.store.getConfig();\n    if (storeConfig?.autoManageWakeLock) {\n      this.wakeLockManager.acquireLock();\n    }\n\n    if (!this.localPeer) {\n      this.createAndAddLocalPeerToStore(config, role, userId);\n    } else {\n      this.localPeer.name = config.userName;\n      this.localPeer.role = this.store.getPolicyForRole(role);\n      this.localPeer.customerUserId = userId;\n      this.localPeer.metadata = config.metaData;\n      delete this.localPeer.asRole;\n    }\n\n    this.roleChangeManager = new RoleChangeManager(\n      this.store,\n      this.transport,\n      this.getAndPublishTracks.bind(this),\n      this.removeTrack.bind(this),\n      this.listener,\n    );\n    this.eventBus.localRoleUpdate.subscribe(this.handleLocalRoleUpdate);\n\n    HMSLogger.d(this.TAG, 'SDK Store', this.store);\n    HMSLogger.d(this.TAG, `⏳ Joining room ${roomId}`);\n\n    HMSLogger.time(`join-room-${roomId}`);\n\n    try {\n      await this.transport.join(\n        config.authToken,\n        this.localPeer!.peerId,\n        { name: config.userName, metaData: config.metaData! },\n        config.initEndpoint!,\n        config.autoVideoSubscribe,\n      );\n      HMSLogger.d(this.TAG, `✅ Joined room ${roomId}`);\n      this.analyticsTimer.start(TimedEvent.PEER_LIST);\n      await this.notifyJoin();\n      this.sdkState.isJoinInProgress = false;\n      await this.publish(config.settings, previewRole);\n    } catch (error) {\n      this.analyticsTimer.end(TimedEvent.JOIN);\n      this.sdkState.isJoinInProgress = false;\n      this.listener?.onError(error as HMSException);\n      this.sendJoinAnalyticsEvent(this.sdkState.isPreviewCalled, error as HMSException);\n      HMSLogger.e(this.TAG, 'Unable to join room', error);\n      throw error;\n    }\n    HMSLogger.timeEnd(`join-room-${roomId}`);\n  }\n\n  private stringifyMetadata(config: HMSConfig) {\n    if (config.metaData && typeof config.metaData !== 'string') {\n      config.metaData = JSON.stringify(config.metaData);\n    } else if (!config.metaData) {\n      config.metaData = '';\n    }\n  }\n\n  private cleanUp() {\n    this.cleanDeviceManagers();\n    this.eventBus.analytics.unsubscribe(this.sendAnalyticsEvent);\n    this.analyticsTimer.cleanUp();\n    DeviceStorageManager.cleanup();\n    this.playlistManager.cleanup();\n    this.wakeLockManager?.cleanup();\n    HMSLogger.cleanUp();\n    this.sdkState = { ...INITIAL_STATE };\n    /**\n     * when leave is called after preview itself without join.\n     * Store won't have the tracks in this case\n     */\n    if (this.localPeer) {\n      this.localPeer.audioTrack?.cleanup();\n      this.localPeer.audioTrack = undefined;\n      this.localPeer.videoTrack?.cleanup();\n      this.localPeer.videoTrack = undefined;\n    }\n    this.store.cleanUp();\n    this.listener = undefined;\n    if (this.roleChangeManager) {\n      this.eventBus.localRoleUpdate.unsubscribe(this.handleLocalRoleUpdate);\n    }\n  }\n\n  leave(notifyServer?: boolean) {\n    return this.internalLeave(notifyServer);\n  }\n\n  private async internalLeave(notifyServer = true, error?: HMSException) {\n    const room = this.store.getRoom();\n    if (room) {\n      const roomId = room.id;\n      this.networkTestManager?.stop();\n      this.eventBus.leave.publish(error);\n      HMSLogger.d(this.TAG, `⏳ Leaving room ${roomId}`);\n      // browsers often put limitation on amount of time a function set on window onBeforeUnload can take in case of\n      // tab refresh or close. Therefore prioritise the leave action over anything else, if tab is closed/refreshed\n      // we would want leave to succeed to stop stucked peer for others. The followup cleanup however is important\n      // for cases where uses stays on the page post leave.\n      await this.transport?.leave(notifyServer);\n      this.cleanUp();\n      HMSLogger.d(this.TAG, `✅ Left room ${roomId}`);\n    }\n  }\n\n  async getAuthTokenByRoomCode(tokenRequest: TokenRequest, tokenRequestOptions?: TokenRequestOptions): Promise<string> {\n    const tokenAPIURL = (tokenRequestOptions || {}).endpoint || 'https://auth.100ms.live/v2/token';\n    this.analyticsTimer.start(TimedEvent.GET_TOKEN);\n    const response = await fetchWithRetry(\n      tokenAPIURL,\n      {\n        method: 'POST',\n        body: JSON.stringify({ code: tokenRequest.roomCode, user_id: tokenRequest.userId }),\n      },\n      [429, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511],\n    );\n\n    const data = await response.json();\n    this.analyticsTimer.end(TimedEvent.GET_TOKEN);\n\n    if (!response.ok) {\n      throw ErrorFactory.APIErrors.ServerErrors(data.code, HMSAction.GET_TOKEN, data.message, false);\n    }\n\n    const { token } = data;\n    if (!token) {\n      throw Error(data.message);\n    }\n    return token;\n  }\n\n  getLocalPeer() {\n    return this.store.getLocalPeer();\n  }\n\n  getPeers() {\n    return this.store.getPeers();\n  }\n\n  getAudioOutput() {\n    return this.audioOutput;\n  }\n\n  sendMessage(type: string, message: string) {\n    this.sendMessageInternal({ message, type });\n  }\n\n  async sendBroadcastMessage(message: string, type?: string) {\n    return await this.sendMessageInternal({ message, type });\n  }\n\n  async sendGroupMessage(message: string, roles: HMSRole[], type?: string) {\n    const knownRoles = this.store.getKnownRoles();\n    const recipientRoles =\n      roles.filter(role => {\n        return knownRoles[role.name];\n      }) || [];\n    if (recipientRoles.length === 0) {\n      throw ErrorFactory.GenericErrors.ValidationFailed('No valid role is present', roles);\n    }\n    return await this.sendMessageInternal({ message, recipientRoles: roles, type });\n  }\n\n  async sendDirectMessage(message: string, peer: HMSPeer, type?: string) {\n    const recipientPeer = this.store.getPeerById(peer.peerId);\n    if (!recipientPeer) {\n      throw ErrorFactory.GenericErrors.ValidationFailed('Invalid peer - peer not present in the room', peer);\n    }\n    if (this.localPeer?.peerId === peer.peerId) {\n      throw ErrorFactory.GenericErrors.ValidationFailed('Cannot send message to self');\n    }\n    return await this.sendMessageInternal({ message, recipientPeer: peer, type });\n  }\n\n  private async sendMessageInternal({ recipientRoles, recipientPeer, type = 'chat', message }: HMSMessageInput) {\n    if (message.replace(/\\u200b/g, ' ').trim() === '') {\n      HMSLogger.w(this.TAG, 'sendMessage', 'Ignoring empty message send');\n      throw ErrorFactory.GenericErrors.ValidationFailed('Empty message not allowed');\n    }\n    const hmsMessage = new Message({\n      sender: this.localPeer!,\n      type,\n      message,\n      recipientPeer,\n      recipientRoles,\n      time: new Date(),\n    });\n    HMSLogger.d(this.TAG, 'Sending Message: ', hmsMessage);\n    const response = await this.transport.sendMessage(hmsMessage);\n    hmsMessage.time = new Date(response.timestamp);\n    return hmsMessage;\n  }\n\n  async startScreenShare(onStop: () => void, config?: HMSScreenShareConfig) {\n    const publishParams = this.store.getPublishParams();\n    if (!publishParams) {\n      return;\n    }\n\n    const { allowed } = publishParams;\n    const canPublishScreen = allowed && allowed.includes('screen');\n\n    if (!canPublishScreen) {\n      HMSLogger.e(this.TAG, `Role ${this.localPeer?.role} cannot share screen`);\n      return;\n    }\n\n    if (this.localPeer?.auxiliaryTracks?.find(track => track.source === 'screen')) {\n      throw Error('Cannot share multiple screens');\n    }\n\n    const tracks = await this.getScreenshareTracks(onStop, config);\n    if (!this.localPeer) {\n      HMSLogger.d(this.TAG, 'Screenshared when not connected');\n      tracks.forEach(track => {\n        track.cleanup();\n      });\n      return;\n    }\n    await this.transport.publish(tracks);\n    tracks.forEach(track => {\n      track.peerId = this.localPeer?.peerId;\n      this.localPeer?.auxiliaryTracks.push(track);\n      this.listener?.onTrackUpdate(HMSTrackUpdate.TRACK_ADDED, track, this.localPeer!);\n    });\n  }\n\n  private async stopEndedScreenshare(onStop: () => void) {\n    HMSLogger.d(this.TAG, `✅ Screenshare ended natively`);\n    await this.stopScreenShare();\n    onStop();\n  }\n\n  async stopScreenShare() {\n    HMSLogger.d(this.TAG, `✅ Screenshare ended from app`);\n    const screenTracks = this.localPeer?.auxiliaryTracks.filter(t => t.source === 'screen');\n    if (screenTracks) {\n      for (const track of screenTracks) {\n        await this.removeTrack(track.trackId);\n      }\n    }\n  }\n\n  async addTrack(track: MediaStreamTrack, source: HMSTrackSource = 'regular'): Promise<void> {\n    if (!track) {\n      HMSLogger.w(this.TAG, 'Please pass a valid MediaStreamTrack');\n      return;\n    }\n    if (!this.localPeer) {\n      throw ErrorFactory.GenericErrors.NotConnected(HMSAction.VALIDATION, 'No local peer present, cannot addTrack');\n    }\n    const isTrackPresent = this.localPeer.auxiliaryTracks.find(t => t.trackId === track.id);\n    if (isTrackPresent) {\n      return;\n    }\n\n    const type = track.kind;\n    const nativeStream = new MediaStream([track]);\n    const stream = new HMSLocalStream(nativeStream);\n\n    const TrackKlass = type === 'audio' ? HMSLocalAudioTrack : HMSLocalVideoTrack;\n    const hmsTrack = new TrackKlass(stream, track, source, this.eventBus);\n    this.setPlaylistSettings({\n      track,\n      hmsTrack,\n      source,\n    });\n\n    await this.transport?.publish([hmsTrack]);\n    hmsTrack.peerId = this.localPeer?.peerId;\n    this.localPeer?.auxiliaryTracks.push(hmsTrack);\n    this.listener?.onTrackUpdate(HMSTrackUpdate.TRACK_ADDED, hmsTrack, this.localPeer!);\n  }\n\n  async removeTrack(trackId: string, internal = false) {\n    if (!this.localPeer) {\n      throw ErrorFactory.GenericErrors.NotConnected(HMSAction.VALIDATION, 'No local peer present, cannot removeTrack');\n    }\n    const trackIndex = this.localPeer.auxiliaryTracks.findIndex(t => t.trackId === trackId);\n    if (trackIndex > -1) {\n      const track = this.localPeer.auxiliaryTracks[trackIndex];\n      if (track.isPublished) {\n        await this.transport!.unpublish([track]);\n      } else {\n        await track.cleanup();\n      }\n      // Stop local playback when playlist track is removed\n      if (!internal) {\n        this.stopPlaylist(track);\n      }\n      this.localPeer.auxiliaryTracks.splice(trackIndex, 1);\n      this.listener?.onTrackUpdate(HMSTrackUpdate.TRACK_REMOVED, track, this.localPeer);\n    } else {\n      HMSLogger.w(this.TAG, `No track found for ${trackId}`);\n    }\n  }\n\n  setAnalyticsLevel(level: HMSAnalyticsLevel) {\n    this.analyticsEventsService.level = level;\n  }\n\n  setLogLevel(level: HMSLogLevel) {\n    HMSLogger.level = level;\n  }\n\n  addAudioListener(audioListener: HMSAudioListener) {\n    this.audioListener = audioListener;\n    this.notificationManager.setAudioListener(audioListener);\n  }\n\n  addConnectionQualityListener(qualityListener: HMSConnectionQualityListener) {\n    this.notificationManager.setConnectionQualityListener(qualityListener);\n  }\n\n  async changeRole(forPeer: HMSPeer, toRole: string, force = false) {\n    if (!forPeer.role || forPeer.role.name === toRole) {\n      return;\n    }\n\n    await this.transport?.changeRoleOfPeer(forPeer, toRole, force);\n  }\n\n  async changeRoleOfPeer(forPeer: HMSPeer, toRole: string, force = false) {\n    if (!forPeer.role || forPeer.role.name === toRole) {\n      return;\n    }\n\n    await this.transport?.changeRoleOfPeer(forPeer, toRole, force);\n  }\n\n  async changeRoleOfPeersWithRoles(roles: HMSRole[], toRole: string) {\n    if (roles.length <= 0 || !toRole) {\n      return;\n    }\n\n    await this.transport?.changeRoleOfPeersWithRoles(roles, toRole);\n  }\n\n  async acceptChangeRole(request: HMSRoleChangeRequest) {\n    await this.transport?.acceptRoleChange(request);\n  }\n\n  async endRoom(lock: boolean, reason: string) {\n    if (!this.localPeer) {\n      throw ErrorFactory.GenericErrors.NotConnected(HMSAction.VALIDATION, 'No local peer present, cannot end room');\n    }\n    await this.transport?.endRoom(lock, reason);\n    await this.leave();\n  }\n\n  async removePeer(peer: HMSRemotePeer, reason: string) {\n    if (!this.localPeer) {\n      throw ErrorFactory.GenericErrors.NotConnected(HMSAction.VALIDATION, 'No local peer present, cannot remove peer');\n    }\n\n    if (!this.store.getPeerById(peer.peerId)) {\n      throw ErrorFactory.GenericErrors.ValidationFailed('Invalid peer, given peer not present in room', peer);\n    }\n    await this.transport?.removePeer(peer.peerId, reason);\n  }\n\n  async startRTMPOrRecording(params: RTMPRecordingConfig) {\n    if (!this.localPeer) {\n      throw ErrorFactory.GenericErrors.NotConnected(\n        HMSAction.VALIDATION,\n        'No local peer present, cannot start streaming or recording',\n      );\n    }\n    await this.transport?.startRTMPOrRecording(params);\n  }\n\n  async stopRTMPAndRecording() {\n    if (!this.localPeer) {\n      throw ErrorFactory.GenericErrors.NotConnected(\n        HMSAction.VALIDATION,\n        'No local peer present, cannot stop streaming or recording',\n      );\n    }\n    await this.transport?.stopRTMPOrRecording();\n  }\n\n  async startHLSStreaming(params?: HLSConfig) {\n    if (!this.localPeer) {\n      throw ErrorFactory.GenericErrors.NotConnected(\n        HMSAction.VALIDATION,\n        'No local peer present, cannot start HLS streaming',\n      );\n    }\n    await this.transport?.startHLSStreaming(params);\n  }\n\n  async stopHLSStreaming(params?: HLSConfig) {\n    if (!this.localPeer) {\n      throw ErrorFactory.GenericErrors.NotConnected(\n        HMSAction.VALIDATION,\n        'No local peer present, cannot stop HLS streaming',\n      );\n    }\n    await this.transport?.stopHLSStreaming(params);\n  }\n\n  async sendHLSTimedMetadata(metadataList: HLSTimedMetadata[]) {\n    this.validateJoined('sendHLSTimedMetadata');\n    await this.transport?.sendHLSTimedMetadata(metadataList);\n  }\n\n  async changeName(name: string) {\n    this.validateJoined('changeName');\n    await this.transport?.changeName(name);\n    this.notificationManager.updateLocalPeer({ name });\n  }\n\n  async changeMetadata(metadata: string) {\n    this.validateJoined('changeMetadata');\n    await this.transport?.changeMetadata(metadata);\n    this.notificationManager.updateLocalPeer({ metadata });\n  }\n\n  async setSessionMetadata(metadata: any) {\n    await this.transport.setSessionMetadata({ key: 'default', data: metadata });\n  }\n\n  async getSessionMetadata() {\n    const response = await this.transport.getSessionMetadata('default');\n    return response.data;\n  }\n\n  getRoles(): HMSRole[] {\n    return Object.values(this.store.getKnownRoles());\n  }\n\n  async changeTrackState(forRemoteTrack: HMSRemoteTrack, enabled: boolean) {\n    if (forRemoteTrack.type === HMSTrackType.VIDEO && forRemoteTrack.source !== 'regular') {\n      HMSLogger.w(this.TAG, `Muting non-regular video tracks is currently not supported`);\n      return;\n    }\n\n    if (forRemoteTrack.enabled === enabled) {\n      HMSLogger.w(this.TAG, `Aborting change track state, track already has enabled - ${enabled}`, forRemoteTrack);\n      return;\n    }\n\n    if (!this.store.getTrackById(forRemoteTrack.trackId)) {\n      throw ErrorFactory.GenericErrors.ValidationFailed('No track found for change track state', forRemoteTrack);\n    }\n\n    const peer = this.store.getPeerByTrackId(forRemoteTrack.trackId);\n\n    if (!peer) {\n      throw ErrorFactory.GenericErrors.ValidationFailed('No peer found for change track state', forRemoteTrack);\n    }\n\n    await this.transport?.changeTrackState({\n      requested_for: peer.peerId,\n      track_id: forRemoteTrack.trackId,\n      stream_id: forRemoteTrack.stream.id,\n      mute: !enabled,\n    });\n  }\n\n  async changeMultiTrackState(params: HMSChangeMultiTrackStateParams) {\n    if (typeof params.enabled !== 'boolean') {\n      throw ErrorFactory.GenericErrors.ValidationFailed('Pass a boolean for enabled');\n    }\n    const { enabled, roles, type, source } = params;\n    await this.transport?.changeMultiTrackState({\n      value: !enabled,\n      type,\n      source,\n      roles: roles?.map(role => role?.name),\n    });\n  }\n\n  setFrameworkInfo(frameworkInfo: HMSFrameworkInfo) {\n    this.frameworkInfo = frameworkInfo;\n  }\n\n  async attachVideo(track: HMSVideoTrack, videoElement: HTMLVideoElement) {\n    const config = this.store.getConfig();\n    if (config?.autoManageVideo) {\n      track.attach(videoElement);\n    } else {\n      await track.addSink(videoElement);\n    }\n  }\n\n  async detachVideo(track: HMSVideoTrack, videoElement: HTMLVideoElement) {\n    const config = this.store.getConfig();\n    if (config?.autoManageVideo) {\n      track.detach(videoElement);\n    } else {\n      await track.removeSink(videoElement);\n    }\n  }\n\n  private async publish(initialSettings?: InitialSettings, oldRole?: string) {\n    if ([this.store.getPublishParams(), !this.sdkState.published, !isNode].every(value => !!value)) {\n      // if preview asRole(oldRole) is used, use roleChangeManager to diff policy and publish, else do normal publish\n      const publishAction =\n        oldRole && oldRole !== this.localPeer?.role?.name\n          ? () =>\n              this.roleChangeManager?.diffRolesAndPublishTracks({\n                oldRole: this.store.getPolicyForRole(oldRole),\n                newRole: this.localPeer!.role!,\n              })\n          : () => this.getAndPublishTracks(initialSettings);\n\n      await publishAction?.()?.catch(error => {\n        HMSLogger.e(this.TAG, 'Error in publish', error);\n        this.listener?.onError(error);\n      });\n    }\n  }\n\n  private async getAndPublishTracks(initialSettings?: InitialSettings) {\n    const tracks = await this.localTrackManager.getTracksToPublish(initialSettings);\n    await this.setAndPublishTracks(tracks);\n    this.localPeer?.audioTrack?.initAudioLevelMonitor();\n    this.sdkState.published = true;\n  }\n\n  private handleLocalRoleUpdate = async ({ oldRole, newRole }: { oldRole: HMSRole; newRole: HMSRole }) => {\n    await this.transport.handleLocalRoleUpdate({ oldRole, newRole });\n    await this.roleChangeManager?.handleLocalPeerRoleUpdate({ oldRole, newRole });\n  };\n\n  private async setAndPublishTracks(tracks: HMSLocalTrack[]) {\n    for (const track of tracks) {\n      await this.transport.publish([track]);\n      this.setLocalPeerTrack(track);\n      this.listener?.onTrackUpdate(HMSTrackUpdate.TRACK_ADDED, track, this.localPeer!);\n    }\n    await this.initDeviceManagers();\n  }\n\n  private setLocalPeerTrack(track: HMSLocalTrack) {\n    track.peerId = this.localPeer?.peerId;\n    switch (track.type) {\n      case HMSTrackType.AUDIO:\n        this.localPeer!.audioTrack = track as HMSLocalAudioTrack;\n        break;\n\n      case HMSTrackType.VIDEO:\n        this.localPeer!.videoTrack = track as HMSLocalVideoTrack;\n        break;\n    }\n  }\n\n  private async initDeviceManagers() {\n    // No need to initialise and add listeners if already initialised in preview\n    if (this.sdkState.deviceManagersInitialised) {\n      return;\n    }\n    this.sdkState.deviceManagersInitialised = true;\n    await this.deviceManager.init();\n    if (!(await this.deviceManager.updateOutputDevice(this.store.getConfig()?.settings?.audioOutputDeviceId))) {\n      await this.deviceManager.updateOutputDevice(DeviceStorageManager.getSelection()?.audioOutput?.deviceId);\n    }\n    this.audioSinkManager.init(this.store.getConfig()?.audioSinkElementId);\n  }\n\n  private cleanDeviceManagers() {\n    this.eventBus.deviceChange.unsubscribe(this.handleDeviceChange);\n    this.eventBus.audioPluginFailed.unsubscribe(this.handleAudioPluginError);\n    this.eventBus.autoplayError.unsubscribe(this.handleAutoplayError);\n    this.deviceManager.cleanUp();\n    this.audioSinkManager.cleanUp();\n  }\n\n  private initPreviewTrackAudioLevelMonitor() {\n    const localAudioTrack = this.localPeer?.audioTrack;\n    localAudioTrack?.initAudioLevelMonitor();\n    this.eventBus.trackAudioLevelUpdate.subscribe(audioLevelUpdate => {\n      const hmsSpeakers =\n        audioLevelUpdate && audioLevelUpdate.track.trackId === localAudioTrack?.trackId\n          ? [{ audioLevel: audioLevelUpdate.audioLevel, peer: this.localPeer!, track: localAudioTrack! }]\n          : [];\n      this.store.updateSpeakers(hmsSpeakers);\n      this.audioListener?.onAudioLevelUpdate(hmsSpeakers);\n    });\n    this.eventBus.localAudioSilence.subscribe(this.sendAudioPresenceFailed);\n  }\n\n  private notifyJoin() {\n    const localPeer = this.store.getLocalPeer();\n    const room = this.store.getRoom();\n    if (!room) {\n      HMSLogger.w(this.TAG, 'notify join - room not present');\n      return;\n    }\n\n    room.joinedAt = new Date();\n    if (localPeer) {\n      localPeer.joinedAt = room.joinedAt;\n    }\n\n    if (localPeer?.role) {\n      this.analyticsTimer.end(TimedEvent.JOIN);\n      this.listener?.onJoin(room);\n      return;\n    }\n\n    return new Promise<void>((resolve, reject) => {\n      this.eventBus.policyChange.subscribeOnce(() => {\n        this.analyticsTimer.end(TimedEvent.JOIN);\n        this.listener?.onJoin(room);\n        resolve();\n      });\n\n      this.eventBus.leave.subscribeOnce(ex => {\n        reject(ex);\n      });\n    });\n  }\n\n  /**\n   * Init store and other managers, setup listeners, create local peer, room\n   * @param {HMSConfig} config\n   * @param {HMSPreviewListener} listener\n   */\n  private setUpPreview(config: HMSPreviewConfig, listener: HMSPreviewListener) {\n    this.listener = listener as unknown as HMSUpdateListener;\n    this.sdkState.isPreviewCalled = true;\n    this.sdkState.isPreviewInProgress = true;\n    const { roomId, userId, role } = decodeJWT(config.authToken);\n    this.commonSetup(config, roomId, listener);\n    this.store.setConfig(config);\n    /** set after config since we need config to get env for user agent */\n    this.store.createAndSetUserAgent(this.frameworkInfo);\n    this.createAndAddLocalPeerToStore(config, role, userId, config.asRole);\n    HMSLogger.d(this.TAG, 'SDK Store', this.store);\n  }\n\n  /**\n   * Set bitrate and dimensions for playlist track\n   */\n  private async setPlaylistSettings({\n    track,\n    hmsTrack,\n    source,\n  }: {\n    track: MediaStreamTrack;\n    hmsTrack: HMSLocalAudioTrack | HMSLocalVideoTrack;\n    source: string;\n  }) {\n    if (source === 'videoplaylist') {\n      const settings: { maxBitrate?: number; width?: number; height?: number } = {};\n      if (track.kind === 'audio') {\n        settings.maxBitrate = 64;\n      } else {\n        settings.maxBitrate = 1000;\n        const { width, height } = track.getSettings();\n        settings.width = width;\n        settings.height = height;\n      }\n      // TODO: rt update from policy once policy is updated\n      await hmsTrack.setSettings(settings);\n    } else if (source === 'audioplaylist') {\n      // TODO: rt update from policy once policy is updated\n      await hmsTrack.setSettings({ maxBitrate: 64 });\n    }\n  }\n\n  /**\n   * @param {HMSConfig} config\n   * @param {string} role\n   * @param {string} userId\n   */\n  private createAndAddLocalPeerToStore(config: HMSConfig, role: string, userId: string, asRole?: string) {\n    const policy = this.store.getPolicyForRole(role);\n    const asRolePolicy = asRole ? this.store.getPolicyForRole(asRole) : undefined;\n    const localPeer = new HMSLocalPeer({\n      name: config.userName || '',\n      customerUserId: userId,\n      metadata: config.metaData || '',\n      role: policy,\n      // default value is the original role if user didn't pass asRole in config\n      asRole: asRolePolicy || policy,\n    });\n\n    this.store.addPeer(localPeer);\n  }\n\n  /**\n   * init managers and set listeners - common for join and preview\n   * @param {HMSConfig} config\n   * @param {string} roomId\n   * @param {HMSPreviewListener | HMSUpdateListener} listener\n   */\n  private commonSetup(config: HMSConfig, roomId: string, listener: HMSPreviewListener | HMSUpdateListener) {\n    this.stringifyMetadata(config);\n    if (!config.initEndpoint) {\n      config.initEndpoint = 'https://prod-init.100ms.live';\n    }\n    this.errorListener = listener;\n    this.deviceChangeListener = listener;\n    this.initStoreAndManagers();\n\n    this.store.setErrorListener(this.errorListener);\n    if (!this.store.getRoom()) {\n      this.store.setRoom(new HMSRoom(roomId, this.store));\n    }\n  }\n\n  /**\n   * Remove deviceId's passed in config for join if preview was already called\n   * @param {HMSConfig} config\n   */\n  private removeDevicesFromConfig(config: HMSConfig) {\n    const storedConfig = this.store.getConfig();\n    if (storedConfig && config.settings) {\n      // preview was called\n      delete config.settings.audioOutputDeviceId;\n      delete config.settings.videoDeviceId;\n      delete config.settings.audioInputDeviceId;\n    }\n  }\n\n  /**\n   * Get screenshare based on policy and audioOnly flag\n   * @param {function} onStop\n   * @param config\n   * @returns\n   */\n  private async getScreenshareTracks(onStop: () => void, config?: HMSScreenShareConfig) {\n    const [videoTrack, audioTrack] = await this.localTrackManager.getLocalScreen(config);\n\n    const handleEnded = () => {\n      this.stopEndedScreenshare(onStop);\n    };\n\n    const tracks = [];\n    if (config?.audioOnly) {\n      videoTrack.nativeTrack.stop();\n      if (!audioTrack) {\n        throw ErrorFactory.TracksErrors.NothingToReturn(\n          HMSAction.TRACK,\n          'Select share audio when sharing screen',\n          'No audio found',\n        );\n      }\n      tracks.push(audioTrack);\n      audioTrack.nativeTrack.onended = handleEnded;\n    } else {\n      tracks.push(videoTrack);\n      videoTrack.nativeTrack.onended = handleEnded;\n      // audio track is not always available\n      if (audioTrack) {\n        tracks.push(audioTrack);\n      }\n    }\n    return tracks;\n  }\n\n  private sendAudioPresenceFailed = () => {\n    const error = ErrorFactory.TracksErrors.NoAudioDetected(HMSAction.PREVIEW);\n    HMSLogger.w(this.TAG, 'Audio Presence Failure', this.transportState, error);\n    // this.sendAnalyticsEvent(\n    //   AnalyticsEventFactory.audioDetectionFail(error, this.deviceManager.getCurrentSelection().audioInput),\n    // );\n    // this.listener?.onError(error);\n  };\n\n  private sendJoinAnalyticsEvent = (is_preview_called = false, error?: HMSException) => {\n    this.eventBus.analytics.publish(\n      AnalyticsEventFactory.join({\n        error,\n        ...this.analyticsTimer.getTimes(),\n        time: this.analyticsTimer.getTimeTaken(TimedEvent.JOIN),\n        is_preview_called,\n        retries_join: this.transport.joinRetryCount,\n      }),\n    );\n  };\n\n  private sendPreviewAnalyticsEvent = (error?: HMSException) => {\n    this.eventBus.analytics.publish(\n      AnalyticsEventFactory.preview({\n        error,\n        ...this.analyticsTimer.getTimes(),\n        time: this.analyticsTimer.getTimeTaken(TimedEvent.PREVIEW),\n      }),\n    );\n  };\n\n  private sendAnalyticsEvent = (event: AnalyticsEvent) => {\n    this.analyticsEventsService.queue(event).flush();\n  };\n\n  private stopPlaylist(track: HMSLocalTrack) {\n    if (track.source === 'audioplaylist') {\n      this.playlistManager.stop(HMSPlaylistType.audio);\n    } else if (track.source === 'videoplaylist') {\n      this.playlistManager.stop(HMSPlaylistType.video);\n    }\n  }\n}\n","import { getLocalStream } from './media';\nimport { getAudioTrack, getVideoTrack } from './track';\nimport { HMSAction } from '../error/ErrorFactory';\nimport { HMSException } from '../error/HMSException';\nimport { HMSAudioTrackSettingsBuilder } from '../media/settings/HMSAudioTrackSettings';\nimport { HMSVideoTrackSettingsBuilder } from '../media/settings/HMSVideoTrackSettings';\n\n// Errors out when there's any device error, returns false when there are no device errors.\nexport async function validateDeviceAV() {\n  const videoTrackSettings = new HMSVideoTrackSettingsBuilder().build();\n  const audioTrackSettings = new HMSAudioTrackSettingsBuilder().build();\n  /**\n   * Check audio failure.\n   * If audio failure - check AV failure.\n   * If AV failure - throw AV failure.\n   * If AV passed - throw audio failure.\n   *\n   * If audio passed - check video failure.\n   * If video failure - throw video failure.\n   * If video passed - no error - return false.\n   */\n  try {\n    const track = await getAudioTrack(audioTrackSettings);\n    track.stop();\n  } catch (audioError) {\n    if (isHMSDeviceError(audioError)) {\n      const stream = await getLocalStream({ audio: false, video: true });\n      stream.getTracks().forEach(track => track.stop());\n      throw audioError;\n    }\n  }\n\n  const track = await getVideoTrack(videoTrackSettings);\n  track.stop();\n  return false;\n}\n\nfunction isHMSDeviceError(error: any) {\n  return error instanceof HMSException && error.action === HMSAction.TRACK;\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n\n'use strict';\n\nimport {adapterFactory} from './adapter_factory.js';\n\nconst adapter =\n  adapterFactory({window: typeof window === 'undefined' ? undefined : window});\nexport default adapter;\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\nimport * as utils from './utils';\n\n// Browser shims.\nimport * as chromeShim from './chrome/chrome_shim';\nimport * as firefoxShim from './firefox/firefox_shim';\nimport * as safariShim from './safari/safari_shim';\nimport * as commonShim from './common_shim';\nimport * as sdp from 'sdp';\n\n// Shimming starts here.\nexport function adapterFactory({window} = {}, options = {\n  shimChrome: true,\n  shimFirefox: true,\n  shimSafari: true,\n}) {\n  // Utils.\n  const logging = utils.log;\n  const browserDetails = utils.detectBrowser(window);\n\n  const adapter = {\n    browserDetails,\n    commonShim,\n    extractVersion: utils.extractVersion,\n    disableLog: utils.disableLog,\n    disableWarnings: utils.disableWarnings,\n    // Expose sdp as a convenience. For production apps include directly.\n    sdp,\n  };\n\n  // Shim browser if found.\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection ||\n          !options.shimChrome) {\n        logging('Chrome shim is not included in this adapter release.');\n        return adapter;\n      }\n      if (browserDetails.version === null) {\n        logging('Chrome shim can not determine version, not shimming.');\n        return adapter;\n      }\n      logging('adapter.js shimming chrome.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = chromeShim;\n\n      // Must be called before shimPeerConnection.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      commonShim.shimParameterlessSetLocalDescription(window, browserDetails);\n\n      chromeShim.shimGetUserMedia(window, browserDetails);\n      chromeShim.shimMediaStream(window, browserDetails);\n      chromeShim.shimPeerConnection(window, browserDetails);\n      chromeShim.shimOnTrack(window, browserDetails);\n      chromeShim.shimAddTrackRemoveTrack(window, browserDetails);\n      chromeShim.shimGetSendersWithDtmf(window, browserDetails);\n      chromeShim.shimGetStats(window, browserDetails);\n      chromeShim.shimSenderReceiverGetStats(window, browserDetails);\n      chromeShim.fixNegotiationNeeded(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimRTCIceCandidateRelayProtocol(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection ||\n          !options.shimFirefox) {\n        logging('Firefox shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming firefox.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = firefoxShim;\n\n      // Must be called before shimPeerConnection.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      commonShim.shimParameterlessSetLocalDescription(window, browserDetails);\n\n      firefoxShim.shimGetUserMedia(window, browserDetails);\n      firefoxShim.shimPeerConnection(window, browserDetails);\n      firefoxShim.shimOnTrack(window, browserDetails);\n      firefoxShim.shimRemoveStream(window, browserDetails);\n      firefoxShim.shimSenderGetStats(window, browserDetails);\n      firefoxShim.shimReceiverGetStats(window, browserDetails);\n      firefoxShim.shimRTCDataChannel(window, browserDetails);\n      firefoxShim.shimAddTransceiver(window, browserDetails);\n      firefoxShim.shimGetParameters(window, browserDetails);\n      firefoxShim.shimCreateOffer(window, browserDetails);\n      firefoxShim.shimCreateAnswer(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      break;\n    case 'safari':\n      if (!safariShim || !options.shimSafari) {\n        logging('Safari shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming safari.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = safariShim;\n\n      // Must be called before shimCallbackAPI.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n      commonShim.shimParameterlessSetLocalDescription(window, browserDetails);\n\n      safariShim.shimRTCIceServerUrls(window, browserDetails);\n      safariShim.shimCreateOfferLegacy(window, browserDetails);\n      safariShim.shimCallbacksAPI(window, browserDetails);\n      safariShim.shimLocalStreamsAPI(window, browserDetails);\n      safariShim.shimRemoteStreamsAPI(window, browserDetails);\n      safariShim.shimTrackEventTransceiver(window, browserDetails);\n      safariShim.shimGetUserMedia(window, browserDetails);\n      safariShim.shimAudioContext(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimRTCIceCandidateRelayProtocol(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n    default:\n      logging('Unsupported browser!');\n      break;\n  }\n\n  return adapter;\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nlet logDisabled_ = true;\nlet deprecationWarnings_ = true;\n\n/**\n * Extract browser version out of the provided user agent string.\n *\n * @param {!string} uastring userAgent string.\n * @param {!string} expr Regular expression used as match criteria.\n * @param {!number} pos position in the version string to be returned.\n * @return {!number} browser version.\n */\nexport function extractVersion(uastring, expr, pos) {\n  const match = uastring.match(expr);\n  return match && match.length >= pos && parseInt(match[pos], 10);\n}\n\n// Wraps the peerconnection event eventNameToWrap in a function\n// which returns the modified event object (or false to prevent\n// the event).\nexport function wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  const nativeAddEventListener = proto.addEventListener;\n  proto.addEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap) {\n      return nativeAddEventListener.apply(this, arguments);\n    }\n    const wrappedCallback = (e) => {\n      const modifiedEvent = wrapper(e);\n      if (modifiedEvent) {\n        if (cb.handleEvent) {\n          cb.handleEvent(modifiedEvent);\n        } else {\n          cb(modifiedEvent);\n        }\n      }\n    };\n    this._eventMap = this._eventMap || {};\n    if (!this._eventMap[eventNameToWrap]) {\n      this._eventMap[eventNameToWrap] = new Map();\n    }\n    this._eventMap[eventNameToWrap].set(cb, wrappedCallback);\n    return nativeAddEventListener.apply(this, [nativeEventName,\n      wrappedCallback]);\n  };\n\n  const nativeRemoveEventListener = proto.removeEventListener;\n  proto.removeEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap || !this._eventMap\n        || !this._eventMap[eventNameToWrap]) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    if (!this._eventMap[eventNameToWrap].has(cb)) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    const unwrappedCb = this._eventMap[eventNameToWrap].get(cb);\n    this._eventMap[eventNameToWrap].delete(cb);\n    if (this._eventMap[eventNameToWrap].size === 0) {\n      delete this._eventMap[eventNameToWrap];\n    }\n    if (Object.keys(this._eventMap).length === 0) {\n      delete this._eventMap;\n    }\n    return nativeRemoveEventListener.apply(this, [nativeEventName,\n      unwrappedCb]);\n  };\n\n  Object.defineProperty(proto, 'on' + eventNameToWrap, {\n    get() {\n      return this['_on' + eventNameToWrap];\n    },\n    set(cb) {\n      if (this['_on' + eventNameToWrap]) {\n        this.removeEventListener(eventNameToWrap,\n          this['_on' + eventNameToWrap]);\n        delete this['_on' + eventNameToWrap];\n      }\n      if (cb) {\n        this.addEventListener(eventNameToWrap,\n          this['_on' + eventNameToWrap] = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n}\n\nexport function disableLog(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  logDisabled_ = bool;\n  return (bool) ? 'adapter.js logging disabled' :\n    'adapter.js logging enabled';\n}\n\n/**\n * Disable or enable deprecation warnings\n * @param {!boolean} bool set to true to disable warnings.\n */\nexport function disableWarnings(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  deprecationWarnings_ = !bool;\n  return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\n}\n\nexport function log() {\n  if (typeof window === 'object') {\n    if (logDisabled_) {\n      return;\n    }\n    if (typeof console !== 'undefined' && typeof console.log === 'function') {\n      console.log.apply(console, arguments);\n    }\n  }\n}\n\n/**\n * Shows a deprecation warning suggesting the modern and spec-compatible API.\n */\nexport function deprecated(oldMethod, newMethod) {\n  if (!deprecationWarnings_) {\n    return;\n  }\n  console.warn(oldMethod + ' is deprecated, please use ' + newMethod +\n      ' instead.');\n}\n\n/**\n * Browser detector.\n *\n * @return {object} result containing browser and version\n *     properties.\n */\nexport function detectBrowser(window) {\n  // Returned result object.\n  const result = {browser: null, version: null};\n\n  // Fail early if it's not a browser\n  if (typeof window === 'undefined' || !window.navigator) {\n    result.browser = 'Not a browser.';\n    return result;\n  }\n\n  const {navigator} = window;\n\n  if (navigator.mozGetUserMedia) { // Firefox.\n    result.browser = 'firefox';\n    result.version = extractVersion(navigator.userAgent,\n      /Firefox\\/(\\d+)\\./, 1);\n  } else if (navigator.webkitGetUserMedia ||\n      (window.isSecureContext === false && window.webkitRTCPeerConnection)) {\n    // Chrome, Chromium, Webview, Opera.\n    // Version matches Chrome/WebRTC version.\n    // Chrome 74 removed webkitGetUserMedia on http as well so we need the\n    // more complicated fallback to webkitRTCPeerConnection.\n    result.browser = 'chrome';\n    result.version = extractVersion(navigator.userAgent,\n      /Chrom(e|ium)\\/(\\d+)\\./, 2);\n  } else if (window.RTCPeerConnection &&\n      navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) { // Safari.\n    result.browser = 'safari';\n    result.version = extractVersion(navigator.userAgent,\n      /AppleWebKit\\/(\\d+)\\./, 1);\n    result.supportsUnifiedPlan = window.RTCRtpTransceiver &&\n        'currentDirection' in window.RTCRtpTransceiver.prototype;\n  } else { // Default fallthrough: not supported.\n    result.browser = 'Not a supported browser.';\n    return result;\n  }\n\n  return result;\n}\n\n/**\n * Checks if something is an object.\n *\n * @param {*} val The something you want to check.\n * @return true if val is an object, false otherwise.\n */\nfunction isObject(val) {\n  return Object.prototype.toString.call(val) === '[object Object]';\n}\n\n/**\n * Remove all empty objects and undefined values\n * from a nested object -- an enhanced and vanilla version\n * of Lodash's `compact`.\n */\nexport function compactObject(data) {\n  if (!isObject(data)) {\n    return data;\n  }\n\n  return Object.keys(data).reduce(function(accumulator, key) {\n    const isObj = isObject(data[key]);\n    const value = isObj ? compactObject(data[key]) : data[key];\n    const isEmptyObject = isObj && !Object.keys(value).length;\n    if (value === undefined || isEmptyObject) {\n      return accumulator;\n    }\n    return Object.assign(accumulator, {[key]: value});\n  }, {});\n}\n\n/* iterates the stats graph recursively. */\nexport function walkStats(stats, base, resultSet) {\n  if (!base || resultSet.has(base.id)) {\n    return;\n  }\n  resultSet.set(base.id, base);\n  Object.keys(base).forEach(name => {\n    if (name.endsWith('Id')) {\n      walkStats(stats, stats.get(base[name]), resultSet);\n    } else if (name.endsWith('Ids')) {\n      base[name].forEach(id => {\n        walkStats(stats, stats.get(id), resultSet);\n      });\n    }\n  });\n}\n\n/* filter getStats for a sender/receiver track. */\nexport function filterStats(result, track, outbound) {\n  const streamStatsType = outbound ? 'outbound-rtp' : 'inbound-rtp';\n  const filteredResult = new Map();\n  if (track === null) {\n    return filteredResult;\n  }\n  const trackStats = [];\n  result.forEach(value => {\n    if (value.type === 'track' &&\n        value.trackIdentifier === track.id) {\n      trackStats.push(value);\n    }\n  });\n  trackStats.forEach(trackStat => {\n    result.forEach(stats => {\n      if (stats.type === streamStatsType && stats.trackId === trackStat.id) {\n        walkStats(result, stats, filteredResult);\n      }\n    });\n  });\n  return filteredResult;\n}\n\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\n\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimMediaStream(window) {\n  window.MediaStream = window.MediaStream || window.webkitMediaStream;\n}\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n      window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n      get() {\n        return this._ontrack;\n      },\n      set(f) {\n        if (this._ontrack) {\n          this.removeEventListener('track', this._ontrack);\n        }\n        this.addEventListener('track', this._ontrack = f);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    const origSetRemoteDescription =\n        window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        if (!this._ontrackpoly) {\n          this._ontrackpoly = (e) => {\n            // onaddstream does not fire when a track is added to an existing\n            // stream. But stream.onaddtrack is implemented so we use that.\n            e.stream.addEventListener('addtrack', te => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === te.track.id);\n              } else {\n                receiver = {track: te.track};\n              }\n\n              const event = new Event('track');\n              event.track = te.track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n            e.stream.getTracks().forEach(track => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === track.id);\n              } else {\n                receiver = {track};\n              }\n              const event = new Event('track');\n              event.track = track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n          };\n          this.addEventListener('addstream', this._ontrackpoly);\n        }\n        return origSetRemoteDescription.apply(this, arguments);\n      };\n  } else {\n    // even if RTCRtpTransceiver is in window, it is only used and\n    // emitted in unified-plan. Unfortunately this means we need\n    // to unconditionally wrap the event.\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      if (!e.transceiver) {\n        Object.defineProperty(e, 'transceiver',\n          {value: {receiver: e.receiver}});\n      }\n      return e;\n    });\n  }\n}\n\nexport function shimGetSendersWithDtmf(window) {\n  // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\n  if (typeof window === 'object' && window.RTCPeerConnection &&\n      !('getSenders' in window.RTCPeerConnection.prototype) &&\n      'createDTMFSender' in window.RTCPeerConnection.prototype) {\n    const shimSenderWithDtmf = function(pc, track) {\n      return {\n        track,\n        get dtmf() {\n          if (this._dtmf === undefined) {\n            if (track.kind === 'audio') {\n              this._dtmf = pc.createDTMFSender(track);\n            } else {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        },\n        _pc: pc\n      };\n    };\n\n    // augment addTrack when getSenders is not available.\n    if (!window.RTCPeerConnection.prototype.getSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        this._senders = this._senders || [];\n        return this._senders.slice(); // return a copy of the internal state.\n      };\n      const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n      window.RTCPeerConnection.prototype.addTrack =\n        function addTrack(track, stream) {\n          let sender = origAddTrack.apply(this, arguments);\n          if (!sender) {\n            sender = shimSenderWithDtmf(this, track);\n            this._senders.push(sender);\n          }\n          return sender;\n        };\n\n      const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n      window.RTCPeerConnection.prototype.removeTrack =\n        function removeTrack(sender) {\n          origRemoveTrack.apply(this, arguments);\n          const idx = this._senders.indexOf(sender);\n          if (idx !== -1) {\n            this._senders.splice(idx, 1);\n          }\n        };\n    }\n    const origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      this._senders = this._senders || [];\n      origAddStream.apply(this, [stream]);\n      stream.getTracks().forEach(track => {\n        this._senders.push(shimSenderWithDtmf(this, track));\n      });\n    };\n\n    const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        this._senders = this._senders || [];\n        origRemoveStream.apply(this, [stream]);\n\n        stream.getTracks().forEach(track => {\n          const sender = this._senders.find(s => s.track === track);\n          if (sender) { // remove sender\n            this._senders.splice(this._senders.indexOf(sender), 1);\n          }\n        });\n      };\n  } else if (typeof window === 'object' && window.RTCPeerConnection &&\n             'getSenders' in window.RTCPeerConnection.prototype &&\n             'createDTMFSender' in window.RTCPeerConnection.prototype &&\n             window.RTCRtpSender &&\n             !('dtmf' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = this._pc.createDTMFSender(this.track);\n          } else {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n}\n\nexport function shimGetStats(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n\n    // If selector is a function then we are in the old style stats so just\n    // pass back the original getStats format to avoid breaking old users.\n    if (arguments.length > 0 && typeof selector === 'function') {\n      return origGetStats.apply(this, arguments);\n    }\n\n    // When spec-style getStats is supported, return those when called with\n    // either no arguments or the selector argument is null.\n    if (origGetStats.length === 0 && (arguments.length === 0 ||\n        typeof selector !== 'function')) {\n      return origGetStats.apply(this, []);\n    }\n\n    const fixChromeStats_ = function(response) {\n      const standardReport = {};\n      const reports = response.result();\n      reports.forEach(report => {\n        const standardStats = {\n          id: report.id,\n          timestamp: report.timestamp,\n          type: {\n            localcandidate: 'local-candidate',\n            remotecandidate: 'remote-candidate'\n          }[report.type] || report.type\n        };\n        report.names().forEach(name => {\n          standardStats[name] = report.stat(name);\n        });\n        standardReport[standardStats.id] = standardStats;\n      });\n\n      return standardReport;\n    };\n\n    // shim getStats with maplike support\n    const makeMapStats = function(stats) {\n      return new Map(Object.keys(stats).map(key => [key, stats[key]]));\n    };\n\n    if (arguments.length >= 2) {\n      const successCallbackWrapper_ = function(response) {\n        onSucc(makeMapStats(fixChromeStats_(response)));\n      };\n\n      return origGetStats.apply(this, [successCallbackWrapper_,\n        selector]);\n    }\n\n    // promise-support\n    return new Promise((resolve, reject) => {\n      origGetStats.apply(this, [\n        function(response) {\n          resolve(makeMapStats(fixChromeStats_(response)));\n        }, reject]);\n    }).then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender && window.RTCRtpReceiver)) {\n    return;\n  }\n\n  // shim sender stats.\n  if (!('getStats' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    if (origGetSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        const senders = origGetSenders.apply(this, []);\n        senders.forEach(sender => sender._pc = this);\n        return senders;\n      };\n    }\n\n    const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n    if (origAddTrack) {\n      window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n        const sender = origAddTrack.apply(this, arguments);\n        sender._pc = this;\n        return sender;\n      };\n    }\n    window.RTCRtpSender.prototype.getStats = function getStats() {\n      const sender = this;\n      return this._pc.getStats().then(result =>\n        /* Note: this will include stats of all senders that\n         *   send a track with the same id as sender.track as\n         *   it is not possible to identify the RTCRtpSender.\n         */\n        utils.filterStats(result, sender.track, true));\n    };\n  }\n\n  // shim receiver stats.\n  if (!('getStats' in window.RTCRtpReceiver.prototype)) {\n    const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n    if (origGetReceivers) {\n      window.RTCPeerConnection.prototype.getReceivers =\n        function getReceivers() {\n          const receivers = origGetReceivers.apply(this, []);\n          receivers.forEach(receiver => receiver._pc = this);\n          return receivers;\n        };\n    }\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      e.receiver._pc = e.srcElement;\n      return e;\n    });\n    window.RTCRtpReceiver.prototype.getStats = function getStats() {\n      const receiver = this;\n      return this._pc.getStats().then(result =>\n        utils.filterStats(result, receiver.track, false));\n    };\n  }\n\n  if (!('getStats' in window.RTCRtpSender.prototype &&\n      'getStats' in window.RTCRtpReceiver.prototype)) {\n    return;\n  }\n\n  // shim RTCPeerConnection.getStats(track).\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    if (arguments.length > 0 &&\n        arguments[0] instanceof window.MediaStreamTrack) {\n      const track = arguments[0];\n      let sender;\n      let receiver;\n      let err;\n      this.getSenders().forEach(s => {\n        if (s.track === track) {\n          if (sender) {\n            err = true;\n          } else {\n            sender = s;\n          }\n        }\n      });\n      this.getReceivers().forEach(r => {\n        if (r.track === track) {\n          if (receiver) {\n            err = true;\n          } else {\n            receiver = r;\n          }\n        }\n        return r.track === track;\n      });\n      if (err || (sender && receiver)) {\n        return Promise.reject(new DOMException(\n          'There are more than one sender or receiver for the track.',\n          'InvalidAccessError'));\n      } else if (sender) {\n        return sender.getStats();\n      } else if (receiver) {\n        return receiver.getStats();\n      }\n      return Promise.reject(new DOMException(\n        'There is no sender or receiver for the track.',\n        'InvalidAccessError'));\n    }\n    return origGetStats.apply(this, arguments);\n  };\n}\n\nexport function shimAddTrackRemoveTrackWithNative(window) {\n  // shim addTrack/removeTrack with native variants in order to make\n  // the interactions with legacy getLocalStreams behave as in other browsers.\n  // Keeps a mapping stream.id => [stream, rtpsenders...]\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      return Object.keys(this._shimmedLocalStreams)\n        .map(streamId => this._shimmedLocalStreams[streamId][0]);\n    };\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (!stream) {\n        return origAddTrack.apply(this, arguments);\n      }\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n      const sender = origAddTrack.apply(this, arguments);\n      if (!this._shimmedLocalStreams[stream.id]) {\n        this._shimmedLocalStreams[stream.id] = [stream, sender];\n      } else if (this._shimmedLocalStreams[stream.id].indexOf(sender) === -1) {\n        this._shimmedLocalStreams[stream.id].push(sender);\n      }\n      return sender;\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n          'InvalidAccessError');\n      }\n    });\n    const existingSenders = this.getSenders();\n    origAddStream.apply(this, arguments);\n    const newSenders = this.getSenders()\n      .filter(newSender => existingSenders.indexOf(newSender) === -1);\n    this._shimmedLocalStreams[stream.id] = [stream].concat(newSenders);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      delete this._shimmedLocalStreams[stream.id];\n      return origRemoveStream.apply(this, arguments);\n    };\n\n  const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      if (sender) {\n        Object.keys(this._shimmedLocalStreams).forEach(streamId => {\n          const idx = this._shimmedLocalStreams[streamId].indexOf(sender);\n          if (idx !== -1) {\n            this._shimmedLocalStreams[streamId].splice(idx, 1);\n          }\n          if (this._shimmedLocalStreams[streamId].length === 1) {\n            delete this._shimmedLocalStreams[streamId];\n          }\n        });\n      }\n      return origRemoveTrack.apply(this, arguments);\n    };\n}\n\nexport function shimAddTrackRemoveTrack(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // shim addTrack and removeTrack.\n  if (window.RTCPeerConnection.prototype.addTrack &&\n      browserDetails.version >= 65) {\n    return shimAddTrackRemoveTrackWithNative(window);\n  }\n\n  // also shim pc.getLocalStreams when addTrack is shimmed\n  // to return the original streams.\n  const origGetLocalStreams = window.RTCPeerConnection.prototype\n    .getLocalStreams;\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      const nativeStreams = origGetLocalStreams.apply(this);\n      this._reverseStreams = this._reverseStreams || {};\n      return nativeStreams.map(stream => this._reverseStreams[stream.id]);\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n          'InvalidAccessError');\n      }\n    });\n    // Add identity mapping for consistency with addTrack.\n    // Unless this is being used with a stream from addTrack.\n    if (!this._reverseStreams[stream.id]) {\n      const newStream = new window.MediaStream(stream.getTracks());\n      this._streams[stream.id] = newStream;\n      this._reverseStreams[newStream.id] = stream;\n      stream = newStream;\n    }\n    origAddStream.apply(this, [stream]);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n\n      origRemoveStream.apply(this, [(this._streams[stream.id] || stream)]);\n      delete this._reverseStreams[(this._streams[stream.id] ?\n        this._streams[stream.id].id : stream.id)];\n      delete this._streams[stream.id];\n    };\n\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      const streams = [].slice.call(arguments, 1);\n      if (streams.length !== 1 ||\n          !streams[0].getTracks().find(t => t === track)) {\n        // this is not fully correct but all we can manage without\n        // [[associated MediaStreams]] internal slot.\n        throw new DOMException(\n          'The adapter.js addTrack polyfill only supports a single ' +\n          ' stream which is associated with the specified track.',\n          'NotSupportedError');\n      }\n\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n          'InvalidAccessError');\n      }\n\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n      const oldStream = this._streams[stream.id];\n      if (oldStream) {\n        // this is using odd Chrome behaviour, use with caution:\n        // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\n        // Note: we rely on the high-level addTrack/dtmf shim to\n        // create the sender with a dtmf sender.\n        oldStream.addTrack(track);\n\n        // Trigger ONN async.\n        Promise.resolve().then(() => {\n          this.dispatchEvent(new Event('negotiationneeded'));\n        });\n      } else {\n        const newStream = new window.MediaStream([track]);\n        this._streams[stream.id] = newStream;\n        this._reverseStreams[newStream.id] = stream;\n        this.addStream(newStream);\n      }\n      return this.getSenders().find(s => s.track === track);\n    };\n\n  // replace the internal stream id with the external one and\n  // vice versa.\n  function replaceInternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(internalStream.id, 'g'),\n        externalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  function replaceExternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(externalStream.id, 'g'),\n        internalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  ['createOffer', 'createAnswer'].forEach(function(method) {\n    const nativeMethod = window.RTCPeerConnection.prototype[method];\n    const methodObj = {[method]() {\n      const args = arguments;\n      const isLegacyCall = arguments.length &&\n          typeof arguments[0] === 'function';\n      if (isLegacyCall) {\n        return nativeMethod.apply(this, [\n          (description) => {\n            const desc = replaceInternalStreamId(this, description);\n            args[0].apply(null, [desc]);\n          },\n          (err) => {\n            if (args[1]) {\n              args[1].apply(null, err);\n            }\n          }, arguments[2]\n        ]);\n      }\n      return nativeMethod.apply(this, arguments)\n        .then(description => replaceInternalStreamId(this, description));\n    }};\n    window.RTCPeerConnection.prototype[method] = methodObj[method];\n  });\n\n  const origSetLocalDescription =\n      window.RTCPeerConnection.prototype.setLocalDescription;\n  window.RTCPeerConnection.prototype.setLocalDescription =\n    function setLocalDescription() {\n      if (!arguments.length || !arguments[0].type) {\n        return origSetLocalDescription.apply(this, arguments);\n      }\n      arguments[0] = replaceExternalStreamId(this, arguments[0]);\n      return origSetLocalDescription.apply(this, arguments);\n    };\n\n  // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\n\n  const origLocalDescription = Object.getOwnPropertyDescriptor(\n    window.RTCPeerConnection.prototype, 'localDescription');\n  Object.defineProperty(window.RTCPeerConnection.prototype,\n    'localDescription', {\n      get() {\n        const description = origLocalDescription.get.apply(this);\n        if (description.type === '') {\n          return description;\n        }\n        return replaceInternalStreamId(this, description);\n      }\n    });\n\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      // We can not yet check for sender instanceof RTCRtpSender\n      // since we shim RTPSender. So we check if sender._pc is set.\n      if (!sender._pc) {\n        throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' +\n            'does not implement interface RTCRtpSender.', 'TypeError');\n      }\n      const isLocal = sender._pc === this;\n      if (!isLocal) {\n        throw new DOMException('Sender was not created by this connection.',\n          'InvalidAccessError');\n      }\n\n      // Search for the native stream the senders track belongs to.\n      this._streams = this._streams || {};\n      let stream;\n      Object.keys(this._streams).forEach(streamid => {\n        const hasTrack = this._streams[streamid].getTracks()\n          .find(track => sender.track === track);\n        if (hasTrack) {\n          stream = this._streams[streamid];\n        }\n      });\n\n      if (stream) {\n        if (stream.getTracks().length === 1) {\n          // if this is the last track of the stream, remove the stream. This\n          // takes care of any shimmed _senders.\n          this.removeStream(this._reverseStreams[stream.id]);\n        } else {\n          // relying on the same odd chrome behaviour as above.\n          stream.removeTrack(sender.track);\n        }\n        this.dispatchEvent(new Event('negotiationneeded'));\n      }\n    };\n}\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (!window.RTCPeerConnection && window.webkitRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.webkitRTCPeerConnection;\n  }\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n  if (browserDetails.version < 53) {\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n      .forEach(function(method) {\n        const nativeMethod = window.RTCPeerConnection.prototype[method];\n        const methodObj = {[method]() {\n          arguments[0] = new ((method === 'addIceCandidate') ?\n            window.RTCIceCandidate :\n            window.RTCSessionDescription)(arguments[0]);\n          return nativeMethod.apply(this, arguments);\n        }};\n        window.RTCPeerConnection.prototype[method] = methodObj[method];\n      });\n  }\n}\n\n// Attempt to fix ONN in plan-b mode.\nexport function fixNegotiationNeeded(window, browserDetails) {\n  utils.wrapPeerConnectionEvent(window, 'negotiationneeded', e => {\n    const pc = e.target;\n    if (browserDetails.version < 72 || (pc.getConfiguration &&\n        pc.getConfiguration().sdpSemantics === 'plan-b')) {\n      if (pc.signalingState !== 'stable') {\n        return;\n      }\n    }\n    return e;\n  });\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\nconst logging = utils.log;\n\nexport function shimGetUserMedia(window, browserDetails) {\n  const navigator = window && window.navigator;\n\n  if (!navigator.mediaDevices) {\n    return;\n  }\n\n  const constraintsToChrome_ = function(c) {\n    if (typeof c !== 'object' || c.mandatory || c.optional) {\n      return c;\n    }\n    const cc = {};\n    Object.keys(c).forEach(key => {\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n        return;\n      }\n      const r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\n      if (r.exact !== undefined && typeof r.exact === 'number') {\n        r.min = r.max = r.exact;\n      }\n      const oldname_ = function(prefix, name) {\n        if (prefix) {\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n        }\n        return (name === 'deviceId') ? 'sourceId' : name;\n      };\n      if (r.ideal !== undefined) {\n        cc.optional = cc.optional || [];\n        let oc = {};\n        if (typeof r.ideal === 'number') {\n          oc[oldname_('min', key)] = r.ideal;\n          cc.optional.push(oc);\n          oc = {};\n          oc[oldname_('max', key)] = r.ideal;\n          cc.optional.push(oc);\n        } else {\n          oc[oldname_('', key)] = r.ideal;\n          cc.optional.push(oc);\n        }\n      }\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\n        cc.mandatory = cc.mandatory || {};\n        cc.mandatory[oldname_('', key)] = r.exact;\n      } else {\n        ['min', 'max'].forEach(mix => {\n          if (r[mix] !== undefined) {\n            cc.mandatory = cc.mandatory || {};\n            cc.mandatory[oldname_(mix, key)] = r[mix];\n          }\n        });\n      }\n    });\n    if (c.advanced) {\n      cc.optional = (cc.optional || []).concat(c.advanced);\n    }\n    return cc;\n  };\n\n  const shimConstraints_ = function(constraints, func) {\n    if (browserDetails.version >= 61) {\n      return func(constraints);\n    }\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (constraints && typeof constraints.audio === 'object') {\n      const remap = function(obj, a, b) {\n        if (a in obj && !(b in obj)) {\n          obj[b] = obj[a];\n          delete obj[a];\n        }\n      };\n      constraints = JSON.parse(JSON.stringify(constraints));\n      remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');\n      remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');\n      constraints.audio = constraintsToChrome_(constraints.audio);\n    }\n    if (constraints && typeof constraints.video === 'object') {\n      // Shim facingMode for mobile & surface pro.\n      let face = constraints.video.facingMode;\n      face = face && ((typeof face === 'object') ? face : {ideal: face});\n      const getSupportedFacingModeLies = browserDetails.version < 66;\n\n      if ((face && (face.exact === 'user' || face.exact === 'environment' ||\n                    face.ideal === 'user' || face.ideal === 'environment')) &&\n          !(navigator.mediaDevices.getSupportedConstraints &&\n            navigator.mediaDevices.getSupportedConstraints().facingMode &&\n            !getSupportedFacingModeLies)) {\n        delete constraints.video.facingMode;\n        let matches;\n        if (face.exact === 'environment' || face.ideal === 'environment') {\n          matches = ['back', 'rear'];\n        } else if (face.exact === 'user' || face.ideal === 'user') {\n          matches = ['front'];\n        }\n        if (matches) {\n          // Look for matches in label, or use last cam for back (typical).\n          return navigator.mediaDevices.enumerateDevices()\n            .then(devices => {\n              devices = devices.filter(d => d.kind === 'videoinput');\n              let dev = devices.find(d => matches.some(match =>\n                d.label.toLowerCase().includes(match)));\n              if (!dev && devices.length && matches.includes('back')) {\n                dev = devices[devices.length - 1]; // more likely the back cam\n              }\n              if (dev) {\n                constraints.video.deviceId = face.exact\n                  ? {exact: dev.deviceId}\n                  : {ideal: dev.deviceId};\n              }\n              constraints.video = constraintsToChrome_(constraints.video);\n              logging('chrome: ' + JSON.stringify(constraints));\n              return func(constraints);\n            });\n        }\n      }\n      constraints.video = constraintsToChrome_(constraints.video);\n    }\n    logging('chrome: ' + JSON.stringify(constraints));\n    return func(constraints);\n  };\n\n  const shimError_ = function(e) {\n    if (browserDetails.version >= 64) {\n      return e;\n    }\n    return {\n      name: {\n        PermissionDeniedError: 'NotAllowedError',\n        PermissionDismissedError: 'NotAllowedError',\n        InvalidStateError: 'NotAllowedError',\n        DevicesNotFoundError: 'NotFoundError',\n        ConstraintNotSatisfiedError: 'OverconstrainedError',\n        TrackStartError: 'NotReadableError',\n        MediaDeviceFailedDueToShutdown: 'NotAllowedError',\n        MediaDeviceKillSwitchOn: 'NotAllowedError',\n        TabCaptureError: 'AbortError',\n        ScreenCaptureError: 'AbortError',\n        DeviceCaptureError: 'AbortError'\n      }[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint || e.constraintName,\n      toString() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  const getUserMedia_ = function(constraints, onSuccess, onError) {\n    shimConstraints_(constraints, c => {\n      navigator.webkitGetUserMedia(c, onSuccess, e => {\n        if (onError) {\n          onError(shimError_(e));\n        }\n      });\n    });\n  };\n  navigator.getUserMedia = getUserMedia_.bind(navigator);\n\n  // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n  // function which returns a Promise, it does not accept spec-style\n  // constraints.\n  if (navigator.mediaDevices.getUserMedia) {\n    const origGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(cs) {\n      return shimConstraints_(cs, c => origGetUserMedia(c).then(stream => {\n        if (c.audio && !stream.getAudioTracks().length ||\n            c.video && !stream.getVideoTracks().length) {\n          stream.getTracks().forEach(track => {\n            track.stop();\n          });\n          throw new DOMException('', 'NotFoundError');\n        }\n        return stream;\n      }, e => Promise.reject(shimError_(e))));\n    };\n  }\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nexport function shimGetDisplayMedia(window, getSourceId) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  // getSourceId is a function that returns a promise resolving with\n  // the sourceId of the screen/window/tab to be shared.\n  if (typeof getSourceId !== 'function') {\n    console.error('shimGetDisplayMedia: getSourceId argument is not ' +\n        'a function');\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    function getDisplayMedia(constraints) {\n      return getSourceId(constraints)\n        .then(sourceId => {\n          const widthSpecified = constraints.video && constraints.video.width;\n          const heightSpecified = constraints.video &&\n            constraints.video.height;\n          const frameRateSpecified = constraints.video &&\n            constraints.video.frameRate;\n          constraints.video = {\n            mandatory: {\n              chromeMediaSource: 'desktop',\n              chromeMediaSourceId: sourceId,\n              maxFrameRate: frameRateSpecified || 3\n            }\n          };\n          if (widthSpecified) {\n            constraints.video.mandatory.maxWidth = widthSpecified;\n          }\n          if (heightSpecified) {\n            constraints.video.mandatory.maxHeight = heightSpecified;\n          }\n          return window.navigator.mediaDevices.getUserMedia(constraints);\n        });\n    };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      ('receiver' in window.RTCTrackEvent.prototype) &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (typeof window !== 'object' ||\n      !(window.RTCPeerConnection || window.mozRTCPeerConnection)) {\n    return; // probably media.peerconnection.enabled=false in about:config\n  }\n  if (!window.RTCPeerConnection && window.mozRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.mozRTCPeerConnection;\n  }\n\n  if (browserDetails.version < 53) {\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n      .forEach(function(method) {\n        const nativeMethod = window.RTCPeerConnection.prototype[method];\n        const methodObj = {[method]() {\n          arguments[0] = new ((method === 'addIceCandidate') ?\n            window.RTCIceCandidate :\n            window.RTCSessionDescription)(arguments[0]);\n          return nativeMethod.apply(this, arguments);\n        }};\n        window.RTCPeerConnection.prototype[method] = methodObj[method];\n      });\n  }\n\n  const modernStatsTypes = {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  };\n\n  const nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n    return nativeGetStats.apply(this, [selector || null])\n      .then(stats => {\n        if (browserDetails.version < 53 && !onSucc) {\n          // Shim only promise getStats with spec-hyphens in type names\n          // Leave callback version alone; misc old uses of forEach before Map\n          try {\n            stats.forEach(stat => {\n              stat.type = modernStatsTypes[stat.type] || stat.type;\n            });\n          } catch (e) {\n            if (e.name !== 'TypeError') {\n              throw e;\n            }\n            // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n            stats.forEach((stat, i) => {\n              stats.set(i, Object.assign({}, stat, {\n                type: modernStatsTypes[stat.type] || stat.type\n              }));\n            });\n          }\n        }\n        return stats;\n      })\n      .then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {\n    return;\n  }\n  const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n  if (origGetSenders) {\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n  }\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  if (origAddTrack) {\n    window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n      const sender = origAddTrack.apply(this, arguments);\n      sender._pc = this;\n      return sender;\n    };\n  }\n  window.RTCRtpSender.prototype.getStats = function getStats() {\n    return this.track ? this._pc.getStats(this.track) :\n      Promise.resolve(new Map());\n  };\n}\n\nexport function shimReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {\n    return;\n  }\n  const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n  if (origGetReceivers) {\n    window.RTCPeerConnection.prototype.getReceivers = function getReceivers() {\n      const receivers = origGetReceivers.apply(this, []);\n      receivers.forEach(receiver => receiver._pc = this);\n      return receivers;\n    };\n  }\n  utils.wrapPeerConnectionEvent(window, 'track', e => {\n    e.receiver._pc = e.srcElement;\n    return e;\n  });\n  window.RTCRtpReceiver.prototype.getStats = function getStats() {\n    return this._pc.getStats(this.track);\n  };\n}\n\nexport function shimRemoveStream(window) {\n  if (!window.RTCPeerConnection ||\n      'removeStream' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      utils.deprecated('removeStream', 'removeTrack');\n      this.getSenders().forEach(sender => {\n        if (sender.track && stream.getTracks().includes(sender.track)) {\n          this.removeTrack(sender);\n        }\n      });\n    };\n}\n\nexport function shimRTCDataChannel(window) {\n  // rename DataChannel to RTCDataChannel (native fix in FF60):\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851\n  if (window.DataChannel && !window.RTCDataChannel) {\n    window.RTCDataChannel = window.DataChannel;\n  }\n}\n\nexport function shimAddTransceiver(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origAddTransceiver = window.RTCPeerConnection.prototype.addTransceiver;\n  if (origAddTransceiver) {\n    window.RTCPeerConnection.prototype.addTransceiver =\n      function addTransceiver() {\n        this.setParametersPromises = [];\n        // WebIDL input coercion and validation\n        let sendEncodings = arguments[1] && arguments[1].sendEncodings;\n        if (sendEncodings === undefined) {\n          sendEncodings = [];\n        }\n        sendEncodings = [...sendEncodings];\n        const shouldPerformCheck = sendEncodings.length > 0;\n        if (shouldPerformCheck) {\n          // If sendEncodings params are provided, validate grammar\n          sendEncodings.forEach((encodingParam) => {\n            if ('rid' in encodingParam) {\n              const ridRegex = /^[a-z0-9]{0,16}$/i;\n              if (!ridRegex.test(encodingParam.rid)) {\n                throw new TypeError('Invalid RID value provided.');\n              }\n            }\n            if ('scaleResolutionDownBy' in encodingParam) {\n              if (!(parseFloat(encodingParam.scaleResolutionDownBy) >= 1.0)) {\n                throw new RangeError('scale_resolution_down_by must be >= 1.0');\n              }\n            }\n            if ('maxFramerate' in encodingParam) {\n              if (!(parseFloat(encodingParam.maxFramerate) >= 0)) {\n                throw new RangeError('max_framerate must be >= 0.0');\n              }\n            }\n          });\n        }\n        const transceiver = origAddTransceiver.apply(this, arguments);\n        if (shouldPerformCheck) {\n          // Check if the init options were applied. If not we do this in an\n          // asynchronous way and save the promise reference in a global object.\n          // This is an ugly hack, but at the same time is way more robust than\n          // checking the sender parameters before and after the createOffer\n          // Also note that after the createoffer we are not 100% sure that\n          // the params were asynchronously applied so we might miss the\n          // opportunity to recreate offer.\n          const {sender} = transceiver;\n          const params = sender.getParameters();\n          if (!('encodings' in params) ||\n              // Avoid being fooled by patched getParameters() below.\n              (params.encodings.length === 1 &&\n               Object.keys(params.encodings[0]).length === 0)) {\n            params.encodings = sendEncodings;\n            sender.sendEncodings = sendEncodings;\n            this.setParametersPromises.push(sender.setParameters(params)\n              .then(() => {\n                delete sender.sendEncodings;\n              }).catch(() => {\n                delete sender.sendEncodings;\n              })\n            );\n          }\n        }\n        return transceiver;\n      };\n  }\n}\n\nexport function shimGetParameters(window) {\n  if (!(typeof window === 'object' && window.RTCRtpSender)) {\n    return;\n  }\n  const origGetParameters = window.RTCRtpSender.prototype.getParameters;\n  if (origGetParameters) {\n    window.RTCRtpSender.prototype.getParameters =\n      function getParameters() {\n        const params = origGetParameters.apply(this, arguments);\n        if (!('encodings' in params)) {\n          params.encodings = [].concat(this.sendEncodings || [{}]);\n        }\n        return params;\n      };\n  }\n}\n\nexport function shimCreateOffer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer = function createOffer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n        .then(() => {\n          return origCreateOffer.apply(this, arguments);\n        })\n        .finally(() => {\n          this.setParametersPromises = [];\n        });\n    }\n    return origCreateOffer.apply(this, arguments);\n  };\n}\n\nexport function shimCreateAnswer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateAnswer = window.RTCPeerConnection.prototype.createAnswer;\n  window.RTCPeerConnection.prototype.createAnswer = function createAnswer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n        .then(() => {\n          return origCreateAnswer.apply(this, arguments);\n        })\n        .finally(() => {\n          this.setParametersPromises = [];\n        });\n    }\n    return origCreateAnswer.apply(this, arguments);\n  };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n\nexport function shimGetUserMedia(window, browserDetails) {\n  const navigator = window && window.navigator;\n  const MediaStreamTrack = window && window.MediaStreamTrack;\n\n  navigator.getUserMedia = function(constraints, onSuccess, onError) {\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\n    utils.deprecated('navigator.getUserMedia',\n      'navigator.mediaDevices.getUserMedia');\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  };\n\n  if (!(browserDetails.version > 55 &&\n      'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\n    const remap = function(obj, a, b) {\n      if (a in obj && !(b in obj)) {\n        obj[b] = obj[a];\n        delete obj[a];\n      }\n    };\n\n    const nativeGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      if (typeof c === 'object' && typeof c.audio === 'object') {\n        c = JSON.parse(JSON.stringify(c));\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\n      }\n      return nativeGetUserMedia(c);\n    };\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\n      const nativeGetSettings = MediaStreamTrack.prototype.getSettings;\n      MediaStreamTrack.prototype.getSettings = function() {\n        const obj = nativeGetSettings.apply(this, arguments);\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\n        return obj;\n      };\n    }\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\n      const nativeApplyConstraints =\n        MediaStreamTrack.prototype.applyConstraints;\n      MediaStreamTrack.prototype.applyConstraints = function(c) {\n        if (this.kind === 'audio' && typeof c === 'object') {\n          c = JSON.parse(JSON.stringify(c));\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\n        }\n        return nativeApplyConstraints.apply(this, [c]);\n      };\n    }\n  }\n}\n","/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window, preferredMediaSource) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    function getDisplayMedia(constraints) {\n      if (!(constraints && constraints.video)) {\n        const err = new DOMException('getDisplayMedia without video ' +\n            'constraints is undefined');\n        err.name = 'NotFoundError';\n        // from https://heycam.github.io/webidl/#idl-DOMException-error-names\n        err.code = 8;\n        return Promise.reject(err);\n      }\n      if (constraints.video === true) {\n        constraints.video = {mediaSource: preferredMediaSource};\n      } else {\n        constraints.video.mediaSource = preferredMediaSource;\n      }\n      return window.navigator.mediaDevices.getUserMedia(constraints);\n    };\n}\n","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n'use strict';\nimport * as utils from '../utils';\n\nexport function shimLocalStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getLocalStreams =\n      function getLocalStreams() {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        return this._localStreams;\n      };\n  }\n  if (!('addStream' in window.RTCPeerConnection.prototype)) {\n    const _addTrack = window.RTCPeerConnection.prototype.addTrack;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      if (!this._localStreams.includes(stream)) {\n        this._localStreams.push(stream);\n      }\n      // Try to emulate Chrome's behaviour of adding in audio-video order.\n      // Safari orders by track id.\n      stream.getAudioTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n      stream.getVideoTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n    };\n\n    window.RTCPeerConnection.prototype.addTrack =\n      function addTrack(track, ...streams) {\n        if (streams) {\n          streams.forEach((stream) => {\n            if (!this._localStreams) {\n              this._localStreams = [stream];\n            } else if (!this._localStreams.includes(stream)) {\n              this._localStreams.push(stream);\n            }\n          });\n        }\n        return _addTrack.apply(this, arguments);\n      };\n  }\n  if (!('removeStream' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        const index = this._localStreams.indexOf(stream);\n        if (index === -1) {\n          return;\n        }\n        this._localStreams.splice(index, 1);\n        const tracks = stream.getTracks();\n        this.getSenders().forEach(sender => {\n          if (tracks.includes(sender.track)) {\n            this.removeTrack(sender);\n          }\n        });\n      };\n  }\n}\n\nexport function shimRemoteStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getRemoteStreams =\n      function getRemoteStreams() {\n        return this._remoteStreams ? this._remoteStreams : [];\n      };\n  }\n  if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\n      get() {\n        return this._onaddstream;\n      },\n      set(f) {\n        if (this._onaddstream) {\n          this.removeEventListener('addstream', this._onaddstream);\n          this.removeEventListener('track', this._onaddstreampoly);\n        }\n        this.addEventListener('addstream', this._onaddstream = f);\n        this.addEventListener('track', this._onaddstreampoly = (e) => {\n          e.streams.forEach(stream => {\n            if (!this._remoteStreams) {\n              this._remoteStreams = [];\n            }\n            if (this._remoteStreams.includes(stream)) {\n              return;\n            }\n            this._remoteStreams.push(stream);\n            const event = new Event('addstream');\n            event.stream = stream;\n            this.dispatchEvent(event);\n          });\n        });\n      }\n    });\n    const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        const pc = this;\n        if (!this._onaddstreampoly) {\n          this.addEventListener('track', this._onaddstreampoly = function(e) {\n            e.streams.forEach(stream => {\n              if (!pc._remoteStreams) {\n                pc._remoteStreams = [];\n              }\n              if (pc._remoteStreams.indexOf(stream) >= 0) {\n                return;\n              }\n              pc._remoteStreams.push(stream);\n              const event = new Event('addstream');\n              event.stream = stream;\n              pc.dispatchEvent(event);\n            });\n          });\n        }\n        return origSetRemoteDescription.apply(pc, arguments);\n      };\n  }\n}\n\nexport function shimCallbacksAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  const prototype = window.RTCPeerConnection.prototype;\n  const origCreateOffer = prototype.createOffer;\n  const origCreateAnswer = prototype.createAnswer;\n  const setLocalDescription = prototype.setLocalDescription;\n  const setRemoteDescription = prototype.setRemoteDescription;\n  const addIceCandidate = prototype.addIceCandidate;\n\n  prototype.createOffer =\n    function createOffer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateOffer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  prototype.createAnswer =\n    function createAnswer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateAnswer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  let withCallback = function(description, successCallback, failureCallback) {\n    const promise = setLocalDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setLocalDescription = withCallback;\n\n  withCallback = function(description, successCallback, failureCallback) {\n    const promise = setRemoteDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setRemoteDescription = withCallback;\n\n  withCallback = function(candidate, successCallback, failureCallback) {\n    const promise = addIceCandidate.apply(this, [candidate]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.addIceCandidate = withCallback;\n}\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    // shim not needed in Safari 12.1\n    const mediaDevices = navigator.mediaDevices;\n    const _getUserMedia = mediaDevices.getUserMedia.bind(mediaDevices);\n    navigator.mediaDevices.getUserMedia = (constraints) => {\n      return _getUserMedia(shimConstraints(constraints));\n    };\n  }\n\n  if (!navigator.getUserMedia && navigator.mediaDevices &&\n    navigator.mediaDevices.getUserMedia) {\n    navigator.getUserMedia = function getUserMedia(constraints, cb, errcb) {\n      navigator.mediaDevices.getUserMedia(constraints)\n        .then(cb, errcb);\n    }.bind(navigator);\n  }\n}\n\nexport function shimConstraints(constraints) {\n  if (constraints && constraints.video !== undefined) {\n    return Object.assign({},\n      constraints,\n      {video: utils.compactObject(constraints.video)}\n    );\n  }\n\n  return constraints;\n}\n\nexport function shimRTCIceServerUrls(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n  const OrigPeerConnection = window.RTCPeerConnection;\n  window.RTCPeerConnection =\n    function RTCPeerConnection(pcConfig, pcConstraints) {\n      if (pcConfig && pcConfig.iceServers) {\n        const newIceServers = [];\n        for (let i = 0; i < pcConfig.iceServers.length; i++) {\n          let server = pcConfig.iceServers[i];\n          if (server.urls === undefined && server.url) {\n            utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n            server = JSON.parse(JSON.stringify(server));\n            server.urls = server.url;\n            delete server.url;\n            newIceServers.push(server);\n          } else {\n            newIceServers.push(pcConfig.iceServers[i]);\n          }\n        }\n        pcConfig.iceServers = newIceServers;\n      }\n      return new OrigPeerConnection(pcConfig, pcConstraints);\n    };\n  window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n  // wrap static methods. Currently just generateCertificate.\n  if ('generateCertificate' in OrigPeerConnection) {\n    Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n      get() {\n        return OrigPeerConnection.generateCertificate;\n      }\n    });\n  }\n}\n\nexport function shimTrackEventTransceiver(window) {\n  // Add event.transceiver member over deprecated event.receiver\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      'receiver' in window.RTCTrackEvent.prototype &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimCreateOfferLegacy(window) {\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer =\n    function createOffer(offerOptions) {\n      if (offerOptions) {\n        if (typeof offerOptions.offerToReceiveAudio !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveAudio =\n            !!offerOptions.offerToReceiveAudio;\n        }\n        const audioTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'audio');\n        if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {\n          if (audioTransceiver.direction === 'sendrecv') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('sendonly');\n            } else {\n              audioTransceiver.direction = 'sendonly';\n            }\n          } else if (audioTransceiver.direction === 'recvonly') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('inactive');\n            } else {\n              audioTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveAudio === true &&\n            !audioTransceiver) {\n          this.addTransceiver('audio', {direction: 'recvonly'});\n        }\n\n        if (typeof offerOptions.offerToReceiveVideo !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveVideo =\n            !!offerOptions.offerToReceiveVideo;\n        }\n        const videoTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'video');\n        if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {\n          if (videoTransceiver.direction === 'sendrecv') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('sendonly');\n            } else {\n              videoTransceiver.direction = 'sendonly';\n            }\n          } else if (videoTransceiver.direction === 'recvonly') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('inactive');\n            } else {\n              videoTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveVideo === true &&\n            !videoTransceiver) {\n          this.addTransceiver('video', {direction: 'recvonly'});\n        }\n      }\n      return origCreateOffer.apply(this, arguments);\n    };\n}\n\nexport function shimAudioContext(window) {\n  if (typeof window !== 'object' || window.AudioContext) {\n    return;\n  }\n  window.AudioContext = window.webkitAudioContext;\n}\n\n","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport SDPUtils from 'sdp';\nimport * as utils from './utils';\n\nexport function shimRTCIceCandidate(window) {\n  // foundation is arbitrarily chosen as an indicator for full support for\n  // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\n  if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'foundation' in\n      window.RTCIceCandidate.prototype)) {\n    return;\n  }\n\n  const NativeRTCIceCandidate = window.RTCIceCandidate;\n  window.RTCIceCandidate = function RTCIceCandidate(args) {\n    // Remove the a= which shouldn't be part of the candidate string.\n    if (typeof args === 'object' && args.candidate &&\n        args.candidate.indexOf('a=') === 0) {\n      args = JSON.parse(JSON.stringify(args));\n      args.candidate = args.candidate.substring(2);\n    }\n\n    if (args.candidate && args.candidate.length) {\n      // Augment the native candidate with the parsed fields.\n      const nativeCandidate = new NativeRTCIceCandidate(args);\n      const parsedCandidate = SDPUtils.parseCandidate(args.candidate);\n      for (const key in parsedCandidate) {\n        if (!(key in nativeCandidate)) {\n          Object.defineProperty(nativeCandidate, key,\n            {value: parsedCandidate[key]});\n        }\n      }\n\n      // Override serializer to not serialize the extra attributes.\n      nativeCandidate.toJSON = function toJSON() {\n        return {\n          candidate: nativeCandidate.candidate,\n          sdpMid: nativeCandidate.sdpMid,\n          sdpMLineIndex: nativeCandidate.sdpMLineIndex,\n          usernameFragment: nativeCandidate.usernameFragment,\n        };\n      };\n      return nativeCandidate;\n    }\n    return new NativeRTCIceCandidate(args);\n  };\n  window.RTCIceCandidate.prototype = NativeRTCIceCandidate.prototype;\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', e => {\n    if (e.candidate) {\n      Object.defineProperty(e, 'candidate', {\n        value: new window.RTCIceCandidate(e.candidate),\n        writable: 'false'\n      });\n    }\n    return e;\n  });\n}\n\nexport function shimRTCIceCandidateRelayProtocol(window) {\n  if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'relayProtocol' in\n      window.RTCIceCandidate.prototype)) {\n    return;\n  }\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', e => {\n    if (e.candidate) {\n      const parsedCandidate = SDPUtils.parseCandidate(e.candidate.candidate);\n      if (parsedCandidate.type === 'relay') {\n        // This is a libwebrtc-specific mapping of local type preference\n        // to relayProtocol.\n        e.candidate.relayProtocol = {\n          0: 'tls',\n          1: 'tcp',\n          2: 'udp',\n        }[parsedCandidate.priority >> 24];\n      }\n    }\n    return e;\n  });\n}\n\nexport function shimMaxMessageSize(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  if (!('sctp' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'sctp', {\n      get() {\n        return typeof this._sctp === 'undefined' ? null : this._sctp;\n      }\n    });\n  }\n\n  const sctpInDescription = function(description) {\n    if (!description || !description.sdp) {\n      return false;\n    }\n    const sections = SDPUtils.splitSections(description.sdp);\n    sections.shift();\n    return sections.some(mediaSection => {\n      const mLine = SDPUtils.parseMLine(mediaSection);\n      return mLine && mLine.kind === 'application'\n          && mLine.protocol.indexOf('SCTP') !== -1;\n    });\n  };\n\n  const getRemoteFirefoxVersion = function(description) {\n    // TODO: Is there a better solution for detecting Firefox?\n    const match = description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\n    if (match === null || match.length < 2) {\n      return -1;\n    }\n    const version = parseInt(match[1], 10);\n    // Test for NaN (yes, this is ugly)\n    return version !== version ? -1 : version;\n  };\n\n  const getCanSendMaxMessageSize = function(remoteIsFirefox) {\n    // Every implementation we know can send at least 64 KiB.\n    // Note: Although Chrome is technically able to send up to 256 KiB, the\n    //       data does not reach the other peer reliably.\n    //       See: https://bugs.chromium.org/p/webrtc/issues/detail?id=8419\n    let canSendMaxMessageSize = 65536;\n    if (browserDetails.browser === 'firefox') {\n      if (browserDetails.version < 57) {\n        if (remoteIsFirefox === -1) {\n          // FF < 57 will send in 16 KiB chunks using the deprecated PPID\n          // fragmentation.\n          canSendMaxMessageSize = 16384;\n        } else {\n          // However, other FF (and RAWRTC) can reassemble PPID-fragmented\n          // messages. Thus, supporting ~2 GiB when sending.\n          canSendMaxMessageSize = 2147483637;\n        }\n      } else if (browserDetails.version < 60) {\n        // Currently, all FF >= 57 will reset the remote maximum message size\n        // to the default value when a data channel is created at a later\n        // stage. :(\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n        canSendMaxMessageSize =\n          browserDetails.version === 57 ? 65535 : 65536;\n      } else {\n        // FF >= 60 supports sending ~2 GiB\n        canSendMaxMessageSize = 2147483637;\n      }\n    }\n    return canSendMaxMessageSize;\n  };\n\n  const getMaxMessageSize = function(description, remoteIsFirefox) {\n    // Note: 65536 bytes is the default value from the SDP spec. Also,\n    //       every implementation we know supports receiving 65536 bytes.\n    let maxMessageSize = 65536;\n\n    // FF 57 has a slightly incorrect default remote max message size, so\n    // we need to adjust it here to avoid a failure when sending.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1425697\n    if (browserDetails.browser === 'firefox'\n         && browserDetails.version === 57) {\n      maxMessageSize = 65535;\n    }\n\n    const match = SDPUtils.matchPrefix(description.sdp,\n      'a=max-message-size:');\n    if (match.length > 0) {\n      maxMessageSize = parseInt(match[0].substring(19), 10);\n    } else if (browserDetails.browser === 'firefox' &&\n                remoteIsFirefox !== -1) {\n      // If the maximum message size is not present in the remote SDP and\n      // both local and remote are Firefox, the remote peer can receive\n      // ~2 GiB.\n      maxMessageSize = 2147483637;\n    }\n    return maxMessageSize;\n  };\n\n  const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription =\n    function setRemoteDescription() {\n      this._sctp = null;\n      // Chrome decided to not expose .sctp in plan-b mode.\n      // As usual, adapter.js has to do an 'ugly worakaround'\n      // to cover up the mess.\n      if (browserDetails.browser === 'chrome' && browserDetails.version >= 76) {\n        const {sdpSemantics} = this.getConfiguration();\n        if (sdpSemantics === 'plan-b') {\n          Object.defineProperty(this, 'sctp', {\n            get() {\n              return typeof this._sctp === 'undefined' ? null : this._sctp;\n            },\n            enumerable: true,\n            configurable: true,\n          });\n        }\n      }\n\n      if (sctpInDescription(arguments[0])) {\n        // Check if the remote is FF.\n        const isFirefox = getRemoteFirefoxVersion(arguments[0]);\n\n        // Get the maximum message size the local peer is capable of sending\n        const canSendMMS = getCanSendMaxMessageSize(isFirefox);\n\n        // Get the maximum message size of the remote peer.\n        const remoteMMS = getMaxMessageSize(arguments[0], isFirefox);\n\n        // Determine final maximum message size\n        let maxMessageSize;\n        if (canSendMMS === 0 && remoteMMS === 0) {\n          maxMessageSize = Number.POSITIVE_INFINITY;\n        } else if (canSendMMS === 0 || remoteMMS === 0) {\n          maxMessageSize = Math.max(canSendMMS, remoteMMS);\n        } else {\n          maxMessageSize = Math.min(canSendMMS, remoteMMS);\n        }\n\n        // Create a dummy RTCSctpTransport object and the 'maxMessageSize'\n        // attribute.\n        const sctp = {};\n        Object.defineProperty(sctp, 'maxMessageSize', {\n          get() {\n            return maxMessageSize;\n          }\n        });\n        this._sctp = sctp;\n      }\n\n      return origSetRemoteDescription.apply(this, arguments);\n    };\n}\n\nexport function shimSendThrowTypeError(window) {\n  if (!(window.RTCPeerConnection &&\n      'createDataChannel' in window.RTCPeerConnection.prototype)) {\n    return;\n  }\n\n  // Note: Although Firefox >= 57 has a native implementation, the maximum\n  //       message size can be reset for all data channels at a later stage.\n  //       See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n\n  function wrapDcSend(dc, pc) {\n    const origDataChannelSend = dc.send;\n    dc.send = function send() {\n      const data = arguments[0];\n      const length = data.length || data.size || data.byteLength;\n      if (dc.readyState === 'open' &&\n          pc.sctp && length > pc.sctp.maxMessageSize) {\n        throw new TypeError('Message too large (can send a maximum of ' +\n          pc.sctp.maxMessageSize + ' bytes)');\n      }\n      return origDataChannelSend.apply(dc, arguments);\n    };\n  }\n  const origCreateDataChannel =\n    window.RTCPeerConnection.prototype.createDataChannel;\n  window.RTCPeerConnection.prototype.createDataChannel =\n    function createDataChannel() {\n      const dataChannel = origCreateDataChannel.apply(this, arguments);\n      wrapDcSend(dataChannel, this);\n      return dataChannel;\n    };\n  utils.wrapPeerConnectionEvent(window, 'datachannel', e => {\n    wrapDcSend(e.channel, e.target);\n    return e;\n  });\n}\n\n\n/* shims RTCConnectionState by pretending it is the same as iceConnectionState.\n * See https://bugs.chromium.org/p/webrtc/issues/detail?id=6145#c12\n * for why this is a valid hack in Chrome. In Firefox it is slightly incorrect\n * since DTLS failures would be hidden. See\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1265827\n * for the Firefox tracking bug.\n */\nexport function shimConnectionState(window) {\n  if (!window.RTCPeerConnection ||\n      'connectionState' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  Object.defineProperty(proto, 'connectionState', {\n    get() {\n      return {\n        completed: 'connected',\n        checking: 'connecting'\n      }[this.iceConnectionState] || this.iceConnectionState;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(proto, 'onconnectionstatechange', {\n    get() {\n      return this._onconnectionstatechange || null;\n    },\n    set(cb) {\n      if (this._onconnectionstatechange) {\n        this.removeEventListener('connectionstatechange',\n          this._onconnectionstatechange);\n        delete this._onconnectionstatechange;\n      }\n      if (cb) {\n        this.addEventListener('connectionstatechange',\n          this._onconnectionstatechange = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ['setLocalDescription', 'setRemoteDescription'].forEach((method) => {\n    const origMethod = proto[method];\n    proto[method] = function() {\n      if (!this._connectionstatechangepoly) {\n        this._connectionstatechangepoly = e => {\n          const pc = e.target;\n          if (pc._lastConnectionState !== pc.connectionState) {\n            pc._lastConnectionState = pc.connectionState;\n            const newEvent = new Event('connectionstatechange', e);\n            pc.dispatchEvent(newEvent);\n          }\n          return e;\n        };\n        this.addEventListener('iceconnectionstatechange',\n          this._connectionstatechangepoly);\n      }\n      return origMethod.apply(this, arguments);\n    };\n  });\n}\n\nexport function removeExtmapAllowMixed(window, browserDetails) {\n  /* remove a=extmap-allow-mixed for webrtc.org < M71 */\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  if (browserDetails.browser === 'chrome' && browserDetails.version >= 71) {\n    return;\n  }\n  if (browserDetails.browser === 'safari' && browserDetails.version >= 605) {\n    return;\n  }\n  const nativeSRD = window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription =\n  function setRemoteDescription(desc) {\n    if (desc && desc.sdp && desc.sdp.indexOf('\\na=extmap-allow-mixed') !== -1) {\n      const sdp = desc.sdp.split('\\n').filter((line) => {\n        return line.trim() !== 'a=extmap-allow-mixed';\n      }).join('\\n');\n      // Safari enforces read-only-ness of RTCSessionDescription fields.\n      if (window.RTCSessionDescription &&\n          desc instanceof window.RTCSessionDescription) {\n        arguments[0] = new window.RTCSessionDescription({\n          type: desc.type,\n          sdp,\n        });\n      } else {\n        desc.sdp = sdp;\n      }\n    }\n    return nativeSRD.apply(this, arguments);\n  };\n}\n\nexport function shimAddIceCandidateNullOrEmpty(window, browserDetails) {\n  // Support for addIceCandidate(null or undefined)\n  // as well as addIceCandidate({candidate: \"\", ...})\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=978582\n  // Note: must be called before other polyfills which change the signature.\n  if (!(window.RTCPeerConnection && window.RTCPeerConnection.prototype)) {\n    return;\n  }\n  const nativeAddIceCandidate =\n      window.RTCPeerConnection.prototype.addIceCandidate;\n  if (!nativeAddIceCandidate || nativeAddIceCandidate.length === 0) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.addIceCandidate =\n    function addIceCandidate() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      // Firefox 68+ emits and processes {candidate: \"\", ...}, ignore\n      // in older versions.\n      // Native support for ignoring exists for Chrome M77+.\n      // Safari ignores as well, exact version unknown but works in the same\n      // version that also ignores addIceCandidate(null).\n      if (((browserDetails.browser === 'chrome' && browserDetails.version < 78)\n           || (browserDetails.browser === 'firefox'\n               && browserDetails.version < 68)\n           || (browserDetails.browser === 'safari'))\n          && arguments[0] && arguments[0].candidate === '') {\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n}\n\n// Note: Make sure to call this ahead of APIs that modify\n// setLocalDescription.length\nexport function shimParameterlessSetLocalDescription(window, browserDetails) {\n  if (!(window.RTCPeerConnection && window.RTCPeerConnection.prototype)) {\n    return;\n  }\n  const nativeSetLocalDescription =\n      window.RTCPeerConnection.prototype.setLocalDescription;\n  if (!nativeSetLocalDescription || nativeSetLocalDescription.length === 0) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.setLocalDescription =\n    function setLocalDescription() {\n      let desc = arguments[0] || {};\n      if (typeof desc !== 'object' || (desc.type && desc.sdp)) {\n        return nativeSetLocalDescription.apply(this, arguments);\n      }\n      // The remaining steps should technically happen when SLD comes off the\n      // RTCPeerConnection's operations chain (not ahead of going on it), but\n      // this is too difficult to shim. Instead, this shim only covers the\n      // common case where the operations chain is empty. This is imperfect, but\n      // should cover many cases. Rationale: Even if we can't reduce the glare\n      // window to zero on imperfect implementations, there's value in tapping\n      // into the perfect negotiation pattern that several browsers support.\n      desc = {type: desc.type, sdp: desc.sdp};\n      if (!desc.type) {\n        switch (this.signalingState) {\n          case 'stable':\n          case 'have-local-offer':\n          case 'have-remote-pranswer':\n            desc.type = 'offer';\n            break;\n          default:\n            desc.type = 'answer';\n            break;\n        }\n      }\n      if (desc.sdp || (desc.type !== 'offer' && desc.type !== 'answer')) {\n        return nativeSetLocalDescription.apply(this, [desc]);\n      }\n      const func = desc.type === 'offer' ? this.createOffer : this.createAnswer;\n      return func.apply(this)\n        .then(d => nativeSetLocalDescription.apply(this, [d]));\n    };\n}\n","/* eslint-env node */\n'use strict';\n\n// SDP helpers.\nconst SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function() {\n  return Math.random().toString(36).substring(2, 12);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function(blob) {\n  return blob.trim().split('\\n').map(line => line.trim());\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function(blob) {\n  const parts = blob.split('\\nm=');\n  return parts.map((part, index) => (index > 0 ?\n    'm=' + part : part).trim() + '\\r\\n');\n};\n\n// Returns the session description.\nSDPUtils.getDescription = function(blob) {\n  const sections = SDPUtils.splitSections(blob);\n  return sections && sections[0];\n};\n\n// Returns the individual media sections.\nSDPUtils.getMediaSections = function(blob) {\n  const sections = SDPUtils.splitSections(blob);\n  sections.shift();\n  return sections;\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function(blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(line => line.indexOf(prefix) === 0);\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\n// Input can be prefixed with a=.\nSDPUtils.parseCandidate = function(line) {\n  let parts;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  const candidate = {\n    foundation: parts[0],\n    component: {1: 'rtp', 2: 'rtcp'}[parts[1]] || parts[1],\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    address: parts[4], // address is an alias for ip.\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7],\n  };\n\n  for (let i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compatibility.\n        candidate.usernameFragment = parts[i + 1];\n        break;\n      default: // extension handling, in particular ufrag. Don't overwrite.\n        if (candidate[parts[i]] === undefined) {\n          candidate[parts[i]] = parts[i + 1];\n        }\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\n// This does not include the a= prefix!\nSDPUtils.writeCandidate = function(candidate) {\n  const sdp = [];\n  sdp.push(candidate.foundation);\n\n  const component = candidate.component;\n  if (component === 'rtp') {\n    sdp.push(1);\n  } else if (component === 'rtcp') {\n    sdp.push(2);\n  } else {\n    sdp.push(component);\n  }\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.address || candidate.ip);\n  sdp.push(candidate.port);\n\n  const type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress &&\n      candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress);\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort);\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  if (candidate.usernameFragment || candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.usernameFragment || candidate.ufrag);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an ice-options line, returns an array of option tags.\n// Sample input:\n// a=ice-options:foo bar\nSDPUtils.parseIceOptions = function(line) {\n  return line.substring(14).split(' ');\n};\n\n// Parses a rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function(line) {\n  let parts = line.substring(9).split(' ');\n  const parsed = {\n    payloadType: parseInt(parts.shift(), 10), // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  // legacy alias, got renamed back to channels in ORTC.\n  parsed.numChannels = parsed.channels;\n  return parsed;\n};\n\n// Generates a rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function(codec) {\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  const channels = codec.channels || codec.numChannels || 1;\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n      (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n};\n\n// Parses a extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function(line) {\n  const parts = line.substring(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1],\n    attributes: parts.slice(2).join(' '),\n  };\n};\n\n// Generates an extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function(headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\n        ? '/' + headerExtension.direction\n        : '') +\n      ' ' + headerExtension.uri +\n      (headerExtension.attributes ? ' ' + headerExtension.attributes : '') +\n      '\\r\\n';\n};\n\n// Parses a fmtp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\nSDPUtils.parseFmtp = function(line) {\n  const parsed = {};\n  let kv;\n  const parts = line.substring(line.indexOf(' ') + 1).split(';');\n  for (let j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates a fmtp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function(codec) {\n  let line = '';\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    const params = [];\n    Object.keys(codec.parameters).forEach(param => {\n      if (codec.parameters[param] !== undefined) {\n        params.push(param + '=' + codec.parameters[param]);\n      } else {\n        params.push(param);\n      }\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses a rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function(line) {\n  const parts = line.substring(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' '),\n  };\n};\n\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function(codec) {\n  let lines = '';\n  let pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(fb => {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n          '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses a RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function(line) {\n  const sp = line.indexOf(' ');\n  const parts = {\n    ssrc: parseInt(line.substring(7, sp), 10),\n  };\n  const colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substring(sp + 1, colon);\n    parts.value = line.substring(colon + 1);\n  } else {\n    parts.attribute = line.substring(sp + 1);\n  }\n  return parts;\n};\n\n// Parse a ssrc-group line (see RFC 5576). Sample input:\n// a=ssrc-group:semantics 12 34\nSDPUtils.parseSsrcGroup = function(line) {\n  const parts = line.substring(13).split(' ');\n  return {\n    semantics: parts.shift(),\n    ssrcs: parts.map(ssrc => parseInt(ssrc, 10)),\n  };\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// Returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function(mediaSection) {\n  const mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substring(6);\n  }\n};\n\n// Parses a fingerprint line for DTLS-SRTP.\nSDPUtils.parseFingerprint = function(line) {\n  const parts = line.substring(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n    value: parts[1].toUpperCase(), // the definition is upper-case in RFC 4572.\n  };\n};\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n  const lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=fingerprint:');\n  // Note: a=setup line is ignored since we use the 'auto' role in Edge.\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint),\n  };\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function(params, setupType) {\n  let sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(fp => {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n\n// Parses a=crypto lines into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#dictionary-rtcsrtpsdesparameters-members\nSDPUtils.parseCryptoLine = function(line) {\n  const parts = line.substring(9).split(' ');\n  return {\n    tag: parseInt(parts[0], 10),\n    cryptoSuite: parts[1],\n    keyParams: parts[2],\n    sessionParams: parts.slice(3),\n  };\n};\n\nSDPUtils.writeCryptoLine = function(parameters) {\n  return 'a=crypto:' + parameters.tag + ' ' +\n    parameters.cryptoSuite + ' ' +\n    (typeof parameters.keyParams === 'object'\n      ? SDPUtils.writeCryptoKeyParams(parameters.keyParams)\n      : parameters.keyParams) +\n    (parameters.sessionParams ? ' ' + parameters.sessionParams.join(' ') : '') +\n    '\\r\\n';\n};\n\n// Parses the crypto key parameters into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#rtcsrtpkeyparam*\nSDPUtils.parseCryptoKeyParams = function(keyParams) {\n  if (keyParams.indexOf('inline:') !== 0) {\n    return null;\n  }\n  const parts = keyParams.substring(7).split('|');\n  return {\n    keyMethod: 'inline',\n    keySalt: parts[0],\n    lifeTime: parts[1],\n    mkiValue: parts[2] ? parts[2].split(':')[0] : undefined,\n    mkiLength: parts[2] ? parts[2].split(':')[1] : undefined,\n  };\n};\n\nSDPUtils.writeCryptoKeyParams = function(keyParams) {\n  return keyParams.keyMethod + ':'\n    + keyParams.keySalt +\n    (keyParams.lifeTime ? '|' + keyParams.lifeTime : '') +\n    (keyParams.mkiValue && keyParams.mkiLength\n      ? '|' + keyParams.mkiValue + ':' + keyParams.mkiLength\n      : '');\n};\n\n// Extracts all SDES parameters.\nSDPUtils.getCryptoParameters = function(mediaSection, sessionpart) {\n  const lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=crypto:');\n  return lines.map(SDPUtils.parseCryptoLine);\n};\n\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n  const ufrag = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-ufrag:')[0];\n  const pwd = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-pwd:')[0];\n  if (!(ufrag && pwd)) {\n    return null;\n  }\n  return {\n    usernameFragment: ufrag.substring(12),\n    password: pwd.substring(10),\n  };\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function(params) {\n  let sdp = 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n      'a=ice-pwd:' + params.password + '\\r\\n';\n  if (params.iceLite) {\n    sdp += 'a=ice-lite\\r\\n';\n  }\n  return sdp;\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function(mediaSection) {\n  const description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: [],\n  };\n  const lines = SDPUtils.splitLines(mediaSection);\n  const mline = lines[0].split(' ');\n  description.profile = mline[2];\n  for (let i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n    const pt = mline[i];\n    const rtpmapline = SDPUtils.matchPrefix(\n      mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      const codec = SDPUtils.parseRtpMap(rtpmapline);\n      const fmtps = SDPUtils.matchPrefix(\n        mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\n        mediaSection, 'a=rtcp-fb:' + pt + ' ')\n        .map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(line => {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  const wildcardRtcpFb = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-fb:* ')\n    .map(SDPUtils.parseRtcpFb);\n  description.codecs.forEach(codec => {\n    wildcardRtcpFb.forEach(fb=> {\n      const duplicate = codec.rtcpFeedback.find(existingFeedback => {\n        return existingFeedback.type === fb.type &&\n          existingFeedback.parameter === fb.parameter;\n      });\n      if (!duplicate) {\n        codec.rtcpFeedback.push(fb);\n      }\n    });\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function(kind, caps) {\n  let sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' ' + (caps.profile || 'UDP/TLS/RTP/SAVPF') + ' ';\n  sdp += caps.codecs.map(codec => {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(codec => {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  let maxptime = 0;\n  caps.codecs.forEach(codec => {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n\n  if (caps.headerExtensions) {\n    caps.headerExtensions.forEach(extension => {\n      sdp += SDPUtils.writeExtmap(extension);\n    });\n  }\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n  const encodingParameters = [];\n  const description = SDPUtils.parseRtpParameters(mediaSection);\n  const hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  const hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  const ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(parts => parts.attribute === 'cname');\n  const primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  let secondarySsrc;\n\n  const flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n    .map(line => {\n      const parts = line.substring(17).split(' ');\n      return parts.map(part => parseInt(part, 10));\n    });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(codec => {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      let encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10),\n      };\n      if (primarySsrc && secondarySsrc) {\n        encParam.rtx = {ssrc: secondarySsrc};\n      }\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: primarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red',\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc,\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  let bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substring(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substring(5), 10) * 1000 * 0.95\n          - (50 * 40 * 8);\n    } else {\n      bandwidth = undefined;\n    }\n    encodingParameters.forEach(params => {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function(mediaSection) {\n  const rtcpParameters = {};\n\n  // Gets the first SSRC. Note that with RTX there might be multiple\n  // SSRCs.\n  const remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(obj => obj.attribute === 'cname')[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  const rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attrіbute.\n  // Note that Edge does not support unmuxed RTCP.\n  const mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\nSDPUtils.writeRtcpParameters = function(rtcpParameters) {\n  let sdp = '';\n  if (rtcpParameters.reducedSize) {\n    sdp += 'a=rtcp-rsize\\r\\n';\n  }\n  if (rtcpParameters.mux) {\n    sdp += 'a=rtcp-mux\\r\\n';\n  }\n  if (rtcpParameters.ssrc !== undefined && rtcpParameters.cname) {\n    sdp += 'a=ssrc:' + rtcpParameters.ssrc +\n      ' cname:' + rtcpParameters.cname + '\\r\\n';\n  }\n  return sdp;\n};\n\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function(mediaSection) {\n  let parts;\n  const spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substring(7).split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n  const planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(line => SDPUtils.parseSsrcMedia(line))\n    .filter(msidParts => msidParts.attribute === 'msid');\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n};\n\n// SCTP\n// parses draft-ietf-mmusic-sctp-sdp-26 first and falls back\n// to draft-ietf-mmusic-sctp-sdp-05\nSDPUtils.parseSctpDescription = function(mediaSection) {\n  const mline = SDPUtils.parseMLine(mediaSection);\n  const maxSizeLine = SDPUtils.matchPrefix(mediaSection, 'a=max-message-size:');\n  let maxMessageSize;\n  if (maxSizeLine.length > 0) {\n    maxMessageSize = parseInt(maxSizeLine[0].substring(19), 10);\n  }\n  if (isNaN(maxMessageSize)) {\n    maxMessageSize = 65536;\n  }\n  const sctpPort = SDPUtils.matchPrefix(mediaSection, 'a=sctp-port:');\n  if (sctpPort.length > 0) {\n    return {\n      port: parseInt(sctpPort[0].substring(12), 10),\n      protocol: mline.fmt,\n      maxMessageSize,\n    };\n  }\n  const sctpMapLines = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:');\n  if (sctpMapLines.length > 0) {\n    const parts = sctpMapLines[0]\n      .substring(10)\n      .split(' ');\n    return {\n      port: parseInt(parts[0], 10),\n      protocol: parts[1],\n      maxMessageSize,\n    };\n  }\n};\n\n// SCTP\n// outputs the draft-ietf-mmusic-sctp-sdp-26 version that all browsers\n// support by now receiving in this format, unless we originally parsed\n// as the draft-ietf-mmusic-sctp-sdp-05 format (indicated by the m-line\n// protocol of DTLS/SCTP -- without UDP/ or TCP/)\nSDPUtils.writeSctpDescription = function(media, sctp) {\n  let output = [];\n  if (media.protocol !== 'DTLS/SCTP') {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.protocol + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctp-port:' + sctp.port + '\\r\\n',\n    ];\n  } else {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.port + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctpmap:' + sctp.port + ' ' + sctp.protocol + ' 65535\\r\\n',\n    ];\n  }\n  if (sctp.maxMessageSize !== undefined) {\n    output.push('a=max-message-size:' + sctp.maxMessageSize + '\\r\\n');\n  }\n  return output.join('');\n};\n\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\nSDPUtils.generateSessionId = function() {\n  return Math.random().toString().substr(2, 22);\n};\n\n// Write boiler plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\n// sessUser is optional and defaults to 'thisisadapterortc'\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer, sessUser) {\n  let sessionId;\n  const version = sessVer !== undefined ? sessVer : 2;\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n  const user = sessUser || 'thisisadapterortc';\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' +\n      'o=' + user + ' ' + sessionId + ' ' + version +\n        ' IN IP4 127.0.0.1\\r\\n' +\n      's=-\\r\\n' +\n      't=0 0\\r\\n';\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  const lines = SDPUtils.splitLines(mediaSection);\n  for (let i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substring(2);\n      default:\n        // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function(mediaSection) {\n  const lines = SDPUtils.splitLines(mediaSection);\n  const mline = lines[0].split(' ');\n  return mline[0].substring(2);\n};\n\nSDPUtils.isRejected = function(mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function(mediaSection) {\n  const lines = SDPUtils.splitLines(mediaSection);\n  const parts = lines[0].substring(2).split(' ');\n  return {\n    kind: parts[0],\n    port: parseInt(parts[1], 10),\n    protocol: parts[2],\n    fmt: parts.slice(3).join(' '),\n  };\n};\n\nSDPUtils.parseOLine = function(mediaSection) {\n  const line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n  const parts = line.substring(2).split(' ');\n  return {\n    username: parts[0],\n    sessionId: parts[1],\n    sessionVersion: parseInt(parts[2], 10),\n    netType: parts[3],\n    addressType: parts[4],\n    address: parts[5],\n  };\n};\n\n// a very naive interpretation of a valid SDP.\nSDPUtils.isValidSDP = function(blob) {\n  if (typeof blob !== 'string' || blob.length === 0) {\n    return false;\n  }\n  const lines = SDPUtils.splitLines(blob);\n  for (let i = 0; i < lines.length; i++) {\n    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\n      return false;\n    }\n    // TODO: check the modifier a bit more.\n  }\n  return true;\n};\n\n// Expose public methods.\nif (typeof module === 'object') {\n  module.exports = SDPUtils;\n}\n","/////////////////////////////////////////////////////////////////////////////////\n/* UAParser.js v1.0.35\n   Copyright © 2012-2021 Faisal Salman <f@faisalman.com>\n   MIT License *//*\n   Detect Browser, Engine, OS, CPU, and Device type/model from User-Agent data.\n   Supports browser & node.js environment. \n   Demo   : https://faisalman.github.io/ua-parser-js\n   Source : https://github.com/faisalman/ua-parser-js */\n/////////////////////////////////////////////////////////////////////////////////\n\n(function (window, undefined) {\n\n    'use strict';\n\n    //////////////\n    // Constants\n    /////////////\n\n\n    var LIBVERSION  = '1.0.35',\n        EMPTY       = '',\n        UNKNOWN     = '?',\n        FUNC_TYPE   = 'function',\n        UNDEF_TYPE  = 'undefined',\n        OBJ_TYPE    = 'object',\n        STR_TYPE    = 'string',\n        MAJOR       = 'major',\n        MODEL       = 'model',\n        NAME        = 'name',\n        TYPE        = 'type',\n        VENDOR      = 'vendor',\n        VERSION     = 'version',\n        ARCHITECTURE= 'architecture',\n        CONSOLE     = 'console',\n        MOBILE      = 'mobile',\n        TABLET      = 'tablet',\n        SMARTTV     = 'smarttv',\n        WEARABLE    = 'wearable',\n        EMBEDDED    = 'embedded',\n        UA_MAX_LENGTH = 350;\n\n    var AMAZON  = 'Amazon',\n        APPLE   = 'Apple',\n        ASUS    = 'ASUS',\n        BLACKBERRY = 'BlackBerry',\n        BROWSER = 'Browser',\n        CHROME  = 'Chrome',\n        EDGE    = 'Edge',\n        FIREFOX = 'Firefox',\n        GOOGLE  = 'Google',\n        HUAWEI  = 'Huawei',\n        LG      = 'LG',\n        MICROSOFT = 'Microsoft',\n        MOTOROLA  = 'Motorola',\n        OPERA   = 'Opera',\n        SAMSUNG = 'Samsung',\n        SHARP   = 'Sharp',\n        SONY    = 'Sony',\n        VIERA   = 'Viera',\n        XIAOMI  = 'Xiaomi',\n        ZEBRA   = 'Zebra',\n        FACEBOOK    = 'Facebook',\n        CHROMIUM_OS = 'Chromium OS',\n        MAC_OS  = 'Mac OS';\n\n    ///////////\n    // Helper\n    //////////\n\n    var extend = function (regexes, extensions) {\n            var mergedRegexes = {};\n            for (var i in regexes) {\n                if (extensions[i] && extensions[i].length % 2 === 0) {\n                    mergedRegexes[i] = extensions[i].concat(regexes[i]);\n                } else {\n                    mergedRegexes[i] = regexes[i];\n                }\n            }\n            return mergedRegexes;\n        },\n        enumerize = function (arr) {\n            var enums = {};\n            for (var i=0; i<arr.length; i++) {\n                enums[arr[i].toUpperCase()] = arr[i];\n            }\n            return enums;\n        },\n        has = function (str1, str2) {\n            return typeof str1 === STR_TYPE ? lowerize(str2).indexOf(lowerize(str1)) !== -1 : false;\n        },\n        lowerize = function (str) {\n            return str.toLowerCase();\n        },\n        majorize = function (version) {\n            return typeof(version) === STR_TYPE ? version.replace(/[^\\d\\.]/g, EMPTY).split('.')[0] : undefined;\n        },\n        trim = function (str, len) {\n            if (typeof(str) === STR_TYPE) {\n                str = str.replace(/^\\s\\s*/, EMPTY);\n                return typeof(len) === UNDEF_TYPE ? str : str.substring(0, UA_MAX_LENGTH);\n            }\n    };\n\n    ///////////////\n    // Map helper\n    //////////////\n\n    var rgxMapper = function (ua, arrays) {\n\n            var i = 0, j, k, p, q, matches, match;\n\n            // loop through all regexes maps\n            while (i < arrays.length && !matches) {\n\n                var regex = arrays[i],       // even sequence (0,2,4,..)\n                    props = arrays[i + 1];   // odd sequence (1,3,5,..)\n                j = k = 0;\n\n                // try matching uastring with regexes\n                while (j < regex.length && !matches) {\n\n                    if (!regex[j]) { break; }\n                    matches = regex[j++].exec(ua);\n\n                    if (!!matches) {\n                        for (p = 0; p < props.length; p++) {\n                            match = matches[++k];\n                            q = props[p];\n                            // check if given property is actually array\n                            if (typeof q === OBJ_TYPE && q.length > 0) {\n                                if (q.length === 2) {\n                                    if (typeof q[1] == FUNC_TYPE) {\n                                        // assign modified match\n                                        this[q[0]] = q[1].call(this, match);\n                                    } else {\n                                        // assign given value, ignore regex match\n                                        this[q[0]] = q[1];\n                                    }\n                                } else if (q.length === 3) {\n                                    // check whether function or regex\n                                    if (typeof q[1] === FUNC_TYPE && !(q[1].exec && q[1].test)) {\n                                        // call function (usually string mapper)\n                                        this[q[0]] = match ? q[1].call(this, match, q[2]) : undefined;\n                                    } else {\n                                        // sanitize match using given regex\n                                        this[q[0]] = match ? match.replace(q[1], q[2]) : undefined;\n                                    }\n                                } else if (q.length === 4) {\n                                        this[q[0]] = match ? q[3].call(this, match.replace(q[1], q[2])) : undefined;\n                                }\n                            } else {\n                                this[q] = match ? match : undefined;\n                            }\n                        }\n                    }\n                }\n                i += 2;\n            }\n        },\n\n        strMapper = function (str, map) {\n\n            for (var i in map) {\n                // check if current value is array\n                if (typeof map[i] === OBJ_TYPE && map[i].length > 0) {\n                    for (var j = 0; j < map[i].length; j++) {\n                        if (has(map[i][j], str)) {\n                            return (i === UNKNOWN) ? undefined : i;\n                        }\n                    }\n                } else if (has(map[i], str)) {\n                    return (i === UNKNOWN) ? undefined : i;\n                }\n            }\n            return str;\n    };\n\n    ///////////////\n    // String map\n    //////////////\n\n    // Safari < 3.0\n    var oldSafariMap = {\n            '1.0'   : '/8',\n            '1.2'   : '/1',\n            '1.3'   : '/3',\n            '2.0'   : '/412',\n            '2.0.2' : '/416',\n            '2.0.3' : '/417',\n            '2.0.4' : '/419',\n            '?'     : '/'\n        },\n        windowsVersionMap = {\n            'ME'        : '4.90',\n            'NT 3.11'   : 'NT3.51',\n            'NT 4.0'    : 'NT4.0',\n            '2000'      : 'NT 5.0',\n            'XP'        : ['NT 5.1', 'NT 5.2'],\n            'Vista'     : 'NT 6.0',\n            '7'         : 'NT 6.1',\n            '8'         : 'NT 6.2',\n            '8.1'       : 'NT 6.3',\n            '10'        : ['NT 6.4', 'NT 10.0'],\n            'RT'        : 'ARM'\n    };\n\n    //////////////\n    // Regex map\n    /////////////\n\n    var regexes = {\n\n        browser : [[\n\n            /\\b(?:crmo|crios)\\/([\\w\\.]+)/i                                      // Chrome for Android/iOS\n            ], [VERSION, [NAME, 'Chrome']], [\n            /edg(?:e|ios|a)?\\/([\\w\\.]+)/i                                       // Microsoft Edge\n            ], [VERSION, [NAME, 'Edge']], [\n\n            // Presto based\n            /(opera mini)\\/([-\\w\\.]+)/i,                                        // Opera Mini\n            /(opera [mobiletab]{3,6})\\b.+version\\/([-\\w\\.]+)/i,                 // Opera Mobi/Tablet\n            /(opera)(?:.+version\\/|[\\/ ]+)([\\w\\.]+)/i                           // Opera\n            ], [NAME, VERSION], [\n            /opios[\\/ ]+([\\w\\.]+)/i                                             // Opera mini on iphone >= 8.0\n            ], [VERSION, [NAME, OPERA+' Mini']], [\n            /\\bopr\\/([\\w\\.]+)/i                                                 // Opera Webkit\n            ], [VERSION, [NAME, OPERA]], [\n\n            // Mixed\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(lunascape|maxthon|netfront|jasmine|blazer)[\\/ ]?([\\w\\.]*)/i,      // Lunascape/Maxthon/Netfront/Jasmine/Blazer\n            // Trident based\n            /(avant |iemobile|slim)(?:browser)?[\\/ ]?([\\w\\.]*)/i,               // Avant/IEMobile/SlimBrowser\n            /(ba?idubrowser)[\\/ ]?([\\w\\.]+)/i,                                  // Baidu Browser\n            /(?:ms|\\()(ie) ([\\w\\.]+)/i,                                         // Internet Explorer\n\n            // Webkit/KHTML based                                               // Flock/RockMelt/Midori/Epiphany/Silk/Skyfire/Bolt/Iron/Iridium/PhantomJS/Bowser/QupZilla/Falkon\n            /(flock|rockmelt|midori|epiphany|silk|skyfire|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|qq|duckduckgo)\\/([-\\w\\.]+)/i,\n                                                                                // Rekonq/Puffin/Brave/Whale/QQBrowserLite/QQ, aka ShouQ\n            /(heytap|ovi)browser\\/([\\d\\.]+)/i,                                  // Heytap/Ovi\n            /(weibo)__([\\d\\.]+)/i                                               // Weibo\n            ], [NAME, VERSION], [\n            /(?:\\buc? ?browser|(?:juc.+)ucweb)[\\/ ]?([\\w\\.]+)/i                 // UCBrowser\n            ], [VERSION, [NAME, 'UC'+BROWSER]], [\n            /microm.+\\bqbcore\\/([\\w\\.]+)/i,                                     // WeChat Desktop for Windows Built-in Browser\n            /\\bqbcore\\/([\\w\\.]+).+microm/i\n            ], [VERSION, [NAME, 'WeChat(Win) Desktop']], [\n            /micromessenger\\/([\\w\\.]+)/i                                        // WeChat\n            ], [VERSION, [NAME, 'WeChat']], [\n            /konqueror\\/([\\w\\.]+)/i                                             // Konqueror\n            ], [VERSION, [NAME, 'Konqueror']], [\n            /trident.+rv[: ]([\\w\\.]{1,9})\\b.+like gecko/i                       // IE11\n            ], [VERSION, [NAME, 'IE']], [\n            /ya(?:search)?browser\\/([\\w\\.]+)/i                                  // Yandex\n            ], [VERSION, [NAME, 'Yandex']], [\n            /(avast|avg)\\/([\\w\\.]+)/i                                           // Avast/AVG Secure Browser\n            ], [[NAME, /(.+)/, '$1 Secure '+BROWSER], VERSION], [\n            /\\bfocus\\/([\\w\\.]+)/i                                               // Firefox Focus\n            ], [VERSION, [NAME, FIREFOX+' Focus']], [\n            /\\bopt\\/([\\w\\.]+)/i                                                 // Opera Touch\n            ], [VERSION, [NAME, OPERA+' Touch']], [\n            /coc_coc\\w+\\/([\\w\\.]+)/i                                            // Coc Coc Browser\n            ], [VERSION, [NAME, 'Coc Coc']], [\n            /dolfin\\/([\\w\\.]+)/i                                                // Dolphin\n            ], [VERSION, [NAME, 'Dolphin']], [\n            /coast\\/([\\w\\.]+)/i                                                 // Opera Coast\n            ], [VERSION, [NAME, OPERA+' Coast']], [\n            /miuibrowser\\/([\\w\\.]+)/i                                           // MIUI Browser\n            ], [VERSION, [NAME, 'MIUI '+BROWSER]], [\n            /fxios\\/([-\\w\\.]+)/i                                                // Firefox for iOS\n            ], [VERSION, [NAME, FIREFOX]], [\n            /\\bqihu|(qi?ho?o?|360)browser/i                                     // 360\n            ], [[NAME, '360 '+BROWSER]], [\n            /(oculus|samsung|sailfish|huawei)browser\\/([\\w\\.]+)/i\n            ], [[NAME, /(.+)/, '$1 '+BROWSER], VERSION], [                      // Oculus/Samsung/Sailfish/Huawei Browser\n            /(comodo_dragon)\\/([\\w\\.]+)/i                                       // Comodo Dragon\n            ], [[NAME, /_/g, ' '], VERSION], [\n            /(electron)\\/([\\w\\.]+) safari/i,                                    // Electron-based App\n            /(tesla)(?: qtcarbrowser|\\/(20\\d\\d\\.[-\\w\\.]+))/i,                   // Tesla\n            /m?(qqbrowser|baiduboxapp|2345Explorer)[\\/ ]?([\\w\\.]+)/i            // QQBrowser/Baidu App/2345 Browser\n            ], [NAME, VERSION], [\n            /(metasr)[\\/ ]?([\\w\\.]+)/i,                                         // SouGouBrowser\n            /(lbbrowser)/i,                                                     // LieBao Browser\n            /\\[(linkedin)app\\]/i                                                // LinkedIn App for iOS & Android\n            ], [NAME], [\n\n            // WebView\n            /((?:fban\\/fbios|fb_iab\\/fb4a)(?!.+fbav)|;fbav\\/([\\w\\.]+);)/i       // Facebook App for iOS & Android\n            ], [[NAME, FACEBOOK], VERSION], [\n            /(kakao(?:talk|story))[\\/ ]([\\w\\.]+)/i,                             // Kakao App\n            /(naver)\\(.*?(\\d+\\.[\\w\\.]+).*\\)/i,                                  // Naver InApp\n            /safari (line)\\/([\\w\\.]+)/i,                                        // Line App for iOS\n            /\\b(line)\\/([\\w\\.]+)\\/iab/i,                                        // Line App for Android\n            /(chromium|instagram)[\\/ ]([-\\w\\.]+)/i                              // Chromium/Instagram\n            ], [NAME, VERSION], [\n            /\\bgsa\\/([\\w\\.]+) .*safari\\//i                                      // Google Search Appliance on iOS\n            ], [VERSION, [NAME, 'GSA']], [\n            /musical_ly(?:.+app_?version\\/|_)([\\w\\.]+)/i                        // TikTok\n            ], [VERSION, [NAME, 'TikTok']], [\n\n            /headlesschrome(?:\\/([\\w\\.]+)| )/i                                  // Chrome Headless\n            ], [VERSION, [NAME, CHROME+' Headless']], [\n\n            / wv\\).+(chrome)\\/([\\w\\.]+)/i                                       // Chrome WebView\n            ], [[NAME, CHROME+' WebView'], VERSION], [\n\n            /droid.+ version\\/([\\w\\.]+)\\b.+(?:mobile safari|safari)/i           // Android Browser\n            ], [VERSION, [NAME, 'Android '+BROWSER]], [\n\n            /(chrome|omniweb|arora|[tizenoka]{5} ?browser)\\/v?([\\w\\.]+)/i       // Chrome/OmniWeb/Arora/Tizen/Nokia\n            ], [NAME, VERSION], [\n\n            /version\\/([\\w\\.\\,]+) .*mobile\\/\\w+ (safari)/i                      // Mobile Safari\n            ], [VERSION, [NAME, 'Mobile Safari']], [\n            /version\\/([\\w(\\.|\\,)]+) .*(mobile ?safari|safari)/i                // Safari & Safari Mobile\n            ], [VERSION, NAME], [\n            /webkit.+?(mobile ?safari|safari)(\\/[\\w\\.]+)/i                      // Safari < 3.0\n            ], [NAME, [VERSION, strMapper, oldSafariMap]], [\n\n            /(webkit|khtml)\\/([\\w\\.]+)/i\n            ], [NAME, VERSION], [\n\n            // Gecko based\n            /(navigator|netscape\\d?)\\/([-\\w\\.]+)/i                              // Netscape\n            ], [[NAME, 'Netscape'], VERSION], [\n            /mobile vr; rv:([\\w\\.]+)\\).+firefox/i                               // Firefox Reality\n            ], [VERSION, [NAME, FIREFOX+' Reality']], [\n            /ekiohf.+(flow)\\/([\\w\\.]+)/i,                                       // Flow\n            /(swiftfox)/i,                                                      // Swiftfox\n            /(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror|klar)[\\/ ]?([\\w\\.\\+]+)/i,\n                                                                                // IceDragon/Iceweasel/Camino/Chimera/Fennec/Maemo/Minimo/Conkeror/Klar\n            /(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([-\\w\\.]+)$/i,\n                                                                                // Firefox/SeaMonkey/K-Meleon/IceCat/IceApe/Firebird/Phoenix\n            /(firefox)\\/([\\w\\.]+)/i,                                            // Other Firefox-based\n            /(mozilla)\\/([\\w\\.]+) .+rv\\:.+gecko\\/\\d+/i,                         // Mozilla\n\n            // Other\n            /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir|obigo|mosaic|(?:go|ice|up)[\\. ]?browser)[-\\/ ]?v?([\\w\\.]+)/i,\n                                                                                // Polaris/Lynx/Dillo/iCab/Doris/Amaya/w3m/NetSurf/Sleipnir/Obigo/Mosaic/Go/ICE/UP.Browser\n            /(links) \\(([\\w\\.]+)/i,                                             // Links\n            /panasonic;(viera)/i                                                // Panasonic Viera\n            ], [NAME, VERSION], [\n            \n            /(cobalt)\\/([\\w\\.]+)/i                                              // Cobalt\n            ], [NAME, [VERSION, /master.|lts./, \"\"]]\n        ],\n\n        cpu : [[\n\n            /(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\\)]/i                     // AMD64 (x64)\n            ], [[ARCHITECTURE, 'amd64']], [\n\n            /(ia32(?=;))/i                                                      // IA32 (quicktime)\n            ], [[ARCHITECTURE, lowerize]], [\n\n            /((?:i[346]|x)86)[;\\)]/i                                            // IA32 (x86)\n            ], [[ARCHITECTURE, 'ia32']], [\n\n            /\\b(aarch64|arm(v?8e?l?|_?64))\\b/i                                 // ARM64\n            ], [[ARCHITECTURE, 'arm64']], [\n\n            /\\b(arm(?:v[67])?ht?n?[fl]p?)\\b/i                                   // ARMHF\n            ], [[ARCHITECTURE, 'armhf']], [\n\n            // PocketPC mistakenly identified as PowerPC\n            /windows (ce|mobile); ppc;/i\n            ], [[ARCHITECTURE, 'arm']], [\n\n            /((?:ppc|powerpc)(?:64)?)(?: mac|;|\\))/i                            // PowerPC\n            ], [[ARCHITECTURE, /ower/, EMPTY, lowerize]], [\n\n            /(sun4\\w)[;\\)]/i                                                    // SPARC\n            ], [[ARCHITECTURE, 'sparc']], [\n\n            /((?:avr32|ia64(?=;))|68k(?=\\))|\\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\\b|pa-risc)/i\n                                                                                // IA64, 68K, ARM/64, AVR/32, IRIX/64, MIPS/64, SPARC/64, PA-RISC\n            ], [[ARCHITECTURE, lowerize]]\n        ],\n\n        device : [[\n\n            //////////////////////////\n            // MOBILES & TABLETS\n            /////////////////////////\n\n            // Samsung\n            /\\b(sch-i[89]0\\d|shw-m380s|sm-[ptx]\\w{2,4}|gt-[pn]\\d{2,4}|sgh-t8[56]9|nexus 10)/i\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, TABLET]], [\n            /\\b((?:s[cgp]h|gt|sm)-\\w+|sc[g-]?[\\d]+a?|galaxy nexus)/i,\n            /samsung[- ]([-\\w]+)/i,\n            /sec-(sgh\\w+)/i\n            ], [MODEL, [VENDOR, SAMSUNG], [TYPE, MOBILE]], [\n\n            // Apple\n            /(?:\\/|\\()(ip(?:hone|od)[\\w, ]*)(?:\\/|;)/i                          // iPod/iPhone\n            ], [MODEL, [VENDOR, APPLE], [TYPE, MOBILE]], [\n            /\\((ipad);[-\\w\\),; ]+apple/i,                                       // iPad\n            /applecoremedia\\/[\\w\\.]+ \\((ipad)/i,\n            /\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i\n            ], [MODEL, [VENDOR, APPLE], [TYPE, TABLET]], [\n            /(macintosh);/i\n            ], [MODEL, [VENDOR, APPLE]], [\n\n            // Sharp\n            /\\b(sh-?[altvz]?\\d\\d[a-ekm]?)/i\n            ], [MODEL, [VENDOR, SHARP], [TYPE, MOBILE]], [\n\n            // Huawei\n            /\\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\\d{2})\\b(?!.+d\\/s)/i\n            ], [MODEL, [VENDOR, HUAWEI], [TYPE, TABLET]], [\n            /(?:huawei|honor)([-\\w ]+)[;\\)]/i,\n            /\\b(nexus 6p|\\w{2,4}e?-[atu]?[ln][\\dx][012359c][adn]?)\\b(?!.+d\\/s)/i\n            ], [MODEL, [VENDOR, HUAWEI], [TYPE, MOBILE]], [\n\n            // Xiaomi\n            /\\b(poco[\\w ]+)(?: bui|\\))/i,                                       // Xiaomi POCO\n            /\\b; (\\w+) build\\/hm\\1/i,                                           // Xiaomi Hongmi 'numeric' models\n            /\\b(hm[-_ ]?note?[_ ]?(?:\\d\\w)?) bui/i,                             // Xiaomi Hongmi\n            /\\b(redmi[\\-_ ]?(?:note|k)?[\\w_ ]+)(?: bui|\\))/i,                   // Xiaomi Redmi\n            /\\b(mi[-_ ]?(?:a\\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\\d?\\w?)[_ ]?(?:plus|se|lite)?)(?: bui|\\))/i // Xiaomi Mi\n            ], [[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, MOBILE]], [\n            /\\b(mi[-_ ]?(?:pad)(?:[\\w_ ]+))(?: bui|\\))/i                        // Mi Pad tablets\n            ],[[MODEL, /_/g, ' '], [VENDOR, XIAOMI], [TYPE, TABLET]], [\n\n            // OPPO\n            /; (\\w+) bui.+ oppo/i,\n            /\\b(cph[12]\\d{3}|p(?:af|c[al]|d\\w|e[ar])[mt]\\d0|x9007|a101op)\\b/i\n            ], [MODEL, [VENDOR, 'OPPO'], [TYPE, MOBILE]], [\n\n            // Vivo\n            /vivo (\\w+)(?: bui|\\))/i,\n            /\\b(v[12]\\d{3}\\w?[at])(?: bui|;)/i\n            ], [MODEL, [VENDOR, 'Vivo'], [TYPE, MOBILE]], [\n\n            // Realme\n            /\\b(rmx[12]\\d{3})(?: bui|;|\\))/i\n            ], [MODEL, [VENDOR, 'Realme'], [TYPE, MOBILE]], [\n\n            // Motorola\n            /\\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\\b[\\w ]+build\\//i,\n            /\\bmot(?:orola)?[- ](\\w*)/i,\n            /((?:moto[\\w\\(\\) ]+|xt\\d{3,4}|nexus 6)(?= bui|\\)))/i\n            ], [MODEL, [VENDOR, MOTOROLA], [TYPE, MOBILE]], [\n            /\\b(mz60\\d|xoom[2 ]{0,2}) build\\//i\n            ], [MODEL, [VENDOR, MOTOROLA], [TYPE, TABLET]], [\n\n            // LG\n            /((?=lg)?[vl]k\\-?\\d{3}) bui| 3\\.[-\\w; ]{10}lg?-([06cv9]{3,4})/i\n            ], [MODEL, [VENDOR, LG], [TYPE, TABLET]], [\n            /(lm(?:-?f100[nv]?|-[\\w\\.]+)(?= bui|\\))|nexus [45])/i,\n            /\\blg[-e;\\/ ]+((?!browser|netcast|android tv)\\w+)/i,\n            /\\blg-?([\\d\\w]+) bui/i\n            ], [MODEL, [VENDOR, LG], [TYPE, MOBILE]], [\n\n            // Lenovo\n            /(ideatab[-\\w ]+)/i,\n            /lenovo ?(s[56]000[-\\w]+|tab(?:[\\w ]+)|yt[-\\d\\w]{6}|tb[-\\d\\w]{6})/i\n            ], [MODEL, [VENDOR, 'Lenovo'], [TYPE, TABLET]], [\n\n            // Nokia\n            /(?:maemo|nokia).*(n900|lumia \\d+)/i,\n            /nokia[-_ ]?([-\\w\\.]*)/i\n            ], [[MODEL, /_/g, ' '], [VENDOR, 'Nokia'], [TYPE, MOBILE]], [\n\n            // Google\n            /(pixel c)\\b/i                                                      // Google Pixel C\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, TABLET]], [\n            /droid.+; (pixel[\\daxl ]{0,6})(?: bui|\\))/i                         // Google Pixel\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, MOBILE]], [\n\n            // Sony\n            /droid.+ (a?\\d[0-2]{2}so|[c-g]\\d{4}|so[-gl]\\w+|xq-a\\w[4-7][12])(?= bui|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i\n            ], [MODEL, [VENDOR, SONY], [TYPE, MOBILE]], [\n            /sony tablet [ps]/i,\n            /\\b(?:sony)?sgp\\w+(?: bui|\\))/i\n            ], [[MODEL, 'Xperia Tablet'], [VENDOR, SONY], [TYPE, TABLET]], [\n\n            // OnePlus\n            / (kb2005|in20[12]5|be20[12][59])\\b/i,\n            /(?:one)?(?:plus)? (a\\d0\\d\\d)(?: b|\\))/i\n            ], [MODEL, [VENDOR, 'OnePlus'], [TYPE, MOBILE]], [\n\n            // Amazon\n            /(alexa)webm/i,\n            /(kf[a-z]{2}wi|aeo[c-r]{2})( bui|\\))/i,                             // Kindle Fire without Silk / Echo Show\n            /(kf[a-z]+)( bui|\\)).+silk\\//i                                      // Kindle Fire HD\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, TABLET]], [\n            /((?:sd|kf)[0349hijorstuw]+)( bui|\\)).+silk\\//i                     // Fire Phone\n            ], [[MODEL, /(.+)/g, 'Fire Phone $1'], [VENDOR, AMAZON], [TYPE, MOBILE]], [\n\n            // BlackBerry\n            /(playbook);[-\\w\\),; ]+(rim)/i                                      // BlackBerry PlayBook\n            ], [MODEL, VENDOR, [TYPE, TABLET]], [\n            /\\b((?:bb[a-f]|st[hv])100-\\d)/i,\n            /\\(bb10; (\\w+)/i                                                    // BlackBerry 10\n            ], [MODEL, [VENDOR, BLACKBERRY], [TYPE, MOBILE]], [\n\n            // Asus\n            /(?:\\b|asus_)(transfo[prime ]{4,10} \\w+|eeepc|slider \\w+|nexus 7|padfone|p00[cj])/i\n            ], [MODEL, [VENDOR, ASUS], [TYPE, TABLET]], [\n            / (z[bes]6[027][012][km][ls]|zenfone \\d\\w?)\\b/i\n            ], [MODEL, [VENDOR, ASUS], [TYPE, MOBILE]], [\n\n            // HTC\n            /(nexus 9)/i                                                        // HTC Nexus 9\n            ], [MODEL, [VENDOR, 'HTC'], [TYPE, TABLET]], [\n            /(htc)[-;_ ]{1,2}([\\w ]+(?=\\)| bui)|\\w+)/i,                         // HTC\n\n            // ZTE\n            /(zte)[- ]([\\w ]+?)(?: bui|\\/|\\))/i,\n            /(alcatel|geeksphone|nexian|panasonic(?!(?:;|\\.))|sony(?!-bra))[-_ ]?([-\\w]*)/i         // Alcatel/GeeksPhone/Nexian/Panasonic/Sony\n            ], [VENDOR, [MODEL, /_/g, ' '], [TYPE, MOBILE]], [\n\n            // Acer\n            /droid.+; ([ab][1-7]-?[0178a]\\d\\d?)/i\n            ], [MODEL, [VENDOR, 'Acer'], [TYPE, TABLET]], [\n\n            // Meizu\n            /droid.+; (m[1-5] note) bui/i,\n            /\\bmz-([-\\w]{2,})/i\n            ], [MODEL, [VENDOR, 'Meizu'], [TYPE, MOBILE]], [\n\n            // MIXED\n            /(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron)[-_ ]?([-\\w]*)/i,\n                                                                                // BlackBerry/BenQ/Palm/Sony-Ericsson/Acer/Asus/Dell/Meizu/Motorola/Polytron\n            /(hp) ([\\w ]+\\w)/i,                                                 // HP iPAQ\n            /(asus)-?(\\w+)/i,                                                   // Asus\n            /(microsoft); (lumia[\\w ]+)/i,                                      // Microsoft Lumia\n            /(lenovo)[-_ ]?([-\\w]+)/i,                                          // Lenovo\n            /(jolla)/i,                                                         // Jolla\n            /(oppo) ?([\\w ]+) bui/i                                             // OPPO\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n\n            /(kobo)\\s(ereader|touch)/i,                                         // Kobo\n            /(archos) (gamepad2?)/i,                                            // Archos\n            /(hp).+(touchpad(?!.+tablet)|tablet)/i,                             // HP TouchPad\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(nook)[\\w ]+build\\/(\\w+)/i,                                        // Nook\n            /(dell) (strea[kpr\\d ]*[\\dko])/i,                                   // Dell Streak\n            /(le[- ]+pan)[- ]+(\\w{1,9}) bui/i,                                  // Le Pan Tablets\n            /(trinity)[- ]*(t\\d{3}) bui/i,                                      // Trinity Tablets\n            /(gigaset)[- ]+(q\\w{1,9}) bui/i,                                    // Gigaset Tablets\n            /(vodafone) ([\\w ]+)(?:\\)| bui)/i                                   // Vodafone\n            ], [VENDOR, MODEL, [TYPE, TABLET]], [\n\n            /(surface duo)/i                                                    // Surface Duo\n            ], [MODEL, [VENDOR, MICROSOFT], [TYPE, TABLET]], [\n            /droid [\\d\\.]+; (fp\\du?)(?: b|\\))/i                                 // Fairphone\n            ], [MODEL, [VENDOR, 'Fairphone'], [TYPE, MOBILE]], [\n            /(u304aa)/i                                                         // AT&T\n            ], [MODEL, [VENDOR, 'AT&T'], [TYPE, MOBILE]], [\n            /\\bsie-(\\w*)/i                                                      // Siemens\n            ], [MODEL, [VENDOR, 'Siemens'], [TYPE, MOBILE]], [\n            /\\b(rct\\w+) b/i                                                     // RCA Tablets\n            ], [MODEL, [VENDOR, 'RCA'], [TYPE, TABLET]], [\n            /\\b(venue[\\d ]{2,7}) b/i                                            // Dell Venue Tablets\n            ], [MODEL, [VENDOR, 'Dell'], [TYPE, TABLET]], [\n            /\\b(q(?:mv|ta)\\w+) b/i                                              // Verizon Tablet\n            ], [MODEL, [VENDOR, 'Verizon'], [TYPE, TABLET]], [\n            /\\b(?:barnes[& ]+noble |bn[rt])([\\w\\+ ]*) b/i                       // Barnes & Noble Tablet\n            ], [MODEL, [VENDOR, 'Barnes & Noble'], [TYPE, TABLET]], [\n            /\\b(tm\\d{3}\\w+) b/i\n            ], [MODEL, [VENDOR, 'NuVision'], [TYPE, TABLET]], [\n            /\\b(k88) b/i                                                        // ZTE K Series Tablet\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, TABLET]], [\n            /\\b(nx\\d{3}j) b/i                                                   // ZTE Nubia\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, MOBILE]], [\n            /\\b(gen\\d{3}) b.+49h/i                                              // Swiss GEN Mobile\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, MOBILE]], [\n            /\\b(zur\\d{3}) b/i                                                   // Swiss ZUR Tablet\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, TABLET]], [\n            /\\b((zeki)?tb.*\\b) b/i                                              // Zeki Tablets\n            ], [MODEL, [VENDOR, 'Zeki'], [TYPE, TABLET]], [\n            /\\b([yr]\\d{2}) b/i,\n            /\\b(dragon[- ]+touch |dt)(\\w{5}) b/i                                // Dragon Touch Tablet\n            ], [[VENDOR, 'Dragon Touch'], MODEL, [TYPE, TABLET]], [\n            /\\b(ns-?\\w{0,9}) b/i                                                // Insignia Tablets\n            ], [MODEL, [VENDOR, 'Insignia'], [TYPE, TABLET]], [\n            /\\b((nxa|next)-?\\w{0,9}) b/i                                        // NextBook Tablets\n            ], [MODEL, [VENDOR, 'NextBook'], [TYPE, TABLET]], [\n            /\\b(xtreme\\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i                  // Voice Xtreme Phones\n            ], [[VENDOR, 'Voice'], MODEL, [TYPE, MOBILE]], [\n            /\\b(lvtel\\-)?(v1[12]) b/i                                           // LvTel Phones\n            ], [[VENDOR, 'LvTel'], MODEL, [TYPE, MOBILE]], [\n            /\\b(ph-1) /i                                                        // Essential PH-1\n            ], [MODEL, [VENDOR, 'Essential'], [TYPE, MOBILE]], [\n            /\\b(v(100md|700na|7011|917g).*\\b) b/i                               // Envizen Tablets\n            ], [MODEL, [VENDOR, 'Envizen'], [TYPE, TABLET]], [\n            /\\b(trio[-\\w\\. ]+) b/i                                              // MachSpeed Tablets\n            ], [MODEL, [VENDOR, 'MachSpeed'], [TYPE, TABLET]], [\n            /\\btu_(1491) b/i                                                    // Rotor Tablets\n            ], [MODEL, [VENDOR, 'Rotor'], [TYPE, TABLET]], [\n            /(shield[\\w ]+) b/i                                                 // Nvidia Shield Tablets\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, TABLET]], [\n            /(sprint) (\\w+)/i                                                   // Sprint Phones\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n            /(kin\\.[onetw]{3})/i                                                // Microsoft Kin\n            ], [[MODEL, /\\./g, ' '], [VENDOR, MICROSOFT], [TYPE, MOBILE]], [\n            /droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\\)/i             // Zebra\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, TABLET]], [\n            /droid.+; (ec30|ps20|tc[2-8]\\d[kx])\\)/i\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, MOBILE]], [\n\n            ///////////////////\n            // SMARTTVS\n            ///////////////////\n\n            /smart-tv.+(samsung)/i                                              // Samsung\n            ], [VENDOR, [TYPE, SMARTTV]], [\n            /hbbtv.+maple;(\\d+)/i\n            ], [[MODEL, /^/, 'SmartTV'], [VENDOR, SAMSUNG], [TYPE, SMARTTV]], [\n            /(nux; netcast.+smarttv|lg (netcast\\.tv-201\\d|android tv))/i        // LG SmartTV\n            ], [[VENDOR, LG], [TYPE, SMARTTV]], [\n            /(apple) ?tv/i                                                      // Apple TV\n            ], [VENDOR, [MODEL, APPLE+' TV'], [TYPE, SMARTTV]], [\n            /crkey/i                                                            // Google Chromecast\n            ], [[MODEL, CHROME+'cast'], [VENDOR, GOOGLE], [TYPE, SMARTTV]], [\n            /droid.+aft(\\w)( bui|\\))/i                                          // Fire TV\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, SMARTTV]], [\n            /\\(dtv[\\);].+(aquos)/i,\n            /(aquos-tv[\\w ]+)\\)/i                                               // Sharp\n            ], [MODEL, [VENDOR, SHARP], [TYPE, SMARTTV]],[\n            /(bravia[\\w ]+)( bui|\\))/i                                              // Sony\n            ], [MODEL, [VENDOR, SONY], [TYPE, SMARTTV]], [\n            /(mitv-\\w{5}) bui/i                                                 // Xiaomi\n            ], [MODEL, [VENDOR, XIAOMI], [TYPE, SMARTTV]], [\n            /Hbbtv.*(technisat) (.*);/i                                         // TechniSAT\n            ], [VENDOR, MODEL, [TYPE, SMARTTV]], [\n            /\\b(roku)[\\dx]*[\\)\\/]((?:dvp-)?[\\d\\.]*)/i,                          // Roku\n            /hbbtv\\/\\d+\\.\\d+\\.\\d+ +\\([\\w\\+ ]*; *([\\w\\d][^;]*);([^;]*)/i         // HbbTV devices\n            ], [[VENDOR, trim], [MODEL, trim], [TYPE, SMARTTV]], [\n            /\\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\\b/i                   // SmartTV from Unidentified Vendors\n            ], [[TYPE, SMARTTV]], [\n\n            ///////////////////\n            // CONSOLES\n            ///////////////////\n\n            /(ouya)/i,                                                          // Ouya\n            /(nintendo) ([wids3utch]+)/i                                        // Nintendo\n            ], [VENDOR, MODEL, [TYPE, CONSOLE]], [\n            /droid.+; (shield) bui/i                                            // Nvidia\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, CONSOLE]], [\n            /(playstation [345portablevi]+)/i                                   // Playstation\n            ], [MODEL, [VENDOR, SONY], [TYPE, CONSOLE]], [\n            /\\b(xbox(?: one)?(?!; xbox))[\\); ]/i                                // Microsoft Xbox\n            ], [MODEL, [VENDOR, MICROSOFT], [TYPE, CONSOLE]], [\n\n            ///////////////////\n            // WEARABLES\n            ///////////////////\n\n            /((pebble))app/i                                                    // Pebble\n            ], [VENDOR, MODEL, [TYPE, WEARABLE]], [\n            /(watch)(?: ?os[,\\/]|\\d,\\d\\/)[\\d\\.]+/i                              // Apple Watch\n            ], [MODEL, [VENDOR, APPLE], [TYPE, WEARABLE]], [\n            /droid.+; (glass) \\d/i                                              // Google Glass\n            ], [MODEL, [VENDOR, GOOGLE], [TYPE, WEARABLE]], [\n            /droid.+; (wt63?0{2,3})\\)/i\n            ], [MODEL, [VENDOR, ZEBRA], [TYPE, WEARABLE]], [\n            /(quest( 2| pro)?)/i                                                // Oculus Quest\n            ], [MODEL, [VENDOR, FACEBOOK], [TYPE, WEARABLE]], [\n\n            ///////////////////\n            // EMBEDDED\n            ///////////////////\n\n            /(tesla)(?: qtcarbrowser|\\/[-\\w\\.]+)/i                              // Tesla\n            ], [VENDOR, [TYPE, EMBEDDED]], [\n            /(aeobc)\\b/i                                                        // Echo Dot\n            ], [MODEL, [VENDOR, AMAZON], [TYPE, EMBEDDED]], [\n\n            ////////////////////\n            // MIXED (GENERIC)\n            ///////////////////\n\n            /droid .+?; ([^;]+?)(?: bui|\\) applew).+? mobile safari/i           // Android Phones from Unidentified Vendors\n            ], [MODEL, [TYPE, MOBILE]], [\n            /droid .+?; ([^;]+?)(?: bui|\\) applew).+?(?! mobile) safari/i       // Android Tablets from Unidentified Vendors\n            ], [MODEL, [TYPE, TABLET]], [\n            /\\b((tablet|tab)[;\\/]|focus\\/\\d(?!.+mobile))/i                      // Unidentifiable Tablet\n            ], [[TYPE, TABLET]], [\n            /(phone|mobile(?:[;\\/]| [ \\w\\/\\.]*safari)|pda(?=.+windows ce))/i    // Unidentifiable Mobile\n            ], [[TYPE, MOBILE]], [\n            /(android[-\\w\\. ]{0,9});.+buil/i                                    // Generic Android Device\n            ], [MODEL, [VENDOR, 'Generic']]\n        ],\n\n        engine : [[\n\n            /windows.+ edge\\/([\\w\\.]+)/i                                       // EdgeHTML\n            ], [VERSION, [NAME, EDGE+'HTML']], [\n\n            /webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i                         // Blink\n            ], [VERSION, [NAME, 'Blink']], [\n\n            /(presto)\\/([\\w\\.]+)/i,                                             // Presto\n            /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\\/([\\w\\.]+)/i, // WebKit/Trident/NetFront/NetSurf/Amaya/Lynx/w3m/Goanna\n            /ekioh(flow)\\/([\\w\\.]+)/i,                                          // Flow\n            /(khtml|tasman|links)[\\/ ]\\(?([\\w\\.]+)/i,                           // KHTML/Tasman/Links\n            /(icab)[\\/ ]([23]\\.[\\d\\.]+)/i,                                      // iCab\n            /\\b(libweb)/i\n            ], [NAME, VERSION], [\n\n            /rv\\:([\\w\\.]{1,9})\\b.+(gecko)/i                                     // Gecko\n            ], [VERSION, NAME]\n        ],\n\n        os : [[\n\n            // Windows\n            /microsoft (windows) (vista|xp)/i                                   // Windows (iTunes)\n            ], [NAME, VERSION], [\n            /(windows) nt 6\\.2; (arm)/i,                                        // Windows RT\n            /(windows (?:phone(?: os)?|mobile))[\\/ ]?([\\d\\.\\w ]*)/i,            // Windows Phone\n            /(windows)[\\/ ]?([ntce\\d\\. ]+\\w)(?!.+xbox)/i\n            ], [NAME, [VERSION, strMapper, windowsVersionMap]], [\n            /(win(?=3|9|n)|win 9x )([nt\\d\\.]+)/i\n            ], [[NAME, 'Windows'], [VERSION, strMapper, windowsVersionMap]], [\n\n            // iOS/macOS\n            /ip[honead]{2,4}\\b(?:.*os ([\\w]+) like mac|; opera)/i,              // iOS\n            /ios;fbsv\\/([\\d\\.]+)/i,\n            /cfnetwork\\/.+darwin/i\n            ], [[VERSION, /_/g, '.'], [NAME, 'iOS']], [\n            /(mac os x) ?([\\w\\. ]*)/i,\n            /(macintosh|mac_powerpc\\b)(?!.+haiku)/i                             // Mac OS\n            ], [[NAME, MAC_OS], [VERSION, /_/g, '.']], [\n\n            // Mobile OSes\n            /droid ([\\w\\.]+)\\b.+(android[- ]x86|harmonyos)/i                    // Android-x86/HarmonyOS\n            ], [VERSION, NAME], [                                               // Android/WebOS/QNX/Bada/RIM/Maemo/MeeGo/Sailfish OS\n            /(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish)[-\\/ ]?([\\w\\.]*)/i,\n            /(blackberry)\\w*\\/([\\w\\.]*)/i,                                      // Blackberry\n            /(tizen|kaios)[\\/ ]([\\w\\.]+)/i,                                     // Tizen/KaiOS\n            /\\((series40);/i                                                    // Series 40\n            ], [NAME, VERSION], [\n            /\\(bb(10);/i                                                        // BlackBerry 10\n            ], [VERSION, [NAME, BLACKBERRY]], [\n            /(?:symbian ?os|symbos|s60(?=;)|series60)[-\\/ ]?([\\w\\.]*)/i         // Symbian\n            ], [VERSION, [NAME, 'Symbian']], [\n            /mozilla\\/[\\d\\.]+ \\((?:mobile|tablet|tv|mobile; [\\w ]+); rv:.+ gecko\\/([\\w\\.]+)/i // Firefox OS\n            ], [VERSION, [NAME, FIREFOX+' OS']], [\n            /web0s;.+rt(tv)/i,\n            /\\b(?:hp)?wos(?:browser)?\\/([\\w\\.]+)/i                              // WebOS\n            ], [VERSION, [NAME, 'webOS']], [\n            /watch(?: ?os[,\\/]|\\d,\\d\\/)([\\d\\.]+)/i                              // watchOS\n            ], [VERSION, [NAME, 'watchOS']], [\n\n            // Google Chromecast\n            /crkey\\/([\\d\\.]+)/i                                                 // Google Chromecast\n            ], [VERSION, [NAME, CHROME+'cast']], [\n            /(cros) [\\w]+(?:\\)| ([\\w\\.]+)\\b)/i                                  // Chromium OS\n            ], [[NAME, CHROMIUM_OS], VERSION],[\n\n            // Smart TVs\n            /panasonic;(viera)/i,                                               // Panasonic Viera\n            /(netrange)mmh/i,                                                   // Netrange\n            /(nettv)\\/(\\d+\\.[\\w\\.]+)/i,                                         // NetTV\n\n            // Console\n            /(nintendo|playstation) ([wids345portablevuch]+)/i,                 // Nintendo/Playstation\n            /(xbox); +xbox ([^\\);]+)/i,                                         // Microsoft Xbox (360, One, X, S, Series X, Series S)\n\n            // Other\n            /\\b(joli|palm)\\b ?(?:os)?\\/?([\\w\\.]*)/i,                            // Joli/Palm\n            /(mint)[\\/\\(\\) ]?(\\w*)/i,                                           // Mint\n            /(mageia|vectorlinux)[; ]/i,                                        // Mageia/VectorLinux\n            /([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\\/ ]?(?!chrom|package)([-\\w\\.]*)/i,\n                                                                                // Ubuntu/Debian/SUSE/Gentoo/Arch/Slackware/Fedora/Mandriva/CentOS/PCLinuxOS/RedHat/Zenwalk/Linpus/Raspbian/Plan9/Minix/RISCOS/Contiki/Deepin/Manjaro/elementary/Sabayon/Linspire\n            /(hurd|linux) ?([\\w\\.]*)/i,                                         // Hurd/Linux\n            /(gnu) ?([\\w\\.]*)/i,                                                // GNU\n            /\\b([-frentopcghs]{0,5}bsd|dragonfly)[\\/ ]?(?!amd|[ix346]{1,2}86)([\\w\\.]*)/i, // FreeBSD/NetBSD/OpenBSD/PC-BSD/GhostBSD/DragonFly\n            /(haiku) (\\w+)/i                                                    // Haiku\n            ], [NAME, VERSION], [\n            /(sunos) ?([\\w\\.\\d]*)/i                                             // Solaris\n            ], [[NAME, 'Solaris'], VERSION], [\n            /((?:open)?solaris)[-\\/ ]?([\\w\\.]*)/i,                              // Solaris\n            /(aix) ((\\d)(?=\\.|\\)| )[\\w\\.])*/i,                                  // AIX\n            /\\b(beos|os\\/2|amigaos|morphos|openvms|fuchsia|hp-ux|serenityos)/i, // BeOS/OS2/AmigaOS/MorphOS/OpenVMS/Fuchsia/HP-UX/SerenityOS\n            /(unix) ?([\\w\\.]*)/i                                                // UNIX\n            ], [NAME, VERSION]\n        ]\n    };\n\n    /////////////////\n    // Constructor\n    ////////////////\n\n    var UAParser = function (ua, extensions) {\n\n        if (typeof ua === OBJ_TYPE) {\n            extensions = ua;\n            ua = undefined;\n        }\n\n        if (!(this instanceof UAParser)) {\n            return new UAParser(ua, extensions).getResult();\n        }\n\n        var _navigator = (typeof window !== UNDEF_TYPE && window.navigator) ? window.navigator : undefined;\n        var _ua = ua || ((_navigator && _navigator.userAgent) ? _navigator.userAgent : EMPTY);\n        var _uach = (_navigator && _navigator.userAgentData) ? _navigator.userAgentData : undefined;\n        var _rgxmap = extensions ? extend(regexes, extensions) : regexes;\n        var _isSelfNav = _navigator && _navigator.userAgent == _ua;\n\n        this.getBrowser = function () {\n            var _browser = {};\n            _browser[NAME] = undefined;\n            _browser[VERSION] = undefined;\n            rgxMapper.call(_browser, _ua, _rgxmap.browser);\n            _browser[MAJOR] = majorize(_browser[VERSION]);\n            // Brave-specific detection\n            if (_isSelfNav && _navigator && _navigator.brave && typeof _navigator.brave.isBrave == FUNC_TYPE) {\n                _browser[NAME] = 'Brave';\n            }\n            return _browser;\n        };\n        this.getCPU = function () {\n            var _cpu = {};\n            _cpu[ARCHITECTURE] = undefined;\n            rgxMapper.call(_cpu, _ua, _rgxmap.cpu);\n            return _cpu;\n        };\n        this.getDevice = function () {\n            var _device = {};\n            _device[VENDOR] = undefined;\n            _device[MODEL] = undefined;\n            _device[TYPE] = undefined;\n            rgxMapper.call(_device, _ua, _rgxmap.device);\n            if (_isSelfNav && !_device[TYPE] && _uach && _uach.mobile) {\n                _device[TYPE] = MOBILE;\n            }\n            // iPadOS-specific detection: identified as Mac, but has some iOS-only properties\n            if (_isSelfNav && _device[MODEL] == 'Macintosh' && _navigator && typeof _navigator.standalone !== UNDEF_TYPE && _navigator.maxTouchPoints && _navigator.maxTouchPoints > 2) {\n                _device[MODEL] = 'iPad';\n                _device[TYPE] = TABLET;\n            }\n            return _device;\n        };\n        this.getEngine = function () {\n            var _engine = {};\n            _engine[NAME] = undefined;\n            _engine[VERSION] = undefined;\n            rgxMapper.call(_engine, _ua, _rgxmap.engine);\n            return _engine;\n        };\n        this.getOS = function () {\n            var _os = {};\n            _os[NAME] = undefined;\n            _os[VERSION] = undefined;\n            rgxMapper.call(_os, _ua, _rgxmap.os);\n            if (_isSelfNav && !_os[NAME] && _uach && _uach.platform != 'Unknown') {\n                _os[NAME] = _uach.platform  \n                                    .replace(/chrome os/i, CHROMIUM_OS)\n                                    .replace(/macos/i, MAC_OS);           // backward compatibility\n            }\n            return _os;\n        };\n        this.getResult = function () {\n            return {\n                ua      : this.getUA(),\n                browser : this.getBrowser(),\n                engine  : this.getEngine(),\n                os      : this.getOS(),\n                device  : this.getDevice(),\n                cpu     : this.getCPU()\n            };\n        };\n        this.getUA = function () {\n            return _ua;\n        };\n        this.setUA = function (ua) {\n            _ua = (typeof ua === STR_TYPE && ua.length > UA_MAX_LENGTH) ? trim(ua, UA_MAX_LENGTH) : ua;\n            return this;\n        };\n        this.setUA(_ua);\n        return this;\n    };\n\n    UAParser.VERSION = LIBVERSION;\n    UAParser.BROWSER =  enumerize([NAME, VERSION, MAJOR]);\n    UAParser.CPU = enumerize([ARCHITECTURE]);\n    UAParser.DEVICE = enumerize([MODEL, VENDOR, TYPE, CONSOLE, MOBILE, SMARTTV, TABLET, WEARABLE, EMBEDDED]);\n    UAParser.ENGINE = UAParser.OS = enumerize([NAME, VERSION]);\n\n    ///////////\n    // Export\n    //////////\n\n    // check js environment\n    if (typeof(exports) !== UNDEF_TYPE) {\n        // nodejs env\n        if (typeof module !== UNDEF_TYPE && module.exports) {\n            exports = module.exports = UAParser;\n        }\n        exports.UAParser = UAParser;\n    } else {\n        // requirejs env (optional)\n        if (typeof(define) === FUNC_TYPE && define.amd) {\n            define(function () {\n                return UAParser;\n            });\n        } else if (typeof window !== UNDEF_TYPE) {\n            // browser env\n            window.UAParser = UAParser;\n        }\n    }\n\n    // jQuery/Zepto specific (optional)\n    // Note:\n    //   In AMD env the global scope should be kept clean, but jQuery is an exception.\n    //   jQuery always exports to global scope, unless jQuery.noConflict(true) is used,\n    //   and we should catch that.\n    var $ = typeof window !== UNDEF_TYPE && (window.jQuery || window.Zepto);\n    if ($ && !$.ua) {\n        var parser = new UAParser();\n        $.ua = parser.getResult();\n        $.ua.get = function () {\n            return parser.getUA();\n        };\n        $.ua.set = function (ua) {\n            parser.setUA(ua);\n            var result = parser.getResult();\n            for (var prop in result) {\n                $.ua[prop] = result[prop];\n            }\n        };\n    }\n\n})(typeof window === 'object' ? window : this);\n","export { default as v1 } from './v1.js';\nexport { default as v3 } from './v3.js';\nexport { default as v4 } from './v4.js';\nexport { default as v5 } from './v5.js';\nexport { default as NIL } from './nil.js';\nexport { default as version } from './version.js';\nexport { default as validate } from './validate.js';\nexport { default as stringify } from './stringify.js';\nexport { default as parse } from './parse.js';","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","/*!\n * EventEmitter2\n * https://github.com/hij1nx/EventEmitter2\n *\n * Copyright (c) 2013 hij1nx\n * Licensed under the MIT license.\n */\n;!function(undefined) {\n  var hasOwnProperty= Object.hasOwnProperty;\n  var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n    return Object.prototype.toString.call(obj) === \"[object Array]\";\n  };\n  var defaultMaxListeners = 10;\n  var nextTickSupported= typeof process=='object' && typeof process.nextTick=='function';\n  var symbolsSupported= typeof Symbol==='function';\n  var reflectSupported= typeof Reflect === 'object';\n  var setImmediateSupported= typeof setImmediate === 'function';\n  var _setImmediate= setImmediateSupported ? setImmediate : setTimeout;\n  var ownKeys= symbolsSupported? (reflectSupported && typeof Reflect.ownKeys==='function'? Reflect.ownKeys : function(obj){\n    var arr= Object.getOwnPropertyNames(obj);\n    arr.push.apply(arr, Object.getOwnPropertySymbols(obj));\n    return arr;\n  }) : Object.keys;\n\n  function init() {\n    this._events = {};\n    if (this._conf) {\n      configure.call(this, this._conf);\n    }\n  }\n\n  function configure(conf) {\n    if (conf) {\n      this._conf = conf;\n\n      conf.delimiter && (this.delimiter = conf.delimiter);\n\n      if(conf.maxListeners!==undefined){\n          this._maxListeners= conf.maxListeners;\n      }\n\n      conf.wildcard && (this.wildcard = conf.wildcard);\n      conf.newListener && (this._newListener = conf.newListener);\n      conf.removeListener && (this._removeListener = conf.removeListener);\n      conf.verboseMemoryLeak && (this.verboseMemoryLeak = conf.verboseMemoryLeak);\n      conf.ignoreErrors && (this.ignoreErrors = conf.ignoreErrors);\n\n      if (this.wildcard) {\n        this.listenerTree = {};\n      }\n    }\n  }\n\n  function logPossibleMemoryLeak(count, eventName) {\n    var errorMsg = '(node) warning: possible EventEmitter memory ' +\n        'leak detected. ' + count + ' listeners added. ' +\n        'Use emitter.setMaxListeners() to increase limit.';\n\n    if(this.verboseMemoryLeak){\n      errorMsg += ' Event name: ' + eventName + '.';\n    }\n\n    if(typeof process !== 'undefined' && process.emitWarning){\n      var e = new Error(errorMsg);\n      e.name = 'MaxListenersExceededWarning';\n      e.emitter = this;\n      e.count = count;\n      process.emitWarning(e);\n    } else {\n      console.error(errorMsg);\n\n      if (console.trace){\n        console.trace();\n      }\n    }\n  }\n\n  var toArray = function (a, b, c) {\n    var n = arguments.length;\n    switch (n) {\n      case 0:\n        return [];\n      case 1:\n        return [a];\n      case 2:\n        return [a, b];\n      case 3:\n        return [a, b, c];\n      default:\n        var arr = new Array(n);\n        while (n--) {\n          arr[n] = arguments[n];\n        }\n        return arr;\n    }\n  };\n\n  function toObject(keys, values) {\n    var obj = {};\n    var key;\n    var len = keys.length;\n    var valuesCount = values ? values.length : 0;\n    for (var i = 0; i < len; i++) {\n      key = keys[i];\n      obj[key] = i < valuesCount ? values[i] : undefined;\n    }\n    return obj;\n  }\n\n  function TargetObserver(emitter, target, options) {\n    this._emitter = emitter;\n    this._target = target;\n    this._listeners = {};\n    this._listenersCount = 0;\n\n    var on, off;\n\n    if (options.on || options.off) {\n      on = options.on;\n      off = options.off;\n    }\n\n    if (target.addEventListener) {\n      on = target.addEventListener;\n      off = target.removeEventListener;\n    } else if (target.addListener) {\n      on = target.addListener;\n      off = target.removeListener;\n    } else if (target.on) {\n      on = target.on;\n      off = target.off;\n    }\n\n    if (!on && !off) {\n      throw Error('target does not implement any known event API');\n    }\n\n    if (typeof on !== 'function') {\n      throw TypeError('on method must be a function');\n    }\n\n    if (typeof off !== 'function') {\n      throw TypeError('off method must be a function');\n    }\n\n    this._on = on;\n    this._off = off;\n\n    var _observers= emitter._observers;\n    if(_observers){\n      _observers.push(this);\n    }else{\n      emitter._observers= [this];\n    }\n  }\n\n  Object.assign(TargetObserver.prototype, {\n    subscribe: function(event, localEvent, reducer){\n      var observer= this;\n      var target= this._target;\n      var emitter= this._emitter;\n      var listeners= this._listeners;\n      var handler= function(){\n        var args= toArray.apply(null, arguments);\n        var eventObj= {\n          data: args,\n          name: localEvent,\n          original: event\n        };\n        if(reducer){\n          var result= reducer.call(target, eventObj);\n          if(result!==false){\n            emitter.emit.apply(emitter, [eventObj.name].concat(args))\n          }\n          return;\n        }\n        emitter.emit.apply(emitter, [localEvent].concat(args));\n      };\n\n\n      if(listeners[event]){\n        throw Error('Event \\'' + event + '\\' is already listening');\n      }\n\n      this._listenersCount++;\n\n      if(emitter._newListener && emitter._removeListener && !observer._onNewListener){\n\n        this._onNewListener = function (_event) {\n          if (_event === localEvent && listeners[event] === null) {\n            listeners[event] = handler;\n            observer._on.call(target, event, handler);\n          }\n        };\n\n        emitter.on('newListener', this._onNewListener);\n\n        this._onRemoveListener= function(_event){\n          if(_event === localEvent && !emitter.hasListeners(_event) && listeners[event]){\n            listeners[event]= null;\n            observer._off.call(target, event, handler);\n          }\n        };\n\n        listeners[event]= null;\n\n        emitter.on('removeListener', this._onRemoveListener);\n      }else{\n        listeners[event]= handler;\n        observer._on.call(target, event, handler);\n      }\n    },\n\n    unsubscribe: function(event){\n      var observer= this;\n      var listeners= this._listeners;\n      var emitter= this._emitter;\n      var handler;\n      var events;\n      var off= this._off;\n      var target= this._target;\n      var i;\n\n      if(event && typeof event!=='string'){\n        throw TypeError('event must be a string');\n      }\n\n      function clearRefs(){\n        if(observer._onNewListener){\n          emitter.off('newListener', observer._onNewListener);\n          emitter.off('removeListener', observer._onRemoveListener);\n          observer._onNewListener= null;\n          observer._onRemoveListener= null;\n        }\n        var index= findTargetIndex.call(emitter, observer);\n        emitter._observers.splice(index, 1);\n      }\n\n      if(event){\n        handler= listeners[event];\n        if(!handler) return;\n        off.call(target, event, handler);\n        delete listeners[event];\n        if(!--this._listenersCount){\n          clearRefs();\n        }\n      }else{\n        events= ownKeys(listeners);\n        i= events.length;\n        while(i-->0){\n          event= events[i];\n          off.call(target, event, listeners[event]);\n        }\n        this._listeners= {};\n        this._listenersCount= 0;\n        clearRefs();\n      }\n    }\n  });\n\n  function resolveOptions(options, schema, reducers, allowUnknown) {\n    var computedOptions = Object.assign({}, schema);\n\n    if (!options) return computedOptions;\n\n    if (typeof options !== 'object') {\n      throw TypeError('options must be an object')\n    }\n\n    var keys = Object.keys(options);\n    var length = keys.length;\n    var option, value;\n    var reducer;\n\n    function reject(reason) {\n      throw Error('Invalid \"' + option + '\" option value' + (reason ? '. Reason: ' + reason : ''))\n    }\n\n    for (var i = 0; i < length; i++) {\n      option = keys[i];\n      if (!allowUnknown && !hasOwnProperty.call(schema, option)) {\n        throw Error('Unknown \"' + option + '\" option');\n      }\n      value = options[option];\n      if (value !== undefined) {\n        reducer = reducers[option];\n        computedOptions[option] = reducer ? reducer(value, reject) : value;\n      }\n    }\n    return computedOptions;\n  }\n\n  function constructorReducer(value, reject) {\n    if (typeof value !== 'function' || !value.hasOwnProperty('prototype')) {\n      reject('value must be a constructor');\n    }\n    return value;\n  }\n\n  function makeTypeReducer(types) {\n    var message= 'value must be type of ' + types.join('|');\n    var len= types.length;\n    var firstType= types[0];\n    var secondType= types[1];\n\n    if (len === 1) {\n      return function (v, reject) {\n        if (typeof v === firstType) {\n          return v;\n        }\n        reject(message);\n      }\n    }\n\n    if (len === 2) {\n      return function (v, reject) {\n        var kind= typeof v;\n        if (kind === firstType || kind === secondType) return v;\n        reject(message);\n      }\n    }\n\n    return function (v, reject) {\n      var kind = typeof v;\n      var i = len;\n      while (i-- > 0) {\n        if (kind === types[i]) return v;\n      }\n      reject(message);\n    }\n  }\n\n  var functionReducer= makeTypeReducer(['function']);\n\n  var objectFunctionReducer= makeTypeReducer(['object', 'function']);\n\n  function makeCancelablePromise(Promise, executor, options) {\n    var isCancelable;\n    var callbacks;\n    var timer= 0;\n    var subscriptionClosed;\n\n    var promise = new Promise(function (resolve, reject, onCancel) {\n      options= resolveOptions(options, {\n        timeout: 0,\n        overload: false\n      }, {\n        timeout: function(value, reject){\n          value*= 1;\n          if (typeof value !== 'number' || value < 0 || !Number.isFinite(value)) {\n            reject('timeout must be a positive number');\n          }\n          return value;\n        }\n      });\n\n      isCancelable = !options.overload && typeof Promise.prototype.cancel === 'function' && typeof onCancel === 'function';\n\n      function cleanup() {\n        if (callbacks) {\n          callbacks = null;\n        }\n        if (timer) {\n          clearTimeout(timer);\n          timer = 0;\n        }\n      }\n\n      var _resolve= function(value){\n        cleanup();\n        resolve(value);\n      };\n\n      var _reject= function(err){\n        cleanup();\n        reject(err);\n      };\n\n      if (isCancelable) {\n        executor(_resolve, _reject, onCancel);\n      } else {\n        callbacks = [function(reason){\n          _reject(reason || Error('canceled'));\n        }];\n        executor(_resolve, _reject, function (cb) {\n          if (subscriptionClosed) {\n            throw Error('Unable to subscribe on cancel event asynchronously')\n          }\n          if (typeof cb !== 'function') {\n            throw TypeError('onCancel callback must be a function');\n          }\n          callbacks.push(cb);\n        });\n        subscriptionClosed= true;\n      }\n\n      if (options.timeout > 0) {\n        timer= setTimeout(function(){\n          var reason= Error('timeout');\n          reason.code = 'ETIMEDOUT'\n          timer= 0;\n          promise.cancel(reason);\n          reject(reason);\n        }, options.timeout);\n      }\n    });\n\n    if (!isCancelable) {\n      promise.cancel = function (reason) {\n        if (!callbacks) {\n          return;\n        }\n        var length = callbacks.length;\n        for (var i = 1; i < length; i++) {\n          callbacks[i](reason);\n        }\n        // internal callback to reject the promise\n        callbacks[0](reason);\n        callbacks = null;\n      };\n    }\n\n    return promise;\n  }\n\n  function findTargetIndex(observer) {\n    var observers = this._observers;\n    if(!observers){\n      return -1;\n    }\n    var len = observers.length;\n    for (var i = 0; i < len; i++) {\n      if (observers[i]._target === observer) return i;\n    }\n    return -1;\n  }\n\n  // Attention, function return type now is array, always !\n  // It has zero elements if no any matches found and one or more\n  // elements (leafs) if there are matches\n  //\n  function searchListenerTree(handlers, type, tree, i, typeLength) {\n    if (!tree) {\n      return null;\n    }\n\n    if (i === 0) {\n      var kind = typeof type;\n      if (kind === 'string') {\n        var ns, n, l = 0, j = 0, delimiter = this.delimiter, dl = delimiter.length;\n        if ((n = type.indexOf(delimiter)) !== -1) {\n          ns = new Array(5);\n          do {\n            ns[l++] = type.slice(j, n);\n            j = n + dl;\n          } while ((n = type.indexOf(delimiter, j)) !== -1);\n\n          ns[l++] = type.slice(j);\n          type = ns;\n          typeLength = l;\n        } else {\n          type = [type];\n          typeLength = 1;\n        }\n      } else if (kind === 'object') {\n        typeLength = type.length;\n      } else {\n        type = [type];\n        typeLength = 1;\n      }\n    }\n\n    var listeners= null, branch, xTree, xxTree, isolatedBranch, endReached, currentType = type[i],\n        nextType = type[i + 1], branches, _listeners;\n\n    if (i === typeLength) {\n      //\n      // If at the end of the event(s) list and the tree has listeners\n      // invoke those listeners.\n      //\n\n      if(tree._listeners) {\n        if (typeof tree._listeners === 'function') {\n          handlers && handlers.push(tree._listeners);\n          listeners = [tree];\n        } else {\n          handlers && handlers.push.apply(handlers, tree._listeners);\n          listeners = [tree];\n        }\n      }\n    } else {\n\n      if (currentType === '*') {\n        //\n        // If the event emitted is '*' at this part\n        // or there is a concrete match at this patch\n        //\n        branches = ownKeys(tree);\n        n = branches.length;\n        while (n-- > 0) {\n          branch = branches[n];\n          if (branch !== '_listeners') {\n            _listeners = searchListenerTree(handlers, type, tree[branch], i + 1, typeLength);\n            if (_listeners) {\n              if (listeners) {\n                listeners.push.apply(listeners, _listeners);\n              } else {\n                listeners = _listeners;\n              }\n            }\n          }\n        }\n        return listeners;\n      } else if (currentType === '**') {\n        endReached = (i + 1 === typeLength || (i + 2 === typeLength && nextType === '*'));\n        if (endReached && tree._listeners) {\n          // The next element has a _listeners, add it to the handlers.\n          listeners = searchListenerTree(handlers, type, tree, typeLength, typeLength);\n        }\n\n        branches = ownKeys(tree);\n        n = branches.length;\n        while (n-- > 0) {\n          branch = branches[n];\n          if (branch !== '_listeners') {\n            if (branch === '*' || branch === '**') {\n              if (tree[branch]._listeners && !endReached) {\n                _listeners = searchListenerTree(handlers, type, tree[branch], typeLength, typeLength);\n                if (_listeners) {\n                  if (listeners) {\n                    listeners.push.apply(listeners, _listeners);\n                  } else {\n                    listeners = _listeners;\n                  }\n                }\n              }\n              _listeners = searchListenerTree(handlers, type, tree[branch], i, typeLength);\n            } else if (branch === nextType) {\n              _listeners = searchListenerTree(handlers, type, tree[branch], i + 2, typeLength);\n            } else {\n              // No match on this one, shift into the tree but not in the type array.\n              _listeners = searchListenerTree(handlers, type, tree[branch], i, typeLength);\n            }\n            if (_listeners) {\n              if (listeners) {\n                listeners.push.apply(listeners, _listeners);\n              } else {\n                listeners = _listeners;\n              }\n            }\n          }\n        }\n        return listeners;\n      } else if (tree[currentType]) {\n        listeners = searchListenerTree(handlers, type, tree[currentType], i + 1, typeLength);\n      }\n    }\n\n      xTree = tree['*'];\n    if (xTree) {\n      //\n      // If the listener tree will allow any match for this part,\n      // then recursively explore all branches of the tree\n      //\n      searchListenerTree(handlers, type, xTree, i + 1, typeLength);\n    }\n\n    xxTree = tree['**'];\n    if (xxTree) {\n      if (i < typeLength) {\n        if (xxTree._listeners) {\n          // If we have a listener on a '**', it will catch all, so add its handler.\n          searchListenerTree(handlers, type, xxTree, typeLength, typeLength);\n        }\n\n        // Build arrays of matching next branches and others.\n        branches= ownKeys(xxTree);\n        n= branches.length;\n        while(n-->0){\n          branch= branches[n];\n          if (branch !== '_listeners') {\n            if (branch === nextType) {\n              // We know the next element will match, so jump twice.\n              searchListenerTree(handlers, type, xxTree[branch], i + 2, typeLength);\n            } else if (branch === currentType) {\n              // Current node matches, move into the tree.\n              searchListenerTree(handlers, type, xxTree[branch], i + 1, typeLength);\n            } else {\n              isolatedBranch = {};\n              isolatedBranch[branch] = xxTree[branch];\n              searchListenerTree(handlers, type, {'**': isolatedBranch}, i + 1, typeLength);\n            }\n          }\n        }\n      } else if (xxTree._listeners) {\n        // We have reached the end and still on a '**'\n        searchListenerTree(handlers, type, xxTree, typeLength, typeLength);\n      } else if (xxTree['*'] && xxTree['*']._listeners) {\n        searchListenerTree(handlers, type, xxTree['*'], typeLength, typeLength);\n      }\n    }\n\n    return listeners;\n  }\n\n  function growListenerTree(type, listener, prepend) {\n    var len = 0, j = 0, i, delimiter = this.delimiter, dl= delimiter.length, ns;\n\n    if(typeof type==='string') {\n      if ((i = type.indexOf(delimiter)) !== -1) {\n        ns = new Array(5);\n        do {\n          ns[len++] = type.slice(j, i);\n          j = i + dl;\n        } while ((i = type.indexOf(delimiter, j)) !== -1);\n\n        ns[len++] = type.slice(j);\n      }else{\n        ns= [type];\n        len= 1;\n      }\n    }else{\n      ns= type;\n      len= type.length;\n    }\n\n    //\n    // Looks for two consecutive '**', if so, don't add the event at all.\n    //\n    if (len > 1) {\n      for (i = 0; i + 1 < len; i++) {\n        if (ns[i] === '**' && ns[i + 1] === '**') {\n          return;\n        }\n      }\n    }\n\n\n\n    var tree = this.listenerTree, name;\n\n    for (i = 0; i < len; i++) {\n      name = ns[i];\n\n      tree = tree[name] || (tree[name] = {});\n\n      if (i === len - 1) {\n        if (!tree._listeners) {\n          tree._listeners = listener;\n        } else {\n          if (typeof tree._listeners === 'function') {\n            tree._listeners = [tree._listeners];\n          }\n\n          if (prepend) {\n            tree._listeners.unshift(listener);\n          } else {\n            tree._listeners.push(listener);\n          }\n\n          if (\n              !tree._listeners.warned &&\n              this._maxListeners > 0 &&\n              tree._listeners.length > this._maxListeners\n          ) {\n            tree._listeners.warned = true;\n            logPossibleMemoryLeak.call(this, tree._listeners.length, name);\n          }\n        }\n        return true;\n      }\n    }\n\n    return true;\n  }\n\n  function collectTreeEvents(tree, events, root, asArray){\n     var branches= ownKeys(tree);\n     var i= branches.length;\n     var branch, branchName, path;\n     var hasListeners= tree['_listeners'];\n     var isArrayPath;\n\n     while(i-->0){\n         branchName= branches[i];\n\n         branch= tree[branchName];\n\n         if(branchName==='_listeners'){\n             path= root;\n         }else {\n             path = root ? root.concat(branchName) : [branchName];\n         }\n\n         isArrayPath= asArray || typeof branchName==='symbol';\n\n         hasListeners && events.push(isArrayPath? path : path.join(this.delimiter));\n\n         if(typeof branch==='object'){\n             collectTreeEvents.call(this, branch, events, path, isArrayPath);\n         }\n     }\n\n     return events;\n  }\n\n  function recursivelyGarbageCollect(root) {\n    var keys = ownKeys(root);\n    var i= keys.length;\n    var obj, key, flag;\n    while(i-->0){\n      key = keys[i];\n      obj = root[key];\n\n      if(obj){\n          flag= true;\n          if(key !== '_listeners' && !recursivelyGarbageCollect(obj)){\n             delete root[key];\n          }\n      }\n    }\n\n    return flag;\n  }\n\n  function Listener(emitter, event, listener){\n    this.emitter= emitter;\n    this.event= event;\n    this.listener= listener;\n  }\n\n  Listener.prototype.off= function(){\n    this.emitter.off(this.event, this.listener);\n    return this;\n  };\n\n  function setupListener(event, listener, options){\n      if (options === true) {\n        promisify = true;\n      } else if (options === false) {\n        async = true;\n      } else {\n        if (!options || typeof options !== 'object') {\n          throw TypeError('options should be an object or true');\n        }\n        var async = options.async;\n        var promisify = options.promisify;\n        var nextTick = options.nextTick;\n        var objectify = options.objectify;\n      }\n\n      if (async || nextTick || promisify) {\n        var _listener = listener;\n        var _origin = listener._origin || listener;\n\n        if (nextTick && !nextTickSupported) {\n          throw Error('process.nextTick is not supported');\n        }\n\n        if (promisify === undefined) {\n          promisify = listener.constructor.name === 'AsyncFunction';\n        }\n\n        listener = function () {\n          var args = arguments;\n          var context = this;\n          var event = this.event;\n\n          return promisify ? (nextTick ? Promise.resolve() : new Promise(function (resolve) {\n            _setImmediate(resolve);\n          }).then(function () {\n            context.event = event;\n            return _listener.apply(context, args)\n          })) : (nextTick ? process.nextTick : _setImmediate)(function () {\n            context.event = event;\n            _listener.apply(context, args)\n          });\n        };\n\n        listener._async = true;\n        listener._origin = _origin;\n      }\n\n    return [listener, objectify? new Listener(this, event, listener): this];\n  }\n\n  function EventEmitter(conf) {\n    this._events = {};\n    this._newListener = false;\n    this._removeListener = false;\n    this.verboseMemoryLeak = false;\n    configure.call(this, conf);\n  }\n\n  EventEmitter.EventEmitter2 = EventEmitter; // backwards compatibility for exporting EventEmitter property\n\n  EventEmitter.prototype.listenTo= function(target, events, options){\n    if(typeof target!=='object'){\n      throw TypeError('target musts be an object');\n    }\n\n    var emitter= this;\n\n    options = resolveOptions(options, {\n      on: undefined,\n      off: undefined,\n      reducers: undefined\n    }, {\n      on: functionReducer,\n      off: functionReducer,\n      reducers: objectFunctionReducer\n    });\n\n    function listen(events){\n      if(typeof events!=='object'){\n        throw TypeError('events must be an object');\n      }\n\n      var reducers= options.reducers;\n      var index= findTargetIndex.call(emitter, target);\n      var observer;\n\n      if(index===-1){\n        observer= new TargetObserver(emitter, target, options);\n      }else{\n        observer= emitter._observers[index];\n      }\n\n      var keys= ownKeys(events);\n      var len= keys.length;\n      var event;\n      var isSingleReducer= typeof reducers==='function';\n\n      for(var i=0; i<len; i++){\n        event= keys[i];\n        observer.subscribe(\n            event,\n            events[event] || event,\n            isSingleReducer ? reducers : reducers && reducers[event]\n        );\n      }\n    }\n\n    isArray(events)?\n        listen(toObject(events)) :\n        (typeof events==='string'? listen(toObject(events.split(/\\s+/))): listen(events));\n\n    return this;\n  };\n\n  EventEmitter.prototype.stopListeningTo = function (target, event) {\n    var observers = this._observers;\n\n    if(!observers){\n      return false;\n    }\n\n    var i = observers.length;\n    var observer;\n    var matched= false;\n\n    if(target && typeof target!=='object'){\n      throw TypeError('target should be an object');\n    }\n\n    while (i-- > 0) {\n      observer = observers[i];\n      if (!target || observer._target === target) {\n        observer.unsubscribe(event);\n        matched= true;\n      }\n    }\n\n    return matched;\n  };\n\n  // By default EventEmitters will print a warning if more than\n  // 10 listeners are added to it. This is a useful default which\n  // helps finding memory leaks.\n  //\n  // Obviously not all Emitters should be limited to 10. This function allows\n  // that to be increased. Set to zero for unlimited.\n\n  EventEmitter.prototype.delimiter = '.';\n\n  EventEmitter.prototype.setMaxListeners = function(n) {\n    if (n !== undefined) {\n      this._maxListeners = n;\n      if (!this._conf) this._conf = {};\n      this._conf.maxListeners = n;\n    }\n  };\n\n  EventEmitter.prototype.getMaxListeners = function() {\n    return this._maxListeners;\n  };\n\n  EventEmitter.prototype.event = '';\n\n  EventEmitter.prototype.once = function(event, fn, options) {\n    return this._once(event, fn, false, options);\n  };\n\n  EventEmitter.prototype.prependOnceListener = function(event, fn, options) {\n    return this._once(event, fn, true, options);\n  };\n\n  EventEmitter.prototype._once = function(event, fn, prepend, options) {\n    return this._many(event, 1, fn, prepend, options);\n  };\n\n  EventEmitter.prototype.many = function(event, ttl, fn, options) {\n    return this._many(event, ttl, fn, false, options);\n  };\n\n  EventEmitter.prototype.prependMany = function(event, ttl, fn, options) {\n    return this._many(event, ttl, fn, true, options);\n  };\n\n  EventEmitter.prototype._many = function(event, ttl, fn, prepend, options) {\n    var self = this;\n\n    if (typeof fn !== 'function') {\n      throw new Error('many only accepts instances of Function');\n    }\n\n    function listener() {\n      if (--ttl === 0) {\n        self.off(event, listener);\n      }\n      return fn.apply(this, arguments);\n    }\n\n    listener._origin = fn;\n\n    return this._on(event, listener, prepend, options);\n  };\n\n  EventEmitter.prototype.emit = function() {\n    if (!this._events && !this._all) {\n      return false;\n    }\n\n    this._events || init.call(this);\n\n    var type = arguments[0], ns, wildcard= this.wildcard;\n    var args,l,i,j, containsSymbol;\n\n    if (type === 'newListener' && !this._newListener) {\n      if (!this._events.newListener) {\n        return false;\n      }\n    }\n\n    if (wildcard) {\n      ns= type;\n      if(type!=='newListener' && type!=='removeListener'){\n        if (typeof type === 'object') {\n          l = type.length;\n          if (symbolsSupported) {\n            for (i = 0; i < l; i++) {\n              if (typeof type[i] === 'symbol') {\n                containsSymbol = true;\n                break;\n              }\n            }\n          }\n          if (!containsSymbol) {\n            type = type.join(this.delimiter);\n          }\n        }\n      }\n    }\n\n    var al = arguments.length;\n    var handler;\n\n    if (this._all && this._all.length) {\n      handler = this._all.slice();\n\n      for (i = 0, l = handler.length; i < l; i++) {\n        this.event = type;\n        switch (al) {\n        case 1:\n          handler[i].call(this, type);\n          break;\n        case 2:\n          handler[i].call(this, type, arguments[1]);\n          break;\n        case 3:\n          handler[i].call(this, type, arguments[1], arguments[2]);\n          break;\n        default:\n          handler[i].apply(this, arguments);\n        }\n      }\n    }\n\n    if (wildcard) {\n      handler = [];\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0, l);\n    } else {\n      handler = this._events[type];\n      if (typeof handler === 'function') {\n        this.event = type;\n        switch (al) {\n        case 1:\n          handler.call(this);\n          break;\n        case 2:\n          handler.call(this, arguments[1]);\n          break;\n        case 3:\n          handler.call(this, arguments[1], arguments[2]);\n          break;\n        default:\n          args = new Array(al - 1);\n          for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n          handler.apply(this, args);\n        }\n        return true;\n      } else if (handler) {\n        // need to make copy of handlers because list can change in the middle\n        // of emit call\n        handler = handler.slice();\n      }\n    }\n\n    if (handler && handler.length) {\n      if (al > 3) {\n        args = new Array(al - 1);\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n      }\n      for (i = 0, l = handler.length; i < l; i++) {\n        this.event = type;\n        switch (al) {\n        case 1:\n          handler[i].call(this);\n          break;\n        case 2:\n          handler[i].call(this, arguments[1]);\n          break;\n        case 3:\n          handler[i].call(this, arguments[1], arguments[2]);\n          break;\n        default:\n          handler[i].apply(this, args);\n        }\n      }\n      return true;\n    } else if (!this.ignoreErrors && !this._all && type === 'error') {\n      if (arguments[1] instanceof Error) {\n        throw arguments[1]; // Unhandled 'error' event\n      } else {\n        throw new Error(\"Uncaught, unspecified 'error' event.\");\n      }\n    }\n\n    return !!this._all;\n  };\n\n  EventEmitter.prototype.emitAsync = function() {\n    if (!this._events && !this._all) {\n      return false;\n    }\n\n    this._events || init.call(this);\n\n    var type = arguments[0], wildcard= this.wildcard, ns, containsSymbol;\n    var args,l,i,j;\n\n    if (type === 'newListener' && !this._newListener) {\n        if (!this._events.newListener) { return Promise.resolve([false]); }\n    }\n\n    if (wildcard) {\n      ns= type;\n      if(type!=='newListener' && type!=='removeListener'){\n        if (typeof type === 'object') {\n          l = type.length;\n          if (symbolsSupported) {\n            for (i = 0; i < l; i++) {\n              if (typeof type[i] === 'symbol') {\n                containsSymbol = true;\n                break;\n              }\n            }\n          }\n          if (!containsSymbol) {\n            type = type.join(this.delimiter);\n          }\n        }\n      }\n    }\n\n    var promises= [];\n\n    var al = arguments.length;\n    var handler;\n\n    if (this._all) {\n      for (i = 0, l = this._all.length; i < l; i++) {\n        this.event = type;\n        switch (al) {\n        case 1:\n          promises.push(this._all[i].call(this, type));\n          break;\n        case 2:\n          promises.push(this._all[i].call(this, type, arguments[1]));\n          break;\n        case 3:\n          promises.push(this._all[i].call(this, type, arguments[1], arguments[2]));\n          break;\n        default:\n          promises.push(this._all[i].apply(this, arguments));\n        }\n      }\n    }\n\n    if (wildcard) {\n      handler = [];\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n    } else {\n      handler = this._events[type];\n    }\n\n    if (typeof handler === 'function') {\n      this.event = type;\n      switch (al) {\n      case 1:\n        promises.push(handler.call(this));\n        break;\n      case 2:\n        promises.push(handler.call(this, arguments[1]));\n        break;\n      case 3:\n        promises.push(handler.call(this, arguments[1], arguments[2]));\n        break;\n      default:\n        args = new Array(al - 1);\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n        promises.push(handler.apply(this, args));\n      }\n    } else if (handler && handler.length) {\n      handler = handler.slice();\n      if (al > 3) {\n        args = new Array(al - 1);\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n      }\n      for (i = 0, l = handler.length; i < l; i++) {\n        this.event = type;\n        switch (al) {\n        case 1:\n          promises.push(handler[i].call(this));\n          break;\n        case 2:\n          promises.push(handler[i].call(this, arguments[1]));\n          break;\n        case 3:\n          promises.push(handler[i].call(this, arguments[1], arguments[2]));\n          break;\n        default:\n          promises.push(handler[i].apply(this, args));\n        }\n      }\n    } else if (!this.ignoreErrors && !this._all && type === 'error') {\n      if (arguments[1] instanceof Error) {\n        return Promise.reject(arguments[1]); // Unhandled 'error' event\n      } else {\n        return Promise.reject(\"Uncaught, unspecified 'error' event.\");\n      }\n    }\n\n    return Promise.all(promises);\n  };\n\n  EventEmitter.prototype.on = function(type, listener, options) {\n    return this._on(type, listener, false, options);\n  };\n\n  EventEmitter.prototype.prependListener = function(type, listener, options) {\n    return this._on(type, listener, true, options);\n  };\n\n  EventEmitter.prototype.onAny = function(fn) {\n    return this._onAny(fn, false);\n  };\n\n  EventEmitter.prototype.prependAny = function(fn) {\n    return this._onAny(fn, true);\n  };\n\n  EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n  EventEmitter.prototype._onAny = function(fn, prepend){\n    if (typeof fn !== 'function') {\n      throw new Error('onAny only accepts instances of Function');\n    }\n\n    if (!this._all) {\n      this._all = [];\n    }\n\n    // Add the function to the event listener collection.\n    if(prepend){\n      this._all.unshift(fn);\n    }else{\n      this._all.push(fn);\n    }\n\n    return this;\n  };\n\n  EventEmitter.prototype._on = function(type, listener, prepend, options) {\n    if (typeof type === 'function') {\n      this._onAny(type, listener);\n      return this;\n    }\n\n    if (typeof listener !== 'function') {\n      throw new Error('on only accepts instances of Function');\n    }\n    this._events || init.call(this);\n\n    var returnValue= this, temp;\n\n    if (options !== undefined) {\n      temp = setupListener.call(this, type, listener, options);\n      listener = temp[0];\n      returnValue = temp[1];\n    }\n\n    // To avoid recursion in the case that type == \"newListeners\"! Before\n    // adding it to the listeners, first emit \"newListeners\".\n    if (this._newListener) {\n      this.emit('newListener', type, listener);\n    }\n\n    if (this.wildcard) {\n      growListenerTree.call(this, type, listener, prepend);\n      return returnValue;\n    }\n\n    if (!this._events[type]) {\n      // Optimize the case of one listener. Don't need the extra array object.\n      this._events[type] = listener;\n    } else {\n      if (typeof this._events[type] === 'function') {\n        // Change to array.\n        this._events[type] = [this._events[type]];\n      }\n\n      // If we've already got an array, just add\n      if(prepend){\n        this._events[type].unshift(listener);\n      }else{\n        this._events[type].push(listener);\n      }\n\n      // Check for listener leak\n      if (\n        !this._events[type].warned &&\n        this._maxListeners > 0 &&\n        this._events[type].length > this._maxListeners\n      ) {\n        this._events[type].warned = true;\n        logPossibleMemoryLeak.call(this, this._events[type].length, type);\n      }\n    }\n\n    return returnValue;\n  };\n\n  EventEmitter.prototype.off = function(type, listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('removeListener only takes instances of Function');\n    }\n\n    var handlers,leafs=[];\n\n    if(this.wildcard) {\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n      if(!leafs) return this;\n    } else {\n      // does not use listeners(), so no side effect of creating _events[type]\n      if (!this._events[type]) return this;\n      handlers = this._events[type];\n      leafs.push({_listeners:handlers});\n    }\n\n    for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\n      var leaf = leafs[iLeaf];\n      handlers = leaf._listeners;\n      if (isArray(handlers)) {\n\n        var position = -1;\n\n        for (var i = 0, length = handlers.length; i < length; i++) {\n          if (handlers[i] === listener ||\n            (handlers[i].listener && handlers[i].listener === listener) ||\n            (handlers[i]._origin && handlers[i]._origin === listener)) {\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0) {\n          continue;\n        }\n\n        if(this.wildcard) {\n          leaf._listeners.splice(position, 1);\n        }\n        else {\n          this._events[type].splice(position, 1);\n        }\n\n        if (handlers.length === 0) {\n          if(this.wildcard) {\n            delete leaf._listeners;\n          }\n          else {\n            delete this._events[type];\n          }\n        }\n        if (this._removeListener)\n          this.emit(\"removeListener\", type, listener);\n\n        return this;\n      }\n      else if (handlers === listener ||\n        (handlers.listener && handlers.listener === listener) ||\n        (handlers._origin && handlers._origin === listener)) {\n        if(this.wildcard) {\n          delete leaf._listeners;\n        }\n        else {\n          delete this._events[type];\n        }\n        if (this._removeListener)\n          this.emit(\"removeListener\", type, listener);\n      }\n    }\n\n    this.listenerTree && recursivelyGarbageCollect(this.listenerTree);\n\n    return this;\n  };\n\n  EventEmitter.prototype.offAny = function(fn) {\n    var i = 0, l = 0, fns;\n    if (fn && this._all && this._all.length > 0) {\n      fns = this._all;\n      for(i = 0, l = fns.length; i < l; i++) {\n        if(fn === fns[i]) {\n          fns.splice(i, 1);\n          if (this._removeListener)\n            this.emit(\"removeListenerAny\", fn);\n          return this;\n        }\n      }\n    } else {\n      fns = this._all;\n      if (this._removeListener) {\n        for(i = 0, l = fns.length; i < l; i++)\n          this.emit(\"removeListenerAny\", fns[i]);\n      }\n      this._all = [];\n    }\n    return this;\n  };\n\n  EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n\n  EventEmitter.prototype.removeAllListeners = function (type) {\n    if (type === undefined) {\n      !this._events || init.call(this);\n      return this;\n    }\n\n    if (this.wildcard) {\n      var leafs = searchListenerTree.call(this, null, type, this.listenerTree, 0), leaf, i;\n      if (!leafs) return this;\n      for (i = 0; i < leafs.length; i++) {\n        leaf = leafs[i];\n        leaf._listeners = null;\n      }\n      this.listenerTree && recursivelyGarbageCollect(this.listenerTree);\n    } else if (this._events) {\n      this._events[type] = null;\n    }\n    return this;\n  };\n\n  EventEmitter.prototype.listeners = function (type) {\n    var _events = this._events;\n    var keys, listeners, allListeners;\n    var i;\n    var listenerTree;\n\n    if (type === undefined) {\n      if (this.wildcard) {\n        throw Error('event name required for wildcard emitter');\n      }\n\n      if (!_events) {\n        return [];\n      }\n\n      keys = ownKeys(_events);\n      i = keys.length;\n      allListeners = [];\n      while (i-- > 0) {\n        listeners = _events[keys[i]];\n        if (typeof listeners === 'function') {\n          allListeners.push(listeners);\n        } else {\n          allListeners.push.apply(allListeners, listeners);\n        }\n      }\n      return allListeners;\n    } else {\n      if (this.wildcard) {\n        listenerTree= this.listenerTree;\n        if(!listenerTree) return [];\n        var handlers = [];\n        var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n        searchListenerTree.call(this, handlers, ns, listenerTree, 0);\n        return handlers;\n      }\n\n      if (!_events) {\n        return [];\n      }\n\n      listeners = _events[type];\n\n      if (!listeners) {\n        return [];\n      }\n      return typeof listeners === 'function' ? [listeners] : listeners;\n    }\n  };\n\n  EventEmitter.prototype.eventNames = function(nsAsArray){\n    var _events= this._events;\n    return this.wildcard? collectTreeEvents.call(this, this.listenerTree, [], null, nsAsArray) : (_events? ownKeys(_events) : []);\n  };\n\n  EventEmitter.prototype.listenerCount = function(type) {\n    return this.listeners(type).length;\n  };\n\n  EventEmitter.prototype.hasListeners = function (type) {\n    if (this.wildcard) {\n      var handlers = [];\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n      return handlers.length > 0;\n    }\n\n    var _events = this._events;\n    var _all = this._all;\n\n    return !!(_all && _all.length || _events && (type === undefined ? ownKeys(_events).length : _events[type]));\n  };\n\n  EventEmitter.prototype.listenersAny = function() {\n\n    if(this._all) {\n      return this._all;\n    }\n    else {\n      return [];\n    }\n\n  };\n\n  EventEmitter.prototype.waitFor = function (event, options) {\n    var self = this;\n    var type = typeof options;\n    if (type === 'number') {\n      options = {timeout: options};\n    } else if (type === 'function') {\n      options = {filter: options};\n    }\n\n    options= resolveOptions(options, {\n      timeout: 0,\n      filter: undefined,\n      handleError: false,\n      Promise: Promise,\n      overload: false\n    }, {\n      filter: functionReducer,\n      Promise: constructorReducer\n    });\n\n    return makeCancelablePromise(options.Promise, function (resolve, reject, onCancel) {\n      function listener() {\n        var filter= options.filter;\n        if (filter && !filter.apply(self, arguments)) {\n          return;\n        }\n        self.off(event, listener);\n        if (options.handleError) {\n          var err = arguments[0];\n          err ? reject(err) : resolve(toArray.apply(null, arguments).slice(1));\n        } else {\n          resolve(toArray.apply(null, arguments));\n        }\n      }\n\n      onCancel(function(){\n        self.off(event, listener);\n      });\n\n      self._on(event, listener, false);\n    }, {\n      timeout: options.timeout,\n      overload: options.overload\n    })\n  };\n\n  function once(emitter, name, options) {\n    options= resolveOptions(options, {\n      Promise: Promise,\n      timeout: 0,\n      overload: false\n    }, {\n      Promise: constructorReducer\n    });\n\n    var _Promise= options.Promise;\n\n    return makeCancelablePromise(_Promise, function(resolve, reject, onCancel){\n      var handler;\n      if (typeof emitter.addEventListener === 'function') {\n        handler=  function () {\n          resolve(toArray.apply(null, arguments));\n        };\n\n        onCancel(function(){\n          emitter.removeEventListener(name, handler);\n        });\n\n        emitter.addEventListener(\n            name,\n            handler,\n            {once: true}\n        );\n        return;\n      }\n\n      var eventListener = function(){\n        errorListener && emitter.removeListener('error', errorListener);\n        resolve(toArray.apply(null, arguments));\n      };\n\n      var errorListener;\n\n      if (name !== 'error') {\n        errorListener = function (err){\n          emitter.removeListener(name, eventListener);\n          reject(err);\n        };\n\n        emitter.once('error', errorListener);\n      }\n\n      onCancel(function(){\n        errorListener && emitter.removeListener('error', errorListener);\n        emitter.removeListener(name, eventListener);\n      });\n\n      emitter.once(name, eventListener);\n    }, {\n      timeout: options.timeout,\n      overload: options.overload\n    });\n  }\n\n  var prototype= EventEmitter.prototype;\n\n  Object.defineProperties(EventEmitter, {\n    defaultMaxListeners: {\n      get: function () {\n        return prototype._maxListeners;\n      },\n      set: function (n) {\n        if (typeof n !== 'number' || n < 0 || Number.isNaN(n)) {\n          throw TypeError('n must be a non-negative number')\n        }\n        prototype._maxListeners = n;\n      },\n      enumerable: true\n    },\n    once: {\n      value: once,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  Object.defineProperties(prototype, {\n      _maxListeners: {\n          value: defaultMaxListeners,\n          writable: true,\n          configurable: true\n      },\n      _observers: {value: null, writable: true, configurable: true}\n  });\n\n  if (typeof define === 'function' && define.amd) {\n     // AMD. Register as an anonymous module.\n    define(function() {\n      return EventEmitter;\n    });\n  } else if (typeof exports === 'object') {\n    // CommonJS\n    module.exports = EventEmitter;\n  }\n  else {\n    // global for any kind of environment.\n    var _global= new Function('','return this')();\n    _global.EventEmitter2 = EventEmitter;\n  }\n}();\n","var parser = require('./parser');\nvar writer = require('./writer');\n\nexports.write = writer;\nexports.parse = parser.parse;\nexports.parseParams = parser.parseParams;\nexports.parseFmtpConfig = parser.parseFmtpConfig; // Alias of parseParams().\nexports.parsePayloads = parser.parsePayloads;\nexports.parseRemoteCandidates = parser.parseRemoteCandidates;\nexports.parseImageAttributes = parser.parseImageAttributes;\nexports.parseSimulcastStreamList = parser.parseSimulcastStreamList;\n","var toIntIfInt = function (v) {\n  return String(Number(v)) === v ? Number(v) : v;\n};\n\nvar attachProperties = function (match, location, names, rawName) {\n  if (rawName && !names) {\n    location[rawName] = toIntIfInt(match[1]);\n  }\n  else {\n    for (var i = 0; i < names.length; i += 1) {\n      if (match[i+1] != null) {\n        location[names[i]] = toIntIfInt(match[i+1]);\n      }\n    }\n  }\n};\n\nvar parseReg = function (obj, location, content) {\n  var needsBlank = obj.name && obj.names;\n  if (obj.push && !location[obj.push]) {\n    location[obj.push] = [];\n  }\n  else if (needsBlank && !location[obj.name]) {\n    location[obj.name] = {};\n  }\n  var keyLocation = obj.push ?\n    {} :  // blank object that will be pushed\n    needsBlank ? location[obj.name] : location; // otherwise, named location or root\n\n  attachProperties(content.match(obj.reg), keyLocation, obj.names, obj.name);\n\n  if (obj.push) {\n    location[obj.push].push(keyLocation);\n  }\n};\n\nvar grammar = require('./grammar');\nvar validLine = RegExp.prototype.test.bind(/^([a-z])=(.*)/);\n\nexports.parse = function (sdp) {\n  var session = {}\n    , media = []\n    , location = session; // points at where properties go under (one of the above)\n\n  // parse lines we understand\n  sdp.split(/(\\r\\n|\\r|\\n)/).filter(validLine).forEach(function (l) {\n    var type = l[0];\n    var content = l.slice(2);\n    if (type === 'm') {\n      media.push({rtp: [], fmtp: []});\n      location = media[media.length-1]; // point at latest media line\n    }\n\n    for (var j = 0; j < (grammar[type] || []).length; j += 1) {\n      var obj = grammar[type][j];\n      if (obj.reg.test(content)) {\n        return parseReg(obj, location, content);\n      }\n    }\n  });\n\n  session.media = media; // link it up\n  return session;\n};\n\nvar paramReducer = function (acc, expr) {\n  var s = expr.split(/=(.+)/, 2);\n  if (s.length === 2) {\n    acc[s[0]] = toIntIfInt(s[1]);\n  } else if (s.length === 1 && expr.length > 1) {\n    acc[s[0]] = undefined;\n  }\n  return acc;\n};\n\nexports.parseParams = function (str) {\n  return str.split(/;\\s?/).reduce(paramReducer, {});\n};\n\n// For backward compatibility - alias will be removed in 3.0.0\nexports.parseFmtpConfig = exports.parseParams;\n\nexports.parsePayloads = function (str) {\n  return str.toString().split(' ').map(Number);\n};\n\nexports.parseRemoteCandidates = function (str) {\n  var candidates = [];\n  var parts = str.split(' ').map(toIntIfInt);\n  for (var i = 0; i < parts.length; i += 3) {\n    candidates.push({\n      component: parts[i],\n      ip: parts[i + 1],\n      port: parts[i + 2]\n    });\n  }\n  return candidates;\n};\n\nexports.parseImageAttributes = function (str) {\n  return str.split(' ').map(function (item) {\n    return item.substring(1, item.length-1).split(',').reduce(paramReducer, {});\n  });\n};\n\nexports.parseSimulcastStreamList = function (str) {\n  return str.split(';').map(function (stream) {\n    return stream.split(',').map(function (format) {\n      var scid, paused = false;\n\n      if (format[0] !== '~') {\n        scid = toIntIfInt(format);\n      } else {\n        scid = toIntIfInt(format.substring(1, format.length));\n        paused = true;\n      }\n\n      return {\n        scid: scid,\n        paused: paused\n      };\n    });\n  });\n};\n","var grammar = module.exports = {\n  v: [{\n    name: 'version',\n    reg: /^(\\d*)$/\n  }],\n  o: [{\n    // o=- 20518 0 IN IP4 203.0.113.1\n    // NB: sessionId will be a String in most cases because it is huge\n    name: 'origin',\n    reg: /^(\\S*) (\\d*) (\\d*) (\\S*) IP(\\d) (\\S*)/,\n    names: ['username', 'sessionId', 'sessionVersion', 'netType', 'ipVer', 'address'],\n    format: '%s %s %d %s IP%d %s'\n  }],\n  // default parsing of these only (though some of these feel outdated)\n  s: [{ name: 'name' }],\n  i: [{ name: 'description' }],\n  u: [{ name: 'uri' }],\n  e: [{ name: 'email' }],\n  p: [{ name: 'phone' }],\n  z: [{ name: 'timezones' }], // TODO: this one can actually be parsed properly...\n  r: [{ name: 'repeats' }],   // TODO: this one can also be parsed properly\n  // k: [{}], // outdated thing ignored\n  t: [{\n    // t=0 0\n    name: 'timing',\n    reg: /^(\\d*) (\\d*)/,\n    names: ['start', 'stop'],\n    format: '%d %d'\n  }],\n  c: [{\n    // c=IN IP4 10.47.197.26\n    name: 'connection',\n    reg: /^IN IP(\\d) (\\S*)/,\n    names: ['version', 'ip'],\n    format: 'IN IP%d %s'\n  }],\n  b: [{\n    // b=AS:4000\n    push: 'bandwidth',\n    reg: /^(TIAS|AS|CT|RR|RS):(\\d*)/,\n    names: ['type', 'limit'],\n    format: '%s:%s'\n  }],\n  m: [{\n    // m=video 51744 RTP/AVP 126 97 98 34 31\n    // NB: special - pushes to session\n    // TODO: rtp/fmtp should be filtered by the payloads found here?\n    reg: /^(\\w*) (\\d*) ([\\w/]*)(?: (.*))?/,\n    names: ['type', 'port', 'protocol', 'payloads'],\n    format: '%s %d %s %s'\n  }],\n  a: [\n    {\n      // a=rtpmap:110 opus/48000/2\n      push: 'rtp',\n      reg: /^rtpmap:(\\d*) ([\\w\\-.]*)(?:\\s*\\/(\\d*)(?:\\s*\\/(\\S*))?)?/,\n      names: ['payload', 'codec', 'rate', 'encoding'],\n      format: function (o) {\n        return (o.encoding)\n          ? 'rtpmap:%d %s/%s/%s'\n          : o.rate\n            ? 'rtpmap:%d %s/%s'\n            : 'rtpmap:%d %s';\n      }\n    },\n    {\n      // a=fmtp:108 profile-level-id=24;object=23;bitrate=64000\n      // a=fmtp:111 minptime=10; useinbandfec=1\n      push: 'fmtp',\n      reg: /^fmtp:(\\d*) ([\\S| ]*)/,\n      names: ['payload', 'config'],\n      format: 'fmtp:%d %s'\n    },\n    {\n      // a=control:streamid=0\n      name: 'control',\n      reg: /^control:(.*)/,\n      format: 'control:%s'\n    },\n    {\n      // a=rtcp:65179 IN IP4 193.84.77.194\n      name: 'rtcp',\n      reg: /^rtcp:(\\d*)(?: (\\S*) IP(\\d) (\\S*))?/,\n      names: ['port', 'netType', 'ipVer', 'address'],\n      format: function (o) {\n        return (o.address != null)\n          ? 'rtcp:%d %s IP%d %s'\n          : 'rtcp:%d';\n      }\n    },\n    {\n      // a=rtcp-fb:98 trr-int 100\n      push: 'rtcpFbTrrInt',\n      reg: /^rtcp-fb:(\\*|\\d*) trr-int (\\d*)/,\n      names: ['payload', 'value'],\n      format: 'rtcp-fb:%s trr-int %d'\n    },\n    {\n      // a=rtcp-fb:98 nack rpsi\n      push: 'rtcpFb',\n      reg: /^rtcp-fb:(\\*|\\d*) ([\\w-_]*)(?: ([\\w-_]*))?/,\n      names: ['payload', 'type', 'subtype'],\n      format: function (o) {\n        return (o.subtype != null)\n          ? 'rtcp-fb:%s %s %s'\n          : 'rtcp-fb:%s %s';\n      }\n    },\n    {\n      // a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n      // a=extmap:1/recvonly URI-gps-string\n      // a=extmap:3 urn:ietf:params:rtp-hdrext:encrypt urn:ietf:params:rtp-hdrext:smpte-tc 25@600/24\n      push: 'ext',\n      reg: /^extmap:(\\d+)(?:\\/(\\w+))?(?: (urn:ietf:params:rtp-hdrext:encrypt))? (\\S*)(?: (\\S*))?/,\n      names: ['value', 'direction', 'encrypt-uri', 'uri', 'config'],\n      format: function (o) {\n        return (\n          'extmap:%d' +\n          (o.direction ? '/%s' : '%v') +\n          (o['encrypt-uri'] ? ' %s' : '%v') +\n          ' %s' +\n          (o.config ? ' %s' : '')\n        );\n      }\n    },\n    {\n      // a=extmap-allow-mixed\n      name: 'extmapAllowMixed',\n      reg: /^(extmap-allow-mixed)/\n    },\n    {\n      // a=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:PS1uQCVeeCFCanVmcjkpPywjNWhcYD0mXXtxaVBR|2^20|1:32\n      push: 'crypto',\n      reg: /^crypto:(\\d*) ([\\w_]*) (\\S*)(?: (\\S*))?/,\n      names: ['id', 'suite', 'config', 'sessionConfig'],\n      format: function (o) {\n        return (o.sessionConfig != null)\n          ? 'crypto:%d %s %s %s'\n          : 'crypto:%d %s %s';\n      }\n    },\n    {\n      // a=setup:actpass\n      name: 'setup',\n      reg: /^setup:(\\w*)/,\n      format: 'setup:%s'\n    },\n    {\n      // a=connection:new\n      name: 'connectionType',\n      reg: /^connection:(new|existing)/,\n      format: 'connection:%s'\n    },\n    {\n      // a=mid:1\n      name: 'mid',\n      reg: /^mid:([^\\s]*)/,\n      format: 'mid:%s'\n    },\n    {\n      // a=msid:0c8b064d-d807-43b4-b434-f92a889d8587 98178685-d409-46e0-8e16-7ef0db0db64a\n      name: 'msid',\n      reg: /^msid:(.*)/,\n      format: 'msid:%s'\n    },\n    {\n      // a=ptime:20\n      name: 'ptime',\n      reg: /^ptime:(\\d*(?:\\.\\d*)*)/,\n      format: 'ptime:%d'\n    },\n    {\n      // a=maxptime:60\n      name: 'maxptime',\n      reg: /^maxptime:(\\d*(?:\\.\\d*)*)/,\n      format: 'maxptime:%d'\n    },\n    {\n      // a=sendrecv\n      name: 'direction',\n      reg: /^(sendrecv|recvonly|sendonly|inactive)/\n    },\n    {\n      // a=ice-lite\n      name: 'icelite',\n      reg: /^(ice-lite)/\n    },\n    {\n      // a=ice-ufrag:F7gI\n      name: 'iceUfrag',\n      reg: /^ice-ufrag:(\\S*)/,\n      format: 'ice-ufrag:%s'\n    },\n    {\n      // a=ice-pwd:x9cml/YzichV2+XlhiMu8g\n      name: 'icePwd',\n      reg: /^ice-pwd:(\\S*)/,\n      format: 'ice-pwd:%s'\n    },\n    {\n      // a=fingerprint:SHA-1 00:11:22:33:44:55:66:77:88:99:AA:BB:CC:DD:EE:FF:00:11:22:33\n      name: 'fingerprint',\n      reg: /^fingerprint:(\\S*) (\\S*)/,\n      names: ['type', 'hash'],\n      format: 'fingerprint:%s %s'\n    },\n    {\n      // a=candidate:0 1 UDP 2113667327 203.0.113.1 54400 typ host\n      // a=candidate:1162875081 1 udp 2113937151 192.168.34.75 60017 typ host generation 0 network-id 3 network-cost 10\n      // a=candidate:3289912957 2 udp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 generation 0 network-id 3 network-cost 10\n      // a=candidate:229815620 1 tcp 1518280447 192.168.150.19 60017 typ host tcptype active generation 0 network-id 3 network-cost 10\n      // a=candidate:3289912957 2 tcp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 tcptype passive generation 0 network-id 3 network-cost 10\n      push:'candidates',\n      reg: /^candidate:(\\S*) (\\d*) (\\S*) (\\d*) (\\S*) (\\d*) typ (\\S*)(?: raddr (\\S*) rport (\\d*))?(?: tcptype (\\S*))?(?: generation (\\d*))?(?: network-id (\\d*))?(?: network-cost (\\d*))?/,\n      names: ['foundation', 'component', 'transport', 'priority', 'ip', 'port', 'type', 'raddr', 'rport', 'tcptype', 'generation', 'network-id', 'network-cost'],\n      format: function (o) {\n        var str = 'candidate:%s %d %s %d %s %d typ %s';\n\n        str += (o.raddr != null) ? ' raddr %s rport %d' : '%v%v';\n\n        // NB: candidate has three optional chunks, so %void middles one if it's missing\n        str += (o.tcptype != null) ? ' tcptype %s' : '%v';\n\n        if (o.generation != null) {\n          str += ' generation %d';\n        }\n\n        str += (o['network-id'] != null) ? ' network-id %d' : '%v';\n        str += (o['network-cost'] != null) ? ' network-cost %d' : '%v';\n        return str;\n      }\n    },\n    {\n      // a=end-of-candidates (keep after the candidates line for readability)\n      name: 'endOfCandidates',\n      reg: /^(end-of-candidates)/\n    },\n    {\n      // a=remote-candidates:1 203.0.113.1 54400 2 203.0.113.1 54401 ...\n      name: 'remoteCandidates',\n      reg: /^remote-candidates:(.*)/,\n      format: 'remote-candidates:%s'\n    },\n    {\n      // a=ice-options:google-ice\n      name: 'iceOptions',\n      reg: /^ice-options:(\\S*)/,\n      format: 'ice-options:%s'\n    },\n    {\n      // a=ssrc:2566107569 cname:t9YU8M1UxTF8Y1A1\n      push: 'ssrcs',\n      reg: /^ssrc:(\\d*) ([\\w_-]*)(?::(.*))?/,\n      names: ['id', 'attribute', 'value'],\n      format: function (o) {\n        var str = 'ssrc:%d';\n        if (o.attribute != null) {\n          str += ' %s';\n          if (o.value != null) {\n            str += ':%s';\n          }\n        }\n        return str;\n      }\n    },\n    {\n      // a=ssrc-group:FEC 1 2\n      // a=ssrc-group:FEC-FR 3004364195 1080772241\n      push: 'ssrcGroups',\n      // token-char = %x21 / %x23-27 / %x2A-2B / %x2D-2E / %x30-39 / %x41-5A / %x5E-7E\n      reg: /^ssrc-group:([\\x21\\x23\\x24\\x25\\x26\\x27\\x2A\\x2B\\x2D\\x2E\\w]*) (.*)/,\n      names: ['semantics', 'ssrcs'],\n      format: 'ssrc-group:%s %s'\n    },\n    {\n      // a=msid-semantic: WMS Jvlam5X3SX1OP6pn20zWogvaKJz5Hjf9OnlV\n      name: 'msidSemantic',\n      reg: /^msid-semantic:\\s?(\\w*) (\\S*)/,\n      names: ['semantic', 'token'],\n      format: 'msid-semantic: %s %s' // space after ':' is not accidental\n    },\n    {\n      // a=group:BUNDLE audio video\n      push: 'groups',\n      reg: /^group:(\\w*) (.*)/,\n      names: ['type', 'mids'],\n      format: 'group:%s %s'\n    },\n    {\n      // a=rtcp-mux\n      name: 'rtcpMux',\n      reg: /^(rtcp-mux)/\n    },\n    {\n      // a=rtcp-rsize\n      name: 'rtcpRsize',\n      reg: /^(rtcp-rsize)/\n    },\n    {\n      // a=sctpmap:5000 webrtc-datachannel 1024\n      name: 'sctpmap',\n      reg: /^sctpmap:([\\w_/]*) (\\S*)(?: (\\S*))?/,\n      names: ['sctpmapNumber', 'app', 'maxMessageSize'],\n      format: function (o) {\n        return (o.maxMessageSize != null)\n          ? 'sctpmap:%s %s %s'\n          : 'sctpmap:%s %s';\n      }\n    },\n    {\n      // a=x-google-flag:conference\n      name: 'xGoogleFlag',\n      reg: /^x-google-flag:([^\\s]*)/,\n      format: 'x-google-flag:%s'\n    },\n    {\n      // a=rid:1 send max-width=1280;max-height=720;max-fps=30;depend=0\n      push: 'rids',\n      reg: /^rid:([\\d\\w]+) (\\w+)(?: ([\\S| ]*))?/,\n      names: ['id', 'direction', 'params'],\n      format: function (o) {\n        return (o.params) ? 'rid:%s %s %s' : 'rid:%s %s';\n      }\n    },\n    {\n      // a=imageattr:97 send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320] recv [x=330,y=250]\n      // a=imageattr:* send [x=800,y=640] recv *\n      // a=imageattr:100 recv [x=320,y=240]\n      push: 'imageattrs',\n      reg: new RegExp(\n        // a=imageattr:97\n        '^imageattr:(\\\\d+|\\\\*)' +\n        // send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320]\n        '[\\\\s\\\\t]+(send|recv)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*)' +\n        // recv [x=330,y=250]\n        '(?:[\\\\s\\\\t]+(recv|send)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*))?'\n      ),\n      names: ['pt', 'dir1', 'attrs1', 'dir2', 'attrs2'],\n      format: function (o) {\n        return 'imageattr:%s %s %s' + (o.dir2 ? ' %s %s' : '');\n      }\n    },\n    {\n      // a=simulcast:send 1,2,3;~4,~5 recv 6;~7,~8\n      // a=simulcast:recv 1;4,5 send 6;7\n      name: 'simulcast',\n      reg: new RegExp(\n        // a=simulcast:\n        '^simulcast:' +\n        // send 1,2,3;~4,~5\n        '(send|recv) ([a-zA-Z0-9\\\\-_~;,]+)' +\n        // space + recv 6;~7,~8\n        '(?:\\\\s?(send|recv) ([a-zA-Z0-9\\\\-_~;,]+))?' +\n        // end\n        '$'\n      ),\n      names: ['dir1', 'list1', 'dir2', 'list2'],\n      format: function (o) {\n        return 'simulcast:%s %s' + (o.dir2 ? ' %s %s' : '');\n      }\n    },\n    {\n      // old simulcast draft 03 (implemented by Firefox)\n      //   https://tools.ietf.org/html/draft-ietf-mmusic-sdp-simulcast-03\n      // a=simulcast: recv pt=97;98 send pt=97\n      // a=simulcast: send rid=5;6;7 paused=6,7\n      name: 'simulcast_03',\n      reg: /^simulcast:[\\s\\t]+([\\S+\\s\\t]+)$/,\n      names: ['value'],\n      format: 'simulcast: %s'\n    },\n    {\n      // a=framerate:25\n      // a=framerate:29.97\n      name: 'framerate',\n      reg: /^framerate:(\\d+(?:$|\\.\\d+))/,\n      format: 'framerate:%s'\n    },\n    {\n      // RFC4570\n      // a=source-filter: incl IN IP4 239.5.2.31 10.1.15.5\n      name: 'sourceFilter',\n      reg: /^source-filter: *(excl|incl) (\\S*) (IP4|IP6|\\*) (\\S*) (.*)/,\n      names: ['filterMode', 'netType', 'addressTypes', 'destAddress', 'srcList'],\n      format: 'source-filter: %s %s %s %s %s'\n    },\n    {\n      // a=bundle-only\n      name: 'bundleOnly',\n      reg: /^(bundle-only)/\n    },\n    {\n      // a=label:1\n      name: 'label',\n      reg: /^label:(.+)/,\n      format: 'label:%s'\n    },\n    {\n      // RFC version 26 for SCTP over DTLS\n      // https://tools.ietf.org/html/draft-ietf-mmusic-sctp-sdp-26#section-5\n      name: 'sctpPort',\n      reg: /^sctp-port:(\\d+)$/,\n      format: 'sctp-port:%s'\n    },\n    {\n      // RFC version 26 for SCTP over DTLS\n      // https://tools.ietf.org/html/draft-ietf-mmusic-sctp-sdp-26#section-6\n      name: 'maxMessageSize',\n      reg: /^max-message-size:(\\d+)$/,\n      format: 'max-message-size:%s'\n    },\n    {\n      // RFC7273\n      // a=ts-refclk:ptp=IEEE1588-2008:39-A7-94-FF-FE-07-CB-D0:37\n      push:'tsRefClocks',\n      reg: /^ts-refclk:([^\\s=]*)(?:=(\\S*))?/,\n      names: ['clksrc', 'clksrcExt'],\n      format: function (o) {\n        return 'ts-refclk:%s' + (o.clksrcExt != null ? '=%s' : '');\n      }\n    },\n    {\n      // RFC7273\n      // a=mediaclk:direct=963214424\n      name:'mediaClk',\n      reg: /^mediaclk:(?:id=(\\S*))? *([^\\s=]*)(?:=(\\S*))?(?: *rate=(\\d+)\\/(\\d+))?/,\n      names: ['id', 'mediaClockName', 'mediaClockValue', 'rateNumerator', 'rateDenominator'],\n      format: function (o) {\n        var str = 'mediaclk:';\n        str += (o.id != null ? 'id=%s %s' : '%v%s');\n        str += (o.mediaClockValue != null ? '=%s' : '');\n        str += (o.rateNumerator != null ? ' rate=%s' : '');\n        str += (o.rateDenominator != null ? '/%s' : '');\n        return str;\n      }\n    },\n    {\n      // a=keywds:keywords\n      name: 'keywords',\n      reg: /^keywds:(.+)$/,\n      format: 'keywds:%s'\n    },\n    {\n      // a=content:main\n      name: 'content',\n      reg: /^content:(.+)/,\n      format: 'content:%s'\n    },\n    // BFCP https://tools.ietf.org/html/rfc4583\n    {\n      // a=floorctrl:c-s\n      name: 'bfcpFloorCtrl',\n      reg: /^floorctrl:(c-only|s-only|c-s)/,\n      format: 'floorctrl:%s'\n    },\n    {\n      // a=confid:1\n      name: 'bfcpConfId',\n      reg: /^confid:(\\d+)/,\n      format: 'confid:%s'\n    },\n    {\n      // a=userid:1\n      name: 'bfcpUserId',\n      reg: /^userid:(\\d+)/,\n      format: 'userid:%s'\n    },\n    {\n      // a=floorid:1\n      name: 'bfcpFloorId',\n      reg: /^floorid:(.+) (?:m-stream|mstrm):(.+)/,\n      names: ['id', 'mStream'],\n      format: 'floorid:%s mstrm:%s'\n    },\n    {\n      // any a= that we don't understand is kept verbatim on media.invalid\n      push: 'invalid',\n      names: ['value']\n    }\n  ]\n};\n\n// set sensible defaults to avoid polluting the grammar with boring details\nObject.keys(grammar).forEach(function (key) {\n  var objs = grammar[key];\n  objs.forEach(function (obj) {\n    if (!obj.reg) {\n      obj.reg = /(.*)/;\n    }\n    if (!obj.format) {\n      obj.format = '%s';\n    }\n  });\n});\n","var grammar = require('./grammar');\n\n// customized util.format - discards excess arguments and can void middle ones\nvar formatRegExp = /%[sdv%]/g;\nvar format = function (formatStr) {\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  return formatStr.replace(formatRegExp, function (x) {\n    if (i >= len) {\n      return x; // missing argument\n    }\n    var arg = args[i];\n    i += 1;\n    switch (x) {\n    case '%%':\n      return '%';\n    case '%s':\n      return String(arg);\n    case '%d':\n      return Number(arg);\n    case '%v':\n      return '';\n    }\n  });\n  // NB: we discard excess arguments - they are typically undefined from makeLine\n};\n\nvar makeLine = function (type, obj, location) {\n  var str = obj.format instanceof Function ?\n    (obj.format(obj.push ? location : location[obj.name])) :\n    obj.format;\n\n  var args = [type + '=' + str];\n  if (obj.names) {\n    for (var i = 0; i < obj.names.length; i += 1) {\n      var n = obj.names[i];\n      if (obj.name) {\n        args.push(location[obj.name][n]);\n      }\n      else { // for mLine and push attributes\n        args.push(location[obj.names[i]]);\n      }\n    }\n  }\n  else {\n    args.push(location[obj.name]);\n  }\n  return format.apply(null, args);\n};\n\n// RFC specified order\n// TODO: extend this with all the rest\nvar defaultOuterOrder = [\n  'v', 'o', 's', 'i',\n  'u', 'e', 'p', 'c',\n  'b', 't', 'r', 'z', 'a'\n];\nvar defaultInnerOrder = ['i', 'c', 'b', 'a'];\n\n\nmodule.exports = function (session, opts) {\n  opts = opts || {};\n  // ensure certain properties exist\n  if (session.version == null) {\n    session.version = 0; // 'v=0' must be there (only defined version atm)\n  }\n  if (session.name == null) {\n    session.name = ' '; // 's= ' must be there if no meaningful name set\n  }\n  session.media.forEach(function (mLine) {\n    if (mLine.payloads == null) {\n      mLine.payloads = '';\n    }\n  });\n\n  var outerOrder = opts.outerOrder || defaultOuterOrder;\n  var innerOrder = opts.innerOrder || defaultInnerOrder;\n  var sdp = [];\n\n  // loop through outerOrder for matching properties on session\n  outerOrder.forEach(function (type) {\n    grammar[type].forEach(function (obj) {\n      if (obj.name in session && session[obj.name] != null) {\n        sdp.push(makeLine(type, obj, session));\n      }\n      else if (obj.push in session && session[obj.push] != null) {\n        session[obj.push].forEach(function (el) {\n          sdp.push(makeLine(type, obj, el));\n        });\n      }\n    });\n  });\n\n  // then for each media line, follow the innerOrder\n  session.media.forEach(function (mLine) {\n    sdp.push(makeLine('m', grammar.m[0], mLine));\n\n    innerOrder.forEach(function (type) {\n      grammar[type].forEach(function (obj) {\n        if (obj.name in mLine && mLine[obj.name] != null) {\n          sdp.push(makeLine(type, obj, mLine));\n        }\n        else if (obj.push in mLine && mLine[obj.push] != null) {\n          mLine[obj.push].forEach(function (el) {\n            sdp.push(makeLine(type, obj, el));\n          });\n        }\n      });\n    });\n  });\n\n  return sdp.join('\\r\\n') + '\\r\\n';\n};\n","function defaultEqualityCheck(a, b) {\n  return a === b;\n}\n\nfunction areArgumentsShallowlyEqual(equalityCheck, prev, next) {\n  if (prev === null || next === null || prev.length !== next.length) {\n    return false;\n  }\n\n  // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n  var length = prev.length;\n  for (var i = 0; i < length; i++) {\n    if (!equalityCheck(prev[i], next[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function defaultMemoize(func) {\n  var equalityCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultEqualityCheck;\n\n  var lastArgs = null;\n  var lastResult = null;\n  // we reference arguments instead of spreading them for performance reasons\n  return function () {\n    if (!areArgumentsShallowlyEqual(equalityCheck, lastArgs, arguments)) {\n      // apply arguments instead of spreading for performance.\n      lastResult = func.apply(null, arguments);\n    }\n\n    lastArgs = arguments;\n    return lastResult;\n  };\n}\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep;\n    }).join(', ');\n    throw new Error('Selector creators expect all input-selectors to be functions, ' + ('instead received the following types: [' + dependencyTypes + ']'));\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptions = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptions[_key - 1] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, funcs = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var recomputations = 0;\n    var resultFunc = funcs.pop();\n    var dependencies = getDependencies(funcs);\n\n    var memoizedResultFunc = memoize.apply(undefined, [function () {\n      recomputations++;\n      // apply arguments instead of spreading for performance.\n      return resultFunc.apply(null, arguments);\n    }].concat(memoizeOptions));\n\n    // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        params.push(dependencies[i].apply(null, arguments));\n      }\n\n      // apply arguments instead of spreading for performance.\n      return memoizedResultFunc.apply(null, params);\n    });\n\n    selector.resultFunc = resultFunc;\n    selector.dependencies = dependencies;\n    selector.recomputations = function () {\n      return recomputations;\n    };\n    selector.resetRecomputations = function () {\n      return recomputations = 0;\n    };\n    return selector;\n  };\n}\n\nexport var createSelector = createSelectorCreator(defaultMemoize);\n\nexport function createStructuredSelector(selectors) {\n  var selectorCreator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : createSelector;\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + ('where each property is a selector, instead received a ' + typeof selectors));\n  }\n  var objectKeys = Object.keys(selectors);\n  return selectorCreator(objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n}"],"names":["die","error","args","e","errors","msg","apply","Error","length","map","s","join","isDraft","value","DRAFT_STATE","isDraftable","proto","Object","getPrototypeOf","Ctor","hasOwnProperty","call","constructor","Function","toString","objectCtorString","isPlainObject","Array","isArray","DRAFTABLE","_value$constructor","isMap","isSet","original","base_","each","obj","iter","enumerableOnly","getArchtype","keys","ownKeys","forEach","key","entry","index","thing","state","type_","has","prop","prototype","get","set","propOrOldValue","t","add","is","x","y","target","hasMap","Map","hasSet","Set","latest","copy_","shallowCopy","base","slice","descriptors","getOwnPropertyDescriptors","i","desc","writable","configurable","enumerable","create","freeze","deep","isFrozen","clear","delete","dontMutateFrozenCollections","getPlugin","pluginKey","plugin","plugins","loadPlugin","implementation","getCurrentScope","process","currentScope","usePatchesInScope","scope","patchListener","patches_","inversePatches_","patchListener_","revokeScope","leaveScope","drafts_","revokeDraft","parent_","enterScope","immer","immer_","canAutoFreeze_","unfinalizedDrafts_","draft","revoke_","revoked_","processResult","result","baseDraft","isReplaced","undefined","useProxies_","willFinalizeES5_","modified_","finalize","maybeFreeze","generateReplacementPatches_","NOTHING","rootScope","path","childValue","finalizeProperty","scope_","finalized_","draft_","resultEach","generatePatches_","parentState","targetObject","rootPath","targetIsSet","res","assigned_","concat","autoFreeze_","peek","getDescriptorFromProto","source","getOwnPropertyDescriptor","markChanged","prepareCopy","createProxy","parent","proxyMap_","proxySet_","isManual_","traps","objectTraps","arrayTraps","Proxy","revocable","revoke","proxy","createProxyProxy","createES5Proxy_","push","current","currentImpl","copy","archType","hasChanges_","copyHelper","from","enableES5","proxyProperty","this","assertUnrevoked","markChangesSweep","drafts","hasArrayChanges","hasObjectChanges","baseValue","baseIsDraft","descriptor","JSON","stringify","defineProperty","createES5Draft","markChangesRecursively","object","min","Math","enablePatches","deepClonePatchValue","entries","cloned","immerable","clonePatchValueIfNeeded","ADD","applyPatches_","patches","patch","op","parentType","p","type","splice","basePath","inversePatches","assignedValue","origValue","generatePatchesFromAssigned","generateArrayPatches","unshift","generateSetPatches","replacement","enableMapSet","__extends","d","b","__","extendStatics","prepareMapCopy","prepareSetCopy","setPrototypeOf","__proto__","DraftMap","size","cb","thisArg","_value","_this","values","iterator","iteratorSymbol","_this2","next","r","done","_this3","DraftSet","enableAllPlugins","castDraft","castImmutable","hasSymbol","Symbol","hasProxies","Reflect","for","data","getOwnPropertySymbols","getOwnPropertyNames","_desc$get","readPropFromProto","currentState","Number","isNaN","deleteProperty","owner","fn","arguments","parseInt","Immer","config","recipe","defaultBase","self","produce","hasError","Promise","then","ip","produceWithPatches","nextState","useProxies","setUseProxies","autoFreeze","setAutoFreeze","createDraft","finishDraft","applyPatches","applyPatchesImpl","bind"],"version":3,"file":"index.975ef6c8.js.map","sourceRoot":"/__parcel_source_root/"}